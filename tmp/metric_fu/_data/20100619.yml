--- 
:churn: 
  :method_churn: []

  :changed_files: []

  :changed_classes: []

  :changes: 
  - :file_path: config/routes.rb
    :times_changed: 25
  - :file_path: db/schema.rb
    :times_changed: 25
  - :file_path: app/controllers/precincts_controller.rb
    :times_changed: 22
  - :file_path: app/helpers/application_helper.rb
    :times_changed: 19
  - :file_path: app/ttv/yaml_import.rb
    :times_changed: 19
  - :file_path: app/views/contests/_contest_list.html.erb
    :times_changed: 18
  - :file_path: test/unit/question_test.rb
    :times_changed: 17
  - :file_path: app/views/elections/show.html.erb
    :times_changed: 17
  - :file_path: app/views/ballot_style_templates/edit.html.erb
    :times_changed: 16
  - :file_path: app/controllers/elections_controller.rb
    :times_changed: 16
  - :file_path: test/unit/yaml_import_test.rb
    :times_changed: 16
  - :file_path: app/views/layouts/application.html.erb
    :times_changed: 16
  - :file_path: test/unit/contest_test.rb
    :times_changed: 15
  - :file_path: app/ttv/import_export.rb
    :times_changed: 15
  - :file_path: test/test_helper.rb
    :times_changed: 15
  - :file_path: config/environment.rb
    :times_changed: 14
  - :file_path: app/models/election.rb
    :times_changed: 13
  - :file_path: test/unit/yaml_xml_equivalency_test.rb
    :times_changed: 13
  - :file_path: app/controllers/contests_controller.rb
    :times_changed: 12
  - :file_path: app/views/ballot_style_templates/new.html.erb
    :times_changed: 11
  - :file_path: lib/tasks/ttv.rake
    :times_changed: 11
  - :file_path: features/manage_elections.feature
    :times_changed: 11
  - :file_path: test/unit/yaml_export_test.rb
    :times_changed: 10
  - :file_path: app/views/precincts/_precinct_list.html.erb
    :times_changed: 9
  - :file_path: app/models/ability.rb
    :times_changed: 9
  - :file_path: app/views/elections/index.html.erb
    :times_changed: 9
  - :file_path: app/views/contests/_form.html.erb
    :times_changed: 8
  - :file_path: .gitignore
    :times_changed: 8
  - :file_path: app/models/precinct.rb
    :times_changed: 8
  - :file_path: public/stylesheets/web_app_theme_override.css
    :times_changed: 8
  - :file_path: app/views/elections/_form.html.erb
    :times_changed: 8
  - :file_path: test/shoulda_macros/ttv_contexts.rb
    :times_changed: 8
  - :file_path: app/ttv/yaml_export.rb
    :times_changed: 8
  - :file_path: features/support/paths.rb
    :times_changed: 8
  - :file_path: README
    :times_changed: 8
  - :file_path: app/models/question.rb
    :times_changed: 7
  - :file_path: test/unit/question_complex_test.rb
    :times_changed: 7
  - :file_path: app/views/elections/_election_list.html.erb
    :times_changed: 7
  - :file_path: config/environments/test.rb
    :times_changed: 7
  - :file_path: test/functional/users_controller_test.rb
    :times_changed: 6
  - :file_path: app/ttv/abstract_ballot.rb
    :times_changed: 6
  - :file_path: test/unit/precinct_test.rb
    :times_changed: 6
  - :file_path: app/models/user.rb
    :times_changed: 6
  - :file_path: app/controllers/application_controller.rb
    :times_changed: 6
  - :file_path: app/controllers/questions_controller.rb
    :times_changed: 6
  - :file_path: app/controllers/maintain_controller.rb
    :times_changed: 6
  - :file_path: app/views/ballot_style_templates/index.html.erb
    :times_changed: 6
  - :file_path: app/ballots/default/ballot_config.rb
    :times_changed: 6
  - :file_path: app/controllers/users_controller.rb
    :times_changed: 6
  - :file_path: app/views/ballot_style_templates/show.html.erb
    :times_changed: 6
  - :file_path: features/step_definitions/election_steps.rb
    :times_changed: 5
  - :file_path: test/elections/TX_ballot_config.yml
    :times_changed: 5
  - :file_path: app/views/elections/_sidebar.html.erb
    :times_changed: 5
  - :file_path: app/controllers/jurisdiction_controller.rb
    :times_changed: 5
  - :file_path: features/user_registration.feature
    :times_changed: 5
  - :file_path: app/views/districts/_form.html.erb
    :times_changed: 5
  - :file_path: app/views/application/index.html.erb
    :times_changed: 5
  - :file_path: app/views/contests/index.html.erb
    :times_changed: 5
  - :file_path: test/elections/fl/Baker 01.1.yml
    :times_changed: 5
  - :file_path: app/views/jurisdiction/change_jurisdiction.html.erb
    :times_changed: 5
  - :file_path: app/models/candidate.rb
    :times_changed: 5
  - :file_path: test/unit/guest_user_test.rb
    :times_changed: 5
  - :file_path: app/views/jurisdiction/_form.html.erb
    :times_changed: 4
  - :file_path: test/functional/elections_controller_test.rb
    :times_changed: 4
  - :file_path: app/controllers/ballot_styles_controller.rb
    :times_changed: 4
  - :file_path: test/unit/import_export_test.rb
    :times_changed: 4
  - :file_path: test/elections/Albany.yml
    :times_changed: 4
  - :file_path: features/step_definitions/user_steps.rb
    :times_changed: 4
  - :file_path: app/ballots/nh/ballot_config.rb
    :times_changed: 4
  - :file_path: features/manage_context.feature
    :times_changed: 4
  - :file_path: test/unit/user_context_test.rb
    :times_changed: 4
  - :file_path: db/migrate/20100415031322_rename_question_requesting_district.rb
    :times_changed: 4
  - :file_path: app/views/candidates/index.html.erb
    :times_changed: 4
  - :file_path: test/elections/xml/101.26.yml
    :times_changed: 4
  - :file_path: app/views/contests/show.html.erb
    :times_changed: 4
  - :file_path: features/user_navigation.feature
    :times_changed: 4
  - :file_path: app/models/user_context.rb
    :times_changed: 4
  - :file_path: features/display_elections.feature
    :times_changed: 4
  - :file_path: app/views/district_sets/_form.html.erb
    :times_changed: 4
  - :file_path: app/models/contest.rb
    :times_changed: 4
  - :file_path: test/functional/elections_access_test.rb
    :times_changed: 4
  - :file_path: test/unit/user_role_test.rb
    :times_changed: 4
  - :file_path: features/step_definitions/web_steps_ext.rb
    :times_changed: 4
  - :file_path: app/views/questions/new.html.erb
    :times_changed: 4
  - :file_path: test/elections/generated.yml
    :times_changed: 4
  - :file_path: test/functional/users_mock_controller_test.rb
    :times_changed: 4
  - :file_path: app/views/jurisdiction/show.html.erb
    :times_changed: 4
  - :file_path: test/elections/xml/1.yml
    :times_changed: 4
  - :file_path: test/elections/nh/Odell.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Dorchester.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Sugar Hill.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Effingham.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Pittsfield.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Franklin - Ward 1.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Martin's Location.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Wakefield.yml
    :times_changed: 3
  - :file_path: test/blueprints.rb
    :times_changed: 3
  - :file_path: test/elections/nh/Hampton Falls.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Newbury.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Waterville Valley.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Nottingham.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Milford.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Errol.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Weare.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Barnstead.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Windham.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Canterbury.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Clarksville.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Londonderry.yml
    :times_changed: 3
  - :file_path: test/elections/nh/New Ipswich.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Claremont - Ward 3.yml
    :times_changed: 3
  - :file_path: app/views/jurisdiction/_election_list.html.erb
    :times_changed: 3
  - :file_path: test/elections/nh/Keene - Ward 5.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Windsor.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Franklin - Ward 3.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Claremont - Ward 1.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Randolph.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Northwood.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Mont Vernon.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Keene - Ward 3.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Hill.yml
    :times_changed: 3
  - :file_path: app/views/candidates/_form.html.erb
    :times_changed: 3
  - :file_path: test/elections/nh/Gilford.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Springfield.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Salisbury.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Bennington.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Laconia - Ward 2.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Westmoreland.yml
    :times_changed: 3
  - :file_path: db/samples/BestDaddy2009.xml
    :times_changed: 3
  - :file_path: test/elections/nh/Greenland.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Bristol.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Rumney.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Wentworth.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Fremont.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Andover.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Berlin - Ward 2.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Sullivan.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Benton.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Pelham.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Ossipee.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Manchester - Ward 12.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Temple.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Bradford.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Durham.yml
    :times_changed: 3
  - :file_path: app/models/voting_method.rb
    :times_changed: 3
  - :file_path: test/elections/nh/Francestown.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Amherst.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Manchester - Ward 1.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Hooksett.yml
    :times_changed: 3
  - :file_path: app/models/party.rb
    :times_changed: 3
  - :file_path: test/elections/nh/Colebrook.yml
    :times_changed: 3
  - :file_path: app/views/jurisdiction/_sidebar.html.erb
    :times_changed: 3
  - :file_path: test/elections/nh/Stratford.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Hampton.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Concord - Ward 1.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Albany.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Unity.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Dover - Ward 6.yml
    :times_changed: 3
  - :file_path: app/models/user_role.rb
    :times_changed: 3
  - :file_path: test/elections/nh/Manchester - Ward 6.yml
    :times_changed: 3
  - :file_path: app/ttv/pdf_ballot_style.rb
    :times_changed: 3
  - :file_path: test/elections/nh/Dover - Ward 4.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Chichester.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Ellsworth.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Hampstead.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Swanzey.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Troy.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Manchester - Ward 4.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Thompson & Meserve's Purchase.yml
    :times_changed: 3
  - :file_path: test/elections/nh/New Boston.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Second College Grant.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Low & Burbank's Grant.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Milton.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Erving's Location.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Nashua - Ward 4.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Plainfield.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Portsmouth - Ward 5.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Bow.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Rochester - Ward 6.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Sutton.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Nashua - Ward 2.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Somersworth - Ward 4.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Grafton.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Concord - Ward 6.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Goffstown.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Madbury.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Hancock.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Portsmouth - Ward 3.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Canaan.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Concord - Ward 4.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Somersworth - Ward 2.yml
    :times_changed: 3
  - :file_path: app/controllers/jurisd_elections_controller.rb
    :times_changed: 3
  - :file_path: test/elections/nh/Lyman.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Alstead.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Kingston.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Warren.yml
    :times_changed: 3
  - :file_path: app/views/district_sets/new.html.erb
    :times_changed: 3
  - :file_path: test/elections/nh/Mason.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Rindge.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Hanover.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Peterborough.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Bean's Purchase.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Wentworth's Location.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Hopkinton.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Tamworth.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Manchester - Ward 11.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Monroe.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Epping.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Acworth.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Loudon.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Lebanon - Ward 1.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Alton.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Hollis.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Concord - Ward 7.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Brentwood.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Newton.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Laconia - Ward 4.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Laconia - Ward 5.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Cornish.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Eaton.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Seabrook.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Dunbarton.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Concord - Ward 10.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Danbury.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Derry.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Winchester.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Chandler's Purchase.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Middleton.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Nashua - Ward 5.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Strafford.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Kilkenny.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Atkinson.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Bethlehem.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Rochester - Ward 5.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Wilton.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Webster.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Pinkham's Grant.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Piermont.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Bedford.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Nashua - Ward 9.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Washington.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Hebron.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Bath.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Manchester - Ward 2.yml
    :times_changed: 3
  - :file_path: app/views/jurisdictions/change.html.erb
    :times_changed: 3
  - :file_path: test/elections/nh/Keene - Ward 2.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Pembroke.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Gorham.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Dixville.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Charlestown.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Goshen.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Sandwich.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Meredith.yml
    :times_changed: 3
  - :file_path: test/unit/user_test.rb
    :times_changed: 3
  - :file_path: test/elections/nh/Cutt's Grant.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Walpole.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Concord - Ward 9.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Laconia - Ward 6.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Conway.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Cambridge.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Lempster.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Whitefield.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Carroll.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Livermore.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Lincoln.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Manchester - Ward 3.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Lee.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Claremont - Ward 2.yml
    :times_changed: 3
  - :file_path: app/views/jurisd_elections/_set_jurisdiction.html.erb
    :times_changed: 3
  - :file_path: app/models/district.rb
    :times_changed: 3
  - :file_path: test/elections/nh/Rye.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Nashua - Ward 7.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Chester.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Surry.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Dover - Ward 3.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Bean's Grant.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Sharon.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Dover - Ward 1.yml
    :times_changed: 3
  - :file_path: app/views/ballot_style_templates/_form.html.erb
    :times_changed: 3
  - :file_path: test/elections/nh/Croydon.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Wolfeboro.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Moultonborough.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Jaffrey.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Green's Grant.yml
    :times_changed: 3
  - :file_path: test/elections/nh/North Hampton.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Shelburne.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Berlin - Ward 1.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Newport.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Sargent's Purchase.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Langdon.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Greenfield.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Bartlett.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Portsmouth - Ward 2.yml
    :times_changed: 3
  - :file_path: app/views/jurisdiction/index.html.erb
    :times_changed: 3
  - :file_path: test/elections/nh/Somersworth - Ward 1.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Ashland.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Brookline.yml
    :times_changed: 3
  - :file_path: features/step_definitions/jurisdictions_steps.rb
    :times_changed: 3
  - :file_path: test/elections/nh/Deering.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Tuftonboro.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Nelson.yml
    :times_changed: 3
  - :file_path: app/views/jurisd_elections/list_elections.html.erb
    :times_changed: 3
  - :file_path: app/views/candidates/show.html.erb
    :times_changed: 3
  - :file_path: test/elections/nh/Northumberland.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Stoddard.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Manchester - Ward 7.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Manchester - Ward 5.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Rochester - Ward 3.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Berlin - Ward 4.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Plaistow.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Lebanon - Ward 2.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Wilmot.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Stratham.yml
    :times_changed: 3
  - :file_path: test/shoulda_macros/ttv_macros.rb
    :times_changed: 3
  - :file_path: test/elections/nh/Candia.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Marlborough.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Nashua - Ward 3.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Columbia.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Sunapee.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Concord - Ward 5.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Nashua - Ward 1.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Dummer.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Danville.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Concord - Ward 3.yml
    :times_changed: 3
  - :file_path: db/seeds.rb
    :times_changed: 3
  - :file_path: test/elections/nh/Exeter.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Rollinsford.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Manchester - Ward 9.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Rochester - Ward 4.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Tilton.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Manchester - Ward 8.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Rochester - Ward 2.yml
    :times_changed: 3
  - :file_path: app/views/jurisdiction/new.html.erb
    :times_changed: 3
  - :file_path: test/elections/nh/Nashua - Ward 8.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Nashua - Ward 6.yml
    :times_changed: 3
  - :file_path: app/views/district_sets/edit.html.erb
    :times_changed: 3
  - :file_path: test/elections/nh/New Castle.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Concord - Ward 8.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Richmond.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Success.yml
    :times_changed: 3
  - :file_path: app/views/jurisdiction/unused/index.html.erb
    :times_changed: 3
  - :file_path: test/elections/nh/Deerfield.yml
    :times_changed: 3
  - :file_path: test/elections/ballot_config.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Groton.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Campton.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Roxbury.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Jefferson.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Manchester - Ward 10.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Hadley's Purchase.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Henniker.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Stewartstown.yml
    :times_changed: 3
  - :file_path: app/views/jurisdiction/edit.html.erb
    :times_changed: 3
  - :file_path: test/elections/nh/Lyme.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Lisbon.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Northfield.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Lancaster.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Easton.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Newmarket.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Lebanon - Ward 3.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Lyndeborough.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Salem.yml
    :times_changed: 3
  - :file_path: app/views/district_sets/show.html.erb
    :times_changed: 3
  - :file_path: test/elections/nh/Belmont.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Hart's Location.yml
    :times_changed: 3
  - :file_path: app/views/elections/new.html.erb
    :times_changed: 3
  - :file_path: app/views/application/_admin_toolbox.html.erb
    :times_changed: 3
  - :file_path: test/elections/nh/Antrim.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Center Harbor.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Grantham.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Hudson.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Orford.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Dalton.yml
    :times_changed: 3
  - :file_path: app/views/jurisdiction/unused/_sidebar.html.erb
    :times_changed: 3
  - :file_path: test/elections/nh/Keene - Ward 1.yml
    :times_changed: 3
  - :file_path: db/seed/once/ballot_style_templates.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Greenville.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Pittsburg.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Plymouth.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Holderness.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Hinsdale.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Laconia - Ward 3.yml
    :times_changed: 3
  - :file_path: config/environments/cucumber.rb
    :times_changed: 3
  - :file_path: test/elections/nh/Madison.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Warner.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Franklin - Ward 2.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Gilmanton.yml
    :times_changed: 3
  - :file_path: features/manage_users.feature
    :times_changed: 3
  - :file_path: test/elections/nh/Chatham.yml
    :times_changed: 3
  - :file_path: test/elections/nh/East Kingston.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Fitzwilliam.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Millsfield.yml
    :times_changed: 3
  - :file_path: test/functional/login_test.rb
    :times_changed: 3
  - :file_path: test/elections/nh/Atkinson & Gilmanton Academy Grant.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Somersworth - Ward 3.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Raymond.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Haverhill.yml
    :times_changed: 3
  - :file_path: test/elections/nh/New London.yml
    :times_changed: 3
  - :file_path: test/elections/nh/New Hampton.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Keene - Ward 4.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Kensington.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Crawford's Purchase.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Enfield.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Brookfield.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Farmington.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Dix's Grant.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Boscawen.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Gilsum.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Newfields.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Auburn.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Portsmouth - Ward 4.yml
    :times_changed: 3
  - :file_path: test/functional/jurisd_elections_controller_test.rb
    :times_changed: 3
  - :file_path: test/elections/nh/Landaff.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Marlow.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Berlin - Ward 3.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Freedom.yml
    :times_changed: 3
  - :file_path: app/views/ballot_styles/edit.html.erb
    :times_changed: 3
  - :file_path: test/elections/nh/Laconia - Ward 1.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Somersworth - Ward 5.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Dover - Ward 2.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Milan.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Epsom.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Sanbornton.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Chesterfield.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Jackson.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Dublin.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Merrimack.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Bridgewater.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Litchfield.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Woodstock.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Harrisville.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Rochester - Ward 1.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Allenstown.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Hillsborough.yml
    :times_changed: 3
  - :file_path: app/models/district_set.rb
    :times_changed: 3
  - :file_path: test/elections/nh/Newington.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Stark.yml
    :times_changed: 3
  - :file_path: features/support/pickle.rb
    :times_changed: 3
  - :file_path: test/elections/nh/Barrington.yml
    :times_changed: 3
  - :file_path: test/elections/nh/New Durham.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Littleton.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Portsmouth - Ward 1.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Franconia.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Concord - Ward 2.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Sandown.yml
    :times_changed: 3
  - :file_path: test/elections/nh/South Hampton.yml
    :times_changed: 3
  - :file_path: features/support/env.rb
    :times_changed: 3
  - :file_path: test/elections/tiny.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Thornton.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Hale's Location.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Orange.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Alexandria.yml
    :times_changed: 3
  - :file_path: test/elections/nh/Dover - Ward 5.yml
    :times_changed: 3
  :changed_methods: []

  :class_churn: []

:rcov: 
  app/helpers/media_helper.rb: 
    :lines: 
    - :was_run: true
      :content: "   module MediaHelper"
    - :was_run: true
      :content: "   end"
    :percent_run: 100
  app/models/candidate.rb: 
    :lines: 
    - :was_run: true
      :content: "   # == Schema Information"
    - :was_run: true
      :content: "   # Schema version: 20100215144641"
    - :was_run: true
      :content: "   #"
    - :was_run: true
      :content: "   # Table name: candidates"
    - :was_run: true
      :content: "   #"
    - :was_run: true
      :content: "   #  id           :integer         not null, primary key"
    - :was_run: true
      :content: "   #  display_name :string(255)"
    - :was_run: true
      :content: "   #  party_id     :integer"
    - :was_run: true
      :content: "   #  contest_id   :integer"
    - :was_run: true
      :content: "   #  created_at   :datetime"
    - :was_run: true
      :content: "   #  updated_at   :datetime"
    - :was_run: true
      :content: "   #  ident        :string(255)"
    - :was_run: true
      :content: "   #"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "   class Candidate < ActiveRecord::Base"
    - :was_run: true
      :content: "     belongs_to :contest"
    - :was_run: true
      :content: "     belongs_to :party"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     attr_accessible :order, :ident"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     validates_presence_of :ident"
    - :was_run: true
      :content: "     validates_uniqueness_of :ident, :message => \"Non-unique candidate ident attempted: {{value}}.\""
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     # Make sure that ident is not nil. If it is, create a unique one."
    - :was_run: true
      :content: "     def before_validation"
    - :was_run: true
      :content: "       if self.blank? || self.ident.blank?"
    - :was_run: true
      :content: "         self.ident = \"cand-#{ActiveSupport::SecureRandom.hex}\""
    - :was_run: true
      :content: "         self.save!"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     attr_accessible :display_name, :party_id, :contest_id"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     validates_presence_of :display_name"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     # default values, should not be all republican/democrat"
    - :was_run: true
      :content: "     def after_initialize"
    - :was_run: true
      :content: "     #  write_attribute(:party_id, rand(3)) if !party_id"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     def validate"
    - :was_run: true
      :content: "      # errors.add(:display_name , \"must start with an A\") unless display_name.start_with? \"A\""
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "   end"
    :percent_run: 100
  app/controllers/application_controller.rb: 
    :lines: 
    - :was_run: true
      :content: "   # Filters added to this controller apply to all controllers in the application."
    - :was_run: true
      :content: "   # Likewise, all the methods added will be available for all controllers."
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "   class ApplicationController < ActionController::Base"
    - :was_run: true
      :content: "     helper :all # include all helpers, all the time"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     # See ActionController::RequestForgeryProtection for details"
    - :was_run: true
      :content: "     protect_from_forgery "
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     # Scrub sensitive parameters from your log"
    - :was_run: true
      :content: "     filter_parameter_logging :password,:confirm_password"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     helper_method :current_user, :pretty_date, :pluralize, :current_context"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     before_filter :disable_etags"
    - :was_run: true
      :content: "     after_filter :flash_xhr"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     rescue_from CanCan::AccessDenied do |exception|"
    - :was_run: true
      :content: "       flash[:error] = \"Access Denied\""
    - :was_run: true
      :content: "       redirect_to root_url"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     def disable_etags"
    - :was_run: true
      :content: "       # TODO remove this function when in production"
    - :was_run: true
      :content: "       fresh_when(:etag => rand)"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     def current_context"
    - :was_run: true
      :content: "       @user_context ||= UserContext.new(session)"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     private"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def pluralize(count, singular, plural = nil)"
    - :was_run: false
      :content: "       \"#{count || 0} \" + ((count == 1 || count == '1') ? singular : (plural || singular.pluralize))"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     # displays flash errors for Ajax requests"
    - :was_run: true
      :content: "     def flash_xhr"
    - :was_run: true
      :content: "       return if ! (request.xhr? && Mime::Type.lookup(response.content_type) == :js)"
    - :was_run: false
      :content: "       headers['X-JSON'] = flash.to_json;"
    - :was_run: false
      :content: "       flash.discard"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     def pretty_date(d)"
    - :was_run: true
      :content: "       return d.strftime(\"%A, %B %d %Y, %I:%M %p %Z\") if d.respond_to? :strftime"
    - :was_run: true
      :content: "       return d.to_s unless d.nil?"
    - :was_run: true
      :content: "       return \"unspecified date\""
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     # "
    - :was_run: true
      :content: "     # Authlogic authenticatoin methods"
    - :was_run: true
      :content: "     #"
    - :was_run: true
      :content: "     #authlogic"
    - :was_run: true
      :content: "     def current_user_session"
    - :was_run: true
      :content: "       return @current_user_session if defined?(@current_user_session)"
    - :was_run: true
      :content: "       @current_user_session = UserSession.find"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     #authlogic"
    - :was_run: true
      :content: "     def current_user"
    - :was_run: true
      :content: "       return @current_user if defined?(@current_user)"
    - :was_run: true
      :content: "       @current_user = current_user_session && current_user_session.record"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     #authlogic"
    - :was_run: true
      :content: "     def require_user"
    - :was_run: true
      :content: "       unless current_user"
    - :was_run: true
      :content: "         store_location"
    - :was_run: true
      :content: "         flash[:notice]    = \"You must be logged in to access this page\""
    - :was_run: true
      :content: "         redirect_to new_user_session_url"
    - :was_run: true
      :content: "         return false"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     #authlogic"
    - :was_run: true
      :content: "     def require_no_user"
    - :was_run: true
      :content: "       if current_user"
    - :was_run: true
      :content: "         store_location"
    - :was_run: true
      :content: "         flash[:notice]    = \"You must be logged out to access this page\""
    - :was_run: true
      :content: "         redirect_to account_url"
    - :was_run: true
      :content: "         return false"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     #authlogic"
    - :was_run: true
      :content: "     def store_location"
    - :was_run: true
      :content: "       session[:return_to] = request.request_uri"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     #authlogic"
    - :was_run: true
      :content: "     def redirect_back_or_default(default)"
    - :was_run: true
      :content: "       redirect_to(session[:return_to] || default)"
    - :was_run: true
      :content: "       session[:return_to] = nil"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "   end"
    :percent_run: 95
  app/controllers/voting_methods_controller.rb: 
    :lines: 
    - :was_run: true
      :content: "   class VotingMethodsController < ApplicationController"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def index"
    - :was_run: true
      :content: "       @voting_methods = VotingMethod.all"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def show"
    - :was_run: false
      :content: "       @voting_method = VotingMethod.find(params[:id])"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def new"
    - :was_run: true
      :content: "       @voting_method = VotingMethod.new"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def edit"
    - :was_run: false
      :content: "       @voting_method = VotingMethod.find(params[:id])"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def create"
    - :was_run: false
      :content: "       @voting_method = VotingMethod.new(params[:voting_method])"
    - :was_run: false
      :content: "   "
    - :was_run: false
      :content: "       if @voting_method.save"
    - :was_run: false
      :content: "         flash[:notice] = 'VotingMethod was successfully created.'"
    - :was_run: false
      :content: "         redirect_to @voting_method"
    - :was_run: false
      :content: "       else"
    - :was_run: false
      :content: "         render :action => \"new\""
    - :was_run: false
      :content: "       end"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def update"
    - :was_run: false
      :content: "       @voting_method = VotingMethod.find(params[:id])"
    - :was_run: false
      :content: "   "
    - :was_run: false
      :content: "       if @voting_method.update_attributes(params[:voting_method])"
    - :was_run: false
      :content: "         flash[:notice] = 'VotingMethod was successfully updated.'"
    - :was_run: false
      :content: "         redirect_to(@voting_method) "
    - :was_run: false
      :content: "       else"
    - :was_run: false
      :content: "         render :action => \"edit\" "
    - :was_run: false
      :content: "       end"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def destroy"
    - :was_run: false
      :content: "       @voting_method = VotingMethod.find(params[:id])"
    - :was_run: false
      :content: "       @voting_method.destroy"
    - :was_run: false
      :content: "       redirect_to(voting_methods_url)"
    - :was_run: false
      :content: "     end"
    - :was_run: false
      :content: "   "
    - :was_run: false
      :content: "   end"
    :percent_run: 40
  app/helpers/maintain_helper.rb: 
    :lines: 
    - :was_run: true
      :content: "   module MaintainHelper"
    - :was_run: true
      :content: "   end"
    :percent_run: 100
  app/models/voting_method.rb: 
    :lines: 
    - :was_run: true
      :content: "   # == Schema Information"
    - :was_run: true
      :content: "   # Schema version: 20100215144641"
    - :was_run: true
      :content: "   #"
    - :was_run: true
      :content: "   # Table name: voting_methods"
    - :was_run: true
      :content: "   #"
    - :was_run: true
      :content: "   #  id           :integer         not null, primary key"
    - :was_run: true
      :content: "   #  display_name :string(255)"
    - :was_run: true
      :content: "   #  created_at   :datetime"
    - :was_run: true
      :content: "   #  updated_at   :datetime"
    - :was_run: true
      :content: "   #"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "   class VotingMethod < ActiveRecord::Base"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     include ConstantCache"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     cache_constants :key => :display_name"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def idToXml"
    - :was_run: true
      :content: "       self.display_name.downcase"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def VotingMethod.xmlToId(xml)"
    - :was_run: true
      :content: "       raise \"illegal voting method #{xml}\" unless const_get(xml.constant_name)"
    - :was_run: true
      :content: "       const_get(xml.constant_name).id"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     def to_i"
    - :was_run: true
      :content: "       id"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     def self.determine_default_voting_method(contest)"
    - :was_run: false
      :content: "       VotingMethod.find(contest.election.default_voting_method_id)"
    - :was_run: false
      :content: "     end"
    - :was_run: false
      :content: "     "
    - :was_run: false
      :content: "   end"
    :percent_run: 89
  app/models/ballot_style.rb: 
    :lines: 
    - :was_run: true
      :content: "   class BallotStyle < ActiveRecord::Base"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "   end"
    :percent_run: 100
  app/models/question.rb: 
    :lines: 
    - :was_run: true
      :content: "   # == Schema Information"
    - :was_run: true
      :content: "   # Schema version: 20100215144641"
    - :was_run: true
      :content: "   #"
    - :was_run: true
      :content: "   # Table name: questions"
    - :was_run: true
      :content: "   #"
    - :was_run: true
      :content: "   #  id           :integer         not null, primary key"
    - :was_run: true
      :content: "   #  display_name :string(255)"
    - :was_run: true
      :content: "   #  question     :text"
    - :was_run: true
      :content: "   #  district_id  :integer"
    - :was_run: true
      :content: "   #  election_id  :integer"
    - :was_run: true
      :content: "   #  created_at   :datetime"
    - :was_run: true
      :content: "   #  updated_at   :datetime"
    - :was_run: true
      :content: "   #"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "   class Question < ActiveRecord::Base"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     belongs_to  :requesting_district, :class_name => 'District'"
    - :was_run: true
      :content: "     belongs_to :election"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     attr_accessible :display_name, :question, :district_id , :election_id"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     validates_presence_of :display_name, :question, :requesting_district_id, :election_id"
    - :was_run: true
      :content: "     validates_numericality_of :requesting_district_id, :election_id"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def to_s"
    - :was_run: false
      :content: "       \"QUESTION: #{self.display_name}\""
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def self.questions_for_precinct_election(p, e)"
    - :was_run: true
      :content: "       d = p.districts_for_election(e)"
    - :was_run: true
      :content: "       e.questions.map do |q|"
    - :was_run: true
      :content: "         q if d.include?(q.requesting_district)      "
    - :was_run: false
      :content: "       end.flatten.compact"
    - :was_run: false
      :content: "     end"
    - :was_run: false
      :content: "     "
    - :was_run: false
      :content: "   end"
    :percent_run: 83
  app/helpers/voting_methods_helper.rb: 
    :lines: 
    - :was_run: true
      :content: "   module VotingMethodsHelper"
    - :was_run: true
      :content: "   end"
    :percent_run: 100
  app/helpers/ballot_style_templates_helper.rb: 
    :lines: 
    - :was_run: true
      :content: "   module BallotStyleTemplatesHelper"
    - :was_run: true
      :content: "   end"
    :percent_run: 100
  app/helpers/application_helper.rb: 
    :lines: 
    - :was_run: true
      :content: "   # Methods added to this helper will be available to all templates in the application."
    - :was_run: true
      :content: "   module ApplicationHelper"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     # Nice styling of error messages"
    - :was_run: true
      :content: "     def render_error_messages(model, options={})"
    - :was_run: true
      :content: "       options = { :verbose => false }.merge(options)"
    - :was_run: true
      :content: "       messages = model.errors.full_messages #objects.compact.map { |o| o.errors.full_messages}.flatten"
    - :was_run: true
      :content: "       render :partial => 'layouts/error_messages', :object => messages, "
    - :was_run: true
      :content: "         :locals => { :options => options, :model => model} unless messages.empty?"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     #"
    - :was_run: true
      :content: "     # Pretty print objects, to be used in views"
    - :was_run: true
      :content: "     #"
    - :was_run: true
      :content: "     def pp_debug(obj)"
    - :was_run: false
      :content: "       '<pre>' +"
    - :was_run: false
      :content: "       h(obj.pretty_inspect) +"
    - :was_run: false
      :content: "       '</pre>'"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def icon_helper"
    - :was_run: true
      :content: "       curr_jurisd = current_context.jurisdiction"
    - :was_run: true
      :content: "       if curr_jurisd.nil? or !DistrictSet.find(curr_jurisd).icon?"
    - :was_run: true
      :content: "         link_to(image_tag(\"ttv-100.png\", :class => \"ttv-logo\"), :current_jurisdictions)"
    - :was_run: false
      :content: "       else"
    - :was_run: false
      :content: "         link_to(image_tag(DistrictSet.find(curr_jurisd).icon.url(:thumb), :class => \"ttv-logo\"), :current_jurisdictions)"
    - :was_run: false
      :content: "       end"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def icon_for district_set"
    - :was_run: true
      :content: "      return image_tag(\"ttv-100.png\", :class =>\"avatar\") unless district_set.icon?"
    - :was_run: false
      :content: "      return image_tag(district_set.icon.url(:thumb), :class => \"avatar\") if district_set.icon?"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def link_icon_for district_set"
    - :was_run: false
      :content: "       link_to(icon_for(district_set), set_jurisdiction_path(district_set))"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     # HTML for header that is over all pages"
    - :was_run: true
      :content: "     def header_helper"
    - :was_run: true
      :content: "       jurisdiction_name = current_context.jurisdiction_name"
    - :was_run: true
      :content: "       jurisdiction_secondary = current_context.jurisdiction_secondary_name"
    - :was_run: true
      :content: "       "
    - :was_run: true
      :content: "       if current_user() and current_context.jurisdiction?"
    - :was_run: true
      :content: "         content_tag(:h1, jurisdiction_name +"
    - :was_run: true
      :content: "                         \"<br /><small>\" + jurisdiction_secondary + \"</small>\", :class=>\"title-header\")"
    - :was_run: true
      :content: "       else"
    - :was_run: true
      :content: "         content_tag(:h1, \"TTV Election Manager\", :class=>\"title-header\") "
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "       "
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     # HTML for top right user navigation bar where login etc live"
    - :was_run: true
      :content: "     def user_navigation_helper"
    - :was_run: true
      :content: "       jurisdiction_name = current_context.jurisdiction_name"
    - :was_run: true
      :content: "       content_tag(:div, :class =>\"banner_right\") do"
    - :was_run: true
      :content: "         content_tag(:ul, :class => \"wat-cf\") do"
    - :was_run: true
      :content: "           if current_user()"
    - :was_run: true
      :content: "             content_tag(:li, jurisdiction_name + \" \" + link_to(\" (change)\", change_jurisdictions_path)) +"
    - :was_run: true
      :content: "             content_tag(:li) { current_user.email } + "
    - :was_run: true
      :content: "             content_tag(:li) { link_to(\"Edit profile\", edit_user_path(current_user)) } +"
    - :was_run: true
      :content: "             content_tag(:li) { link_to(\"Logout\", logout_path) }"
    - :was_run: true
      :content: "           else"
    - :was_run: true
      :content: "             content_tag(:li) { link_to(\"Login\", login_path) } + "
    - :was_run: true
      :content: "             content_tag(:li) { link_to(\"Register\", register_user_path) }"
    - :was_run: true
      :content: "           end"
    - :was_run: true
      :content: "         end"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     # HTML for nicely styled buttons in forms"
    - :was_run: true
      :content: "     def button_link_helper(image_file, alt_tag, button_label, link_path, delete=nil)"
    - :was_run: true
      :content: "       options = {}"
    - :was_run: true
      :content: "       if (delete == :delete)"
    - :was_run: true
      :content: "         options = {:method => \"delete\", :confirm => \"#{t(\"web-app-theme.confirm\", :default => \"Are you sure?\")}\"}"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "       link_to(\"#{image_tag(image_file, :alt => alt_tag)} #{button_label}\", link_path, {:class => \"button\"}.merge(options))"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     # HTML for breadcrums"
    - :was_run: true
      :content: "     def breadcrumb_helper(cc)"
    - :was_run: true
      :content: "       html = \"\""
    - :was_run: true
      :content: "       jur_link = \"\""
    - :was_run: true
      :content: "       el_link = \"\""
    - :was_run: true
      :content: "       c_or_q_or_p_link = \"\""
    - :was_run: true
      :content: "       if cc.contest?"
    - :was_run: false
      :content: "         c_or_q_or_p_link = link_to(cc.contest.display_name, cc.contest)"
    - :was_run: false
      :content: "       end"
    - :was_run: true
      :content: "       if cc.question?"
    - :was_run: false
      :content: "         c_or_q_or_p_link = link_to(cc.question.display_name, cc.question)"
    - :was_run: false
      :content: "       end"
    - :was_run: true
      :content: "       if cc.precinct?"
    - :was_run: false
      :content: "         c_or_q_or_p_link = link_to(cc.precinct.display_name, cc.precinct)"
    - :was_run: false
      :content: "       end"
    - :was_run: true
      :content: "       if cc.election?"
    - :was_run: true
      :content: "         el_link = link_to(cc.election.display_name, cc.election)"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "       if cc.jurisdiction?"
    - :was_run: true
      :content: "         jur_link = link_to(cc.jurisdiction.display_name, set_jurisdiction_path(cc.jurisdiction))"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "       if c_or_q_or_p_link != \"\""
    - :was_run: false
      :content: "         html = c_or_q_or_p_link + \" <small> (in \" + el_link + \" in \" + jur_link + \" )</small>\""
    - :was_run: true
      :content: "       elsif el_link != \"\""
    - :was_run: true
      :content: "         html = el_link + \" <small> (in \" + jur_link + \" )</small>\""
    - :was_run: true
      :content: "       elsif jur_link"
    - :was_run: true
      :content: "         html = jur_link"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "       content_tag(:h4, html)"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "   end"
    :percent_run: 83
  app/helpers/parties_helper.rb: 
    :lines: 
    - :was_run: true
      :content: "   module PartiesHelper"
    - :was_run: true
      :content: "   end"
    :percent_run: 100
  app/ttv/yaml_import.rb: 
    :lines: 
    - :was_run: true
      :content: "   require 'yaml'"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "   module TTV"
    - :was_run: true
      :content: "     # Import Yaml-based election using standard formats, and convert as needed to Election and related objects."
    - :was_run: true
      :content: "     class YAMLImport"
    - :was_run: true
      :content: "       attr_reader :yml_election, :election, :dist_set"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "   # <tt>source::</tt> File object for file containing yaml text"
    - :was_run: true
      :content: "       def initialize(source)"
    - :was_run: true
      :content: "         @source = source"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "   #"
    - :was_run: true
      :content: "   # Is the .yml being imported of type 'ballot_config\"? Ballot_config's have less stringent"
    - :was_run: true
      :content: "   # validation and get connected to the 'default built-in district' etc."
    - :was_run: true
      :content: "       def ballot_config?"
    - :was_run: true
      :content: "         if @yml_election[\"audit_header\"].nil?"
    - :was_run: true
      :content: "           return false"
    - :was_run: true
      :content: "         else"
    - :was_run: true
      :content: "           return @yml_election[\"audit_header\"][\"type\"] == \"ballot_config\""
    - :was_run: true
      :content: "         end"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "   # Do the whole import process. Main entry point."
    - :was_run: true
      :content: "       def import"
    - :was_run: true
      :content: "         @dist_id_map = {}"
    - :was_run: true
      :content: "         @yml_election = YAML.load(@source)"
    - :was_run: true
      :content: "         ActiveRecord::Base.transaction do"
    - :was_run: true
      :content: "           @dist_set = create_district_set"
    - :was_run: true
      :content: "           if @yml_election[\"ballot_info\"].nil?"
    - :was_run: false
      :content: "             puts \"No ballot information -- invalid yml\""
    - :was_run: false
      :content: "             pp @yml_election"
    - :was_run: false
      :content: "             raise \"Invalid YAML election. See console for details.\""
    - :was_run: false
      :content: "           end"
    - :was_run: true
      :content: "           @election = Election.create(:display_name => @yml_election[\"ballot_info\"][\"display_name\"])"
    - :was_run: true
      :content: "           if @yml_election[\"ballot_info\"][\"start_date\"].nil?"
    - :was_run: true
      :content: "                @election.start_date = Time.now"
    - :was_run: true
      :content: "           else"
    - :was_run: true
      :content: "             @election.start_date = Date.parse(@yml_election[\"ballot_info\"][\"start_date\"].to_s)"
    - :was_run: true
      :content: "           end"
    - :was_run: true
      :content: "           @election.district_set = @dist_set"
    - :was_run: true
      :content: "           @election.save"
    - :was_run: true
      :content: "           if @yml_election[\"ballot_info\"][\"precinct_list\"].nil?"
    - :was_run: false
      :content: "               puts \"Invalid yml doesn't contain precinct_list\""
    - :was_run: false
      :content: "               pp @yml_election"
    - :was_run: false
      :content: "               raise \"Invalid YAML election. See console for details.\""
    - :was_run: true
      :content: "           elsif @yml_election[\"ballot_info\"][\"contest_list\"].nil?          "
    - :was_run: false
      :content: "               puts \"Invalid yml doesn't contain contest_list\""
    - :was_run: false
      :content: "               pp @yml_election"
    - :was_run: false
      :content: "               raise \"Invalid YAML election. See console for details.\""
    - :was_run: false
      :content: "           end"
    - :was_run: true
      :content: "           @yml_election[\"ballot_info\"][\"precinct_list\"].each { |prec| load_precinct prec}            "
    - :was_run: true
      :content: "           @yml_election[\"ballot_info\"][\"contest_list\"].each { |yml_contest| load_contest yml_contest}"
    - :was_run: true
      :content: "           @yml_election[\"ballot_info\"][\"question_list\"].each { |yml_question| load_question yml_question} unless @yml_election[\"ballot_info\"][\"question_list\"].nil?"
    - :was_run: true
      :content: "         end"
    - :was_run: true
      :content: "         @election"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "       "
    - :was_run: true
      :content: "       "
    - :was_run: true
      :content: "       def import_batch"
    - :was_run: true
      :content: "           @dist_id_map = {}"
    - :was_run: true
      :content: "           yaml_dir = Dir.new(@source)"
    - :was_run: true
      :content: "           yaml_dir.each do |yaml_file|"
    - :was_run: true
      :content: "             if yaml_file[yaml_file.length - 3..yaml_file.length] == 'yml'"
    - :was_run: true
      :content: "               new_file = File.new(\"#{@source}/#{yaml_file}\", \"r\")"
    - :was_run: true
      :content: "               @yml_election = YAML.load(new_file)"
    - :was_run: true
      :content: "               ActiveRecord::Base.transaction do"
    - :was_run: true
      :content: "                 @dist_set = create_district_set"
    - :was_run: true
      :content: "                 if @yml_election[\"ballot_info\"].nil?"
    - :was_run: false
      :content: "                   puts \"No ballot information -- invalid yml\""
    - :was_run: false
      :content: "                   pp @yml_election"
    - :was_run: false
      :content: "                   raise \"Invalid YAML election. See console for details.\""
    - :was_run: false
      :content: "                 end"
    - :was_run: true
      :content: "                  @election = Election.create(:display_name =>@yml_election[\"ballot_info\"][\"display_name\"])"
    - :was_run: true
      :content: "                   if @yml_election[\"ballot_info\"][\"start_date\"].nil?"
    - :was_run: true
      :content: "                         @election.start_date = Time.now"
    - :was_run: true
      :content: "                    else"
    - :was_run: true
      :content: "                      @election.start_date = Date.parse(@yml_election[\"ballot_info\"][\"start_date\"].to_s)"
    - :was_run: true
      :content: "                    end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "                   @election.district_set = @dist_set"
    - :was_run: true
      :content: "                   @election.save"
    - :was_run: true
      :content: "                   if @yml_election[\"ballot_info\"][\"precinct_list\"].nil?"
    - :was_run: false
      :content: "                       puts \"Invalid yml doesn't contain precinct_list\""
    - :was_run: false
      :content: "                       pp @yml_election"
    - :was_run: false
      :content: "                       raise \"Invalid YAML election. See console for details.\""
    - :was_run: true
      :content: "                   elsif @yml_election[\"ballot_info\"][\"contest_list\"].nil?          "
    - :was_run: false
      :content: "                       puts \"Invalid yml doesn't contain contest_list\""
    - :was_run: false
      :content: "                       pp @yml_election"
    - :was_run: false
      :content: "                       raise \"Invalid YAML election. See console for details.\""
    - :was_run: false
      :content: "                   end"
    - :was_run: true
      :content: "                   @yml_election[\"ballot_info\"][\"precinct_list\"].each { |prec| load_precinct prec}            "
    - :was_run: true
      :content: "                   @yml_election[\"ballot_info\"][\"contest_list\"].each { |yml_contest| load_contest(yml_contest)}"
    - :was_run: true
      :content: "                   @yml_election[\"ballot_info\"][\"question_list\"].each { |yml_question| load_question yml_question} unless @yml_election[\"ballot_info\"][\"question_list\"].nil?"
    - :was_run: true
      :content: "                   end"
    - :was_run: true
      :content: "                   @election"
    - :was_run: true
      :content: "             end"
    - :was_run: true
      :content: "           end"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       def create_district_set"
    - :was_run: true
      :content: "         if ballot_config?"
    - :was_run: true
      :content: "           DistrictSet.find(0)"
    - :was_run: true
      :content: "         else"
    - :was_run: true
      :content: "           DistrictSet.create(:display_name => @yml_election[\"ballot_info\"][\"jurisdiction_display_name\"])"
    - :was_run: true
      :content: "         end"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "       "
    - :was_run: true
      :content: "   # load another question into Election object"
    - :was_run: true
      :content: "   # <tt>question::</tt>Hash contains single question from yaml"
    - :was_run: true
      :content: "       def load_question yml_question"
    - :was_run: true
      :content: "         if ballot_config?"
    - :was_run: false
      :content: "           dist = District.find(0)"
    - :was_run: true
      :content: "         else"
    - :was_run: true
      :content: "           if yml_question[\"district_ident\"].nil? || @dist_id_map[yml_question[\"district_ident\"]].nil?"
    - :was_run: false
      :content: "             puts \"Error in yaml_import: invalid question\""
    - :was_run: false
      :content: "             pp yml_cont"
    - :was_run: false
      :content: "             raise \"Invalid yaml in question. See console for details.\""
    - :was_run: false
      :content: "           end"
    - :was_run: true
      :content: "           dist = @dist_id_map[yml_question[\"district_ident\"]]"
    - :was_run: true
      :content: "         end"
    - :was_run: true
      :content: "         new_question = Question.create(:display_name =>yml_question[\"display_name\"],"
    - :was_run: true
      :content: "                                      :question => yml_question[\"question\"])"
    - :was_run: true
      :content: "         "
    - :was_run: true
      :content: "         #new_question.order = yml_question[\"order\"] || 0"
    - :was_run: true
      :content: "         # TODO: add order support to question model"
    - :was_run: true
      :content: "         "
    - :was_run: true
      :content: "         @election.questions << new_question"
    - :was_run: true
      :content: "         new_question.save"
    - :was_run: true
      :content: "         dist.questions << new_question"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "       "
    - :was_run: true
      :content: "   # load another contest into Election object"
    - :was_run: true
      :content: "   # <tt>contest::</tt>Hash contains single contest from yaml"
    - :was_run: true
      :content: "       def load_contest yml_cont"
    - :was_run: true
      :content: "         if @dist_id_map[yml_cont[\"district_ident\"]].nil?"
    - :was_run: true
      :content: "           # the only time we can survive without district and precinct lists is with ballot_config."
    - :was_run: true
      :content: "           if ballot_config?"
    - :was_run: true
      :content: "             dist = District.find(0)"
    - :was_run: false
      :content: "           else"
    - :was_run: false
      :content: "             puts \"Error in yaml_import: invalid contest\""
    - :was_run: false
      :content: "             pp yml_cont"
    - :was_run: false
      :content: "             raise \"Invalid yaml in contest. See console for details.\""
    - :was_run: false
      :content: "           end"
    - :was_run: true
      :content: "         else"
    - :was_run: true
      :content: "           dist = @dist_id_map[yml_cont[\"district_ident\"]]"
    - :was_run: true
      :content: "         end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "         new_contest = Contest.create(:display_name =>yml_cont[\"display_name\"],"
    - :was_run: true
      :content: "                                      :open_seat_count => 1, :voting_method_id => 0)"
    - :was_run: true
      :content: "                                      "
    - :was_run: true
      :content: "         if yml_cont.key? \"voting_method\""
    - :was_run: true
      :content: "           new_contest.voting_method_id = VotingMethod.xmlToId(yml_cont[\"voting_method\"])"
    - :was_run: true
      :content: "         else # default if none specified"
    - :was_run: true
      :content: "           new_contest.voting_method_id = VotingMethod::WINNER_TAKE_ALL"
    - :was_run: true
      :content: "         end"
    - :was_run: true
      :content: "         new_contest.position = yml_cont[\"display_order\"] || 0"
    - :was_run: true
      :content: "         yml_cont[\"candidates\"].each { |yml_cand| load_candidate yml_cand, new_contest }"
    - :was_run: true
      :content: "         @election.contests << new_contest"
    - :was_run: true
      :content: "         new_contest.save"
    - :was_run: true
      :content: "         dist.contests << new_contest"
    - :was_run: true
      :content: "        end"
    - :was_run: true
      :content: "       "
    - :was_run: true
      :content: "     # load another candidate"
    - :was_run: true
      :content: "     # <tt>cand::</tt>Hash containing a single candidate from yaml"
    - :was_run: true
      :content: "       def load_candidate y_cand, cont"
    - :was_run: true
      :content: "         new_cand = Candidate.create(:display_name => y_cand[\"display_name\"])"
    - :was_run: true
      :content: "         party_name = y_cand[\"party_display_name\"]"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "         party = Party.find_by_display_name(party_name)"
    - :was_run: true
      :content: "         if party.nil? "
    - :was_run: true
      :content: "           party = Party.new(:display_name => party_name)"
    - :was_run: true
      :content: "         end"
    - :was_run: true
      :content: "         new_cand.party = party"
    - :was_run: true
      :content: "         "
    - :was_run: true
      :content: "         new_cand.order = y_cand[\"order\"] || 0"
    - :was_run: true
      :content: "         cont.candidates << new_cand"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "       "
    - :was_run: true
      :content: "   # load another precinct into Election object"
    - :was_run: true
      :content: "   # <tt>precinct::</tt>Hash contains a single precinct from yaml"
    - :was_run: true
      :content: "       def load_precinct yaml_prec"
    - :was_run: true
      :content: "   # First find or create the precinct"
    - :was_run: true
      :content: "         prec_disp_name = yaml_prec[\"display_name\"]"
    - :was_run: true
      :content: "         new_precinct = Precinct.find_by_display_name(prec_disp_name)"
    - :was_run: true
      :content: "         if !new_precinct"
    - :was_run: true
      :content: "           new_precinct = Precinct.create(:display_name => prec_disp_name)"
    - :was_run: true
      :content: "         end"
    - :was_run: true
      :content: "         if !yaml_prec.key? \"district_list\""
    - :was_run: true
      :content: "   # if so, just connect precinct to the built-in default district"
    - :was_run: true
      :content: "           District.find(0).precincts << new_precinct"
    - :was_run: true
      :content: "         else"
    - :was_run: true
      :content: "   # otherwise connect the new precinct to each of the districts in its district_list"
    - :was_run: true
      :content: "           load_districts yaml_prec[\"district_list\"], new_precinct "
    - :was_run: true
      :content: "         end"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "   #"
    - :was_run: true
      :content: "   # Find or create the districts."
    - :was_run: true
      :content: "   #<tt>yaml_districts</tt>::district_list from yaml input"
    - :was_run: true
      :content: "   #<tt>precinct</tt>::Precinct object that includes those districts"
    - :was_run: true
      :content: "   #"
    - :was_run: true
      :content: "       def load_districts yaml_districts, precinct"
    - :was_run: true
      :content: "         if yaml_districts.nil?"
    - :was_run: false
      :content: "           puts \"*** invalid Precinct on Yaml Import:\""
    - :was_run: false
      :content: "           pp yaml_prec "
    - :was_run: false
      :content: "           raise \"YAML error: invalid precinct. See console for details\""
    - :was_run: false
      :content: "         end"
    - :was_run: true
      :content: "         yaml_districts.each do |yaml_dist|"
    - :was_run: true
      :content: "           dist_disp_name = yaml_dist[\"display_name\"]"
    - :was_run: true
      :content: "           new_district = District.find_by_display_name(dist_disp_name)"
    - :was_run: true
      :content: "           if !new_district"
    - :was_run: true
      :content: "             new_district = District.create(:display_name => dist_disp_name, :district_type_id => 1)"
    - :was_run: true
      :content: "           end"
    - :was_run: true
      :content: "   #"
    - :was_run: true
      :content: "   # Add this district to the district set being built, and to the precinct being built"
    - :was_run: true
      :content: "   #"
    - :was_run: true
      :content: "           @dist_set.districts << new_district"
    - :was_run: true
      :content: "           new_district.precincts << precinct"
    - :was_run: true
      :content: "   #"
    - :was_run: true
      :content: "   # For later linking, record which district \"ident\" got which District object"
    - :was_run: true
      :content: "   #"
    - :was_run: true
      :content: "           @dist_id_map[yaml_dist[\"ident\"]] = new_district"
    - :was_run: true
      :content: "         end"
    - :was_run: true
      :content: "       end # def load_districts"
    - :was_run: true
      :content: "     end # class"
    - :was_run: true
      :content: "   end # module"
    :percent_run: 84
  app/helpers/contests_helper.rb: 
    :lines: 
    - :was_run: true
      :content: "   module ContestsHelper"
    - :was_run: true
      :content: "   end"
    :percent_run: 100
  app/controllers/users_controller.rb: 
    :lines: 
    - :was_run: true
      :content: "   class UsersController < ApplicationController"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     authorize_resource"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def index"
    - :was_run: false
      :content: "       @users = User.paginate(:per_page => 10, :page => params[:page])"
    - :was_run: false
      :content: "       redirect_to :action => 'new' if @users.empty?"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def show"
    - :was_run: true
      :content: "       @user = User.find(params[:id])"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def register"
    - :was_run: false
      :content: "       @user = User.new"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     def new"
    - :was_run: true
      :content: "       @user = User.new"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def edit"
    - :was_run: false
      :content: "       # @user = current_user"
    - :was_run: false
      :content: "       @user = User.find(params[:id])"
    - :was_run: false
      :content: "       #    logger.info(\"User is #{@user}\")"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def create"
    - :was_run: true
      :content: "       @user = User.new(params[:user])"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       # default role for new users is 'standard'"
    - :was_run: true
      :content: "       @user.roles << UserRole.new(:name => 'standard')"
    - :was_run: true
      :content: "       "
    - :was_run: true
      :content: "       if @user.save"
    - :was_run: true
      :content: "         begin"
    - :was_run: true
      :content: "           Notifier.deliver_registration_confirmation(@user)"
    - :was_run: false
      :content: "         rescue => ex"
    - :was_run: false
      :content: "           flash[:error] = \"Confirmation email not sent. #{ex.message}\""
    - :was_run: false
      :content: "         end"
    - :was_run: true
      :content: "         flash[:notice] = 'Successfully created a new user.'"
    - :was_run: true
      :content: "         redirect_to root_url"
    - :was_run: false
      :content: "       else"
    - :was_run: false
      :content: "         flash[:error] = \"Failed to create a new user: \" << @user.errors.full_messages.join(', ')"
    - :was_run: false
      :content: "         # redirect_to new_user_url"
    - :was_run: false
      :content: "         redirect_to request.referer"
    - :was_run: false
      :content: "       end"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def update"
    - :was_run: false
      :content: "       # @user = current_user"
    - :was_run: false
      :content: "       @user = User.find(params[:id])"
    - :was_run: false
      :content: "       if @user.update_attributes(params[:user])"
    - :was_run: false
      :content: "         flash[:notice] = 'Update successful.'"
    - :was_run: false
      :content: "         redirect_to root_url"
    - :was_run: false
      :content: "       else"
    - :was_run: false
      :content: "         render :action => \"edit\" "
    - :was_run: false
      :content: "       end"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def destroy"
    - :was_run: false
      :content: "       @user = User.find(params[:id])"
    - :was_run: false
      :content: "       @user.destroy"
    - :was_run: false
      :content: "       redirect_to(users_url) "
    - :was_run: false
      :content: "     end"
    - :was_run: false
      :content: "   end"
    :percent_run: 51
  app/helpers/elections_helper.rb: 
    :lines: 
    - :was_run: true
      :content: "   module ElectionsHelper"
    - :was_run: true
      :content: "   end"
    :percent_run: 100
  app/ballots/nh/ballot_config.rb: 
    :lines: 
    - :was_run: true
      :content: "   #"
    - :was_run: true
      :content: "   # NhBallot implements a columnar office format"
    - :was_run: true
      :content: "   #"
    - :was_run: true
      :content: "   require 'ttv/abstract_ballot'"
    - :was_run: true
      :content: "   require 'ballots/default/ballot_config'"
    - :was_run: true
      :content: "   require 'prawn'"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "   module NhBallot"
    - :was_run: true
      :content: "     include AbstractBallot"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     class FlowItem "
    - :was_run: true
      :content: "       TINY_FONT = 7"
    - :was_run: true
      :content: "       SMALL_FONT = 9"
    - :was_run: true
      :content: "       BIG_FONT = 11"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       class NHContest < DefaultBallot::FlowItem::Contest"
    - :was_run: true
      :content: "         def initialize(item, scanner)"
    - :was_run: false
      :content: "           super"
    - :was_run: false
      :content: "         end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "         # returns height"
    - :was_run: true
      :content: "         def draw_column(config, rect, candidates)"
    - :was_run: false
      :content: "          "
    - :was_run: false
      :content: "           return 0 if candidates.length == 0"
    - :was_run: false
      :content: "           height = 0"
    - :was_run: false
      :content: "           "
    - :was_run: false
      :content: "           draw_party = !(candidates[0].party.idToXml == 'democrat' || candidates[0].party.idToXml == 'republican')"
    - :was_run: false
      :content: "           config.pdf.bounding_box [rect.left + HPAD, rect.top], :width => rect.width - HPAD2 do"
    - :was_run: false
      :content: "             candidates.each_index do |i|"
    - :was_run: false
      :content: "               candidate = candidates[i]"
    - :was_run: false
      :content: "               config.pdf.move_down VPAD2"
    - :was_run: false
      :content: "             "
    - :was_run: false
      :content: "               # Render name of candidate"
    - :was_run: false
      :content: "               config.pdf.bounding_box [0, 0], :width => 80 do"
    - :was_run: false
      :content: "                 config.pdf.font \"Helvetica\", :size => BIG_FONT"
    - :was_run: false
      :content: "                 name = config.et.get(candidate, :display_name)"
    - :was_run: false
      :content: "                 name = name.sub(\" and \", \"\\n\") # hack to split joint names to two lines, wont work i10n"
    - :was_run: false
      :content: "                 name = name "
    - :was_run: false
      :content: "                 config.pdf.move_down 10"
    - :was_run: false
      :content: "                 config.pdf.text name, :align => :left"
    - :was_run: false
      :content: "                 config.pdf.move_down 10"
    - :was_run: false
      :content: "               end"
    - :was_run: false
      :content: "               #OVAL BOX TO THE RIGHT OF THE CANDIDATE NAME"
    - :was_run: false
      :content: "               config.pdf.bounding_box [75,20], :width => 20 do"
    - :was_run: false
      :content: "                  config.stroke_checkbox"
    - :was_run: false
      :content: "                end"
    - :was_run: false
      :content: "                config.pdf.move_down 12"
    - :was_run: false
      :content: "                "
    - :was_run: false
      :content: "                # PARTY NAME FOR CANDIDATE"
    - :was_run: false
      :content: "                if draw_party"
    - :was_run: false
      :content: "                  config.pdf.font \"Helvetica\", :size => SMALL_FONT"
    - :was_run: false
      :content: "                  config.pdf.text config.et.get(candidate.party, :display_name), :align => :left"
    - :was_run: false
      :content: "                end"
    - :was_run: false
      :content: "        "
    - :was_run: false
      :content: "               config.pdf.line [0, 0], [rect.width - HPAD2, 0] unless (i == candidates.length - 1)"
    - :was_run: false
      :content: "             end"
    - :was_run: false
      :content: "             height = config.pdf.bounds.height"
    - :was_run: false
      :content: "           end"
    - :was_run: false
      :content: "           return height"
    - :was_run: false
      :content: "         end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "         def draw_writein_column(config, rect)"
    - :was_run: false
      :content: "           height = 0"
    - :was_run: false
      :content: "           config.pdf.font \"Helvetica\", :size => TINY_FONT"
    - :was_run: false
      :content: "           config.pdf.bounding_box [rect.left, rect.top], :width => rect.width do"
    - :was_run: false
      :content: "             @item.open_seat_count.times do "
    - :was_run: false
      :content: "               config.pdf.move_down 30"
    - :was_run: false
      :content: "               config.pdf.text config.et.get(@item, :display_name), :align => :center"
    - :was_run: false
      :content: "               config.pdf.line [0, 0], [rect.width, 0]"
    - :was_run: false
      :content: "               config.pdf.move_down VPAD"
    - :was_run: false
      :content: "             end"
    - :was_run: false
      :content: "             height = config.pdf.bounds.height"
    - :was_run: false
      :content: "           end"
    - :was_run: false
      :content: "           height"
    - :was_run: false
      :content: "         end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "         def draw(config, rect, &bloc)"
    - :was_run: false
      :content: "           reset_ballot_marks"
    - :was_run: false
      :content: "           top = rect.top"
    - :was_run: false
      :content: "           # draw candidates first, to figure out max height"
    - :was_run: false
      :content: "           democrats = []"
    - :was_run: false
      :content: "           republicans = []"
    - :was_run: false
      :content: "           others = []"
    - :was_run: false
      :content: "           @item.candidates.each do |candidate|"
    - :was_run: false
      :content: "             case "
    - :was_run: false
      :content: "             when candidate.party.idToXml == 'democrat' then democrats.push candidate"
    - :was_run: false
      :content: "             when candidate.party.idToXml == 'republican' then republicans.push candidate"
    - :was_run: false
      :content: "             else others.push candidate"
    - :was_run: false
      :content: "             end"
    - :was_run: false
      :content: "           end"
    - :was_run: false
      :content: "           # draw candidates"
    - :was_run: false
      :content: "           r = rect.clone"
    - :was_run: false
      :content: "           r.left, r.right = rect.left + config.col_width, rect.left + config.col_width * 2"
    - :was_run: false
      :content: "           height = draw_column(config, r, democrats)"
    - :was_run: false
      :content: "           r.left, r.right = rect.left + config.col_width * 2, rect.left + config.col_width * 3"
    - :was_run: false
      :content: "           height = [height, draw_column(config, r, others)].max"
    - :was_run: false
      :content: "           r.left, r.right = rect.left + config.col_width * 3, rect.left + config.col_width * 4"
    - :was_run: false
      :content: "           height = [height, draw_column(config, r, republicans)].max"
    - :was_run: false
      :content: "           r.left, r.right = rect.left + config.col_width * 4, rect.left + config.col_width * 5"
    - :was_run: false
      :content: "           height = [height, draw_writein_column(config, r)].max"
    - :was_run: false
      :content: "   "
    - :was_run: false
      :content: "           # OFFICES"
    - :was_run: false
      :content: "             config.pdf.bounding_box [rect.left+HPAD, rect.top], :width => config.col_width - HPAD2 do"
    - :was_run: false
      :content: "             config.pdf.move_down VPAD2"
    - :was_run: false
      :content: "             config.pdf.font \"Helvetica\", :size => TINY_FONT"
    - :was_run: false
      :content: "             config.pdf.text config.bt[:For]"
    - :was_run: false
      :content: "             config.pdf.font \"Helvetica\", :size => BIG_FONT"
    - :was_run: false
      :content: "             config.pdf.text config.et.get(@item, :display_name), :align => :center"
    - :was_run: false
      :content: "             config.pdf.move_down VPAD"
    - :was_run: false
      :content: "             config.pdf.font \"Helvetica\", :size => TINY_FONT"
    - :was_run: false
      :content: "             config.pdf.text config.short_instructions(@item), :align => :center"
    - :was_run: false
      :content: "             height = [height, config.pdf.bounds.height].max"
    - :was_run: false
      :content: "           end"
    - :was_run: false
      :content: "           "
    - :was_run: false
      :content: "           # draw vertical bars"
    - :was_run: false
      :content: "           config.pdf.bounding_box [rect.left, rect.top], :width => rect.width, :height =>height do"
    - :was_run: false
      :content: "             4.times do |i|"
    - :was_run: false
      :content: "               config.pdf.line [config.col_width * (i+1), 0], [config.col_width * (i+1), height]"
    - :was_run: false
      :content: "             end"
    - :was_run: false
      :content: "           end"
    - :was_run: false
      :content: "           rect.top -= height;"
    - :was_run: false
      :content: "           #puts \"height was #{height} for item #{@item}\""
    - :was_run: false
      :content: "           config.pdf.stroke_line [rect.left, rect.top], [rect.right, rect.top]"
    - :was_run: false
      :content: "           "
    - :was_run: false
      :content: "           "
    - :was_run: false
      :content: "         end"
    - :was_run: false
      :content: "       end # class NHContest"
    - :was_run: false
      :content: "       "
    - :was_run: false
      :content: "     end # class FlowItem"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     class BallotConfig < DefaultBallot::BallotConfig"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       attr_accessor :col_width"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       def initialize(style, lang, election, scanner, instruction_text, state_seal, state_signature)"
    - :was_run: false
      :content: "         @instruction_text = instruction_text"
    - :was_run: false
      :content: "         @state_seal = state_seal"
    - :was_run: false
      :content: "         @state_signature = state_signature"
    - :was_run: false
      :content: "         @checkbox_orientation = :right"
    - :was_run: false
      :content: "         @columns = 1"
    - :was_run: false
      :content: "         super"
    - :was_run: false
      :content: "       end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       def col_loc(i)"
    - :was_run: false
      :content: "         @col_left + i * @col_width"
    - :was_run: false
      :content: "       end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       def render_header(flow_rect)"
    - :was_run: false
      :content: "         @pdf.font \"Helvetica\", :size => 14,  :style => :bold"
    - :was_run: false
      :content: "         @col_headers = [\"OFFICES\", \"DEMOCRATIC CANDIDATES\", \"OTHER CANDIDATES\", \"REPUBLICAN CANDIDATES\", \"WRITE-IN\\nCANDIDATES\"]"
    - :was_run: false
      :content: "         @col_width = flow_rect.width / @col_headers.length"
    - :was_run: false
      :content: "         @col_left = flow_rect.left"
    - :was_run: false
      :content: "         @header_height = 40"
    - :was_run: false
      :content: "         @col_headers.length.times do |i|            "
    - :was_run: false
      :content: "           #640 BELOW IS THE TOP LOCATION OF THE COLUMN HEADERS, NEED TO PARAMATIZE THIS"
    - :was_run: false
      :content: "           @pdf.bounding_box [col_loc(i), 640], :width => @col_width, :height => @header_height do"
    - :was_run: false
      :content: "             @pdf.fill_color '000000'"
    - :was_run: false
      :content: "             @pdf.stroke_color 'FFFFFF'"
    - :was_run: false
      :content: "             @pdf.rectangle [0, 0], @col_width, -@header_height"
    - :was_run: false
      :content: "             @pdf.line([@col_width, 0], [@col_width, @header_height]) "
    - :was_run: false
      :content: "             @pdf.fill_and_stroke"
    - :was_run: false
      :content: "             @pdf.fill_color 'FFFFFF'"
    - :was_run: false
      :content: "             @pdf.text_box @col_headers[i], :at => [0, @header_height - 6], :align => :center"
    - :was_run: false
      :content: "           end"
    - :was_run: false
      :content: "         end"
    - :was_run: false
      :content: "         flow_rect.top = 600  #TOP LOCATION OF COLUMNS "
    - :was_run: false
      :content: "         @pdf.stroke_color \"000000\""
    - :was_run: false
      :content: "         @pdf.fill_color '000000'"
    - :was_run: false
      :content: "         @pdf.stroke_line [flow_rect.left, flow_rect.top], [flow_rect.right, flow_rect.top]"
    - :was_run: false
      :content: "       end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       def render_column_instructions(columns, page)"
    - :was_run: true
      :content: "         "
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       def stroke_checkbox(pt = [0,0])"
    - :was_run: false
      :content: "         @pdf.line_width 1.5"
    - :was_run: false
      :content: "         @pdf.fill_color \"FFFFFF\""
    - :was_run: false
      :content: "         @pdf.stroke_color \"000000\""
    - :was_run: false
      :content: "         @pdf.ellipse_at [pt[0]+ CHECKBOX_WIDTH / 2, pt[1] - CHECKBOX_HEIGHT / 2 ] , CHECKBOX_WIDTH/ 2, CHECKBOX_HEIGHT / 2"
    - :was_run: false
      :content: "         @pdf.fill_and_stroke"
    - :was_run: false
      :content: "         @pdf.fill_color \"000000\""
    - :was_run: false
      :content: "       end"
    - :was_run: true
      :content: "       "
    - :was_run: true
      :content: "       "
    - :was_run: true
      :content: "       def page_complete(pagenum, last_page)"
    - :was_run: false
      :content: "         #unless last_page"
    - :was_run: false
      :content: "           #BALLOT TITLE ON TOP LEFT BALLOT"
    - :was_run: false
      :content: "           @pdf.bounding_box [ 20, @pdf.bounds.height], :width => 150 do"
    - :was_run: false
      :content: "                @pdf.font \"Helvetica\", :size => 10, :style => :bold"
    - :was_run: false
      :content: "                @pdf.text ballot_translation[:Title_Text], :align => :center"
    - :was_run: false
      :content: "                state_signature = \"#{RAILS_ROOT}/public/images/state_graphics/#{@state_signature}\""
    - :was_run: false
      :content: "                @pdf.image state_signature, :at => [20,@pdf.bounds.height - 55], :width => 100, :height => 30"
    - :was_run: false
      :content: "              @pdf.bounding_box [ 135 , @pdf.bounds.height - 45], :width => 150 do"
    - :was_run: false
      :content: "               state_seal = \"#{RAILS_ROOT}/public/images/state_graphics/#{@state_seal}\""
    - :was_run: false
      :content: "               @pdf.image state_seal, :at => [0,@pdf.bounds.height + 40], :width => 80, :height => 80"
    - :was_run: false
      :content: "              end"
    - :was_run: false
      :content: "            end"
    - :was_run: false
      :content: "           #INSTRUCTIONS ON TOP OF BALLOT"
    - :was_run: false
      :content: "           @pdf.bounding_box [ 240 , @pdf.bounds.height], :width => 300 do"
    - :was_run: false
      :content: "             @pdf.font \"Helvetica\", :size => 14, :style => :bold"
    - :was_run: false
      :content: "             @pdf.text ballot_translation[:Instruction_To_Voters], :align => :center"
    - :was_run: false
      :content: "             @pdf.font \"Helvetica\", :size => 8"
    - :was_run: false
      :content: "             #@pdf.text ballot_translation[:Instruction_Text1], :align => :left"
    - :was_run: false
      :content: "             #@pdf.text ballot_translation[:Instruction_Text2], :align => :left"
    - :was_run: false
      :content: "             @pdf.text @instruction_text"
    - :was_run: false
      :content: "           end"
    - :was_run: false
      :content: "           @pdf.bounding_box [ 0 , @pleaseVoteHeight ], :width => @pdf.bounds.width do"
    - :was_run: false
      :content: "             @pdf.move_down 10"
    - :was_run: false
      :content: "             @pdf.text bt[:Vote_Both_Sides], :align => :center"
    - :was_run: false
      :content: "           end"
    - :was_run: false
      :content: "         #end"
    - :was_run: false
      :content: "       end"
    - :was_run: true
      :content: "       "
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       def create_flow_item(item)"
    - :was_run: false
      :content: "         case"
    - :was_run: false
      :content: "         when item.is_a?(Contest) then FlowItem::NHContest.new(item, @scanner)"
    - :was_run: false
      :content: "         when item.is_a?(Question) then super"
    - :was_run: false
      :content: "         when item.is_a?(String) then super"
    - :was_run: false
      :content: "         when item.is_a?(Array) then item[1] # hack, gets rid of district name"
    - :was_run: false
      :content: "         else raise \"Unknown flow item\""
    - :was_run: false
      :content: "         end"
    - :was_run: false
      :content: "       end"
    - :was_run: false
      :content: "   "
    - :was_run: false
      :content: "     end"
    - :was_run: false
      :content: "   end"
    :percent_run: 20
  app/ballots/default/ballot_config.rb: 
    :lines: 
    - :was_run: true
      :content: "   #"
    - :was_run: true
      :content: "   # DefaultBallot is is used to layout and render the most basic ballot. It's the first one we implemented."
    - :was_run: true
      :content: "   # The \"include AbstractBallot\" makes the DefaultBallot module sort of inherit form the AbstractBallot module. Any methods not definedf"
    - :was_run: true
      :content: "   # here are defined in AbstractBallot."
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "   require 'ttv/abstract_ballot.rb'"
    - :was_run: true
      :content: "   require 'prawn'"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "   module DefaultBallot"
    - :was_run: true
      :content: "     include ::AbstractBallot"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     class FlowItem"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       ANY_WIDTH = 1"
    - :was_run: true
      :content: "       HPAD = 3"
    - :was_run: true
      :content: "       HPAD2 = 6"
    - :was_run: true
      :content: "       VPAD = 3"
    - :was_run: true
      :content: "       VPAD2 = 6"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       def initialize(item, scanner)"
    - :was_run: true
      :content: "         @item = item"
    - :was_run: true
      :content: "         @scanner = scanner"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       def reset_ballot_marks"
    - :was_run: true
      :content: "         @ballot_marks = []"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "       "
    - :was_run: true
      :content: "       def ballot_marks"
    - :was_run: true
      :content: "         @ballot_marks || []"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "       "
    - :was_run: true
      :content: "       def add_ballot_mark(contest, choice, page, location)"
    - :was_run: true
      :content: "         @ballot_marks.push(@scanner.create_ballot_mark contest, choice, page, location )"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "       "
    - :was_run: true
      :content: "       def fits(config, rect)"
    - :was_run: true
      :content: "         # clever way to see if we fit, avoiding code duplication for measure vs. draw"
    - :was_run: true
      :content: "         # Algorithm: draw the item. If it overflows flow rectangle, it does not fit."
    - :was_run: true
      :content: "         r = rect.clone"
    - :was_run: true
      :content: "         config.pdf.transaction do"
    - :was_run: true
      :content: "           draw(config, r)"
    - :was_run: true
      :content: "           config.pdf.rollback"
    - :was_run: true
      :content: "         end"
    - :was_run: true
      :content: "         r.height > 0"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       def draw(config, rect)"
    - :was_run: false
      :content: "         # debug only code, never executed"
    - :was_run: false
      :content: "         top = rect.top"
    - :was_run: false
      :content: "         config.pdf.font(\"Helvetica\", :size => 10, :style => :italic)"
    - :was_run: false
      :content: "         config.pdf.bounding_box([rect.left + HPAD, rect.top], :width => rect.width - HPAD ) do"
    - :was_run: false
      :content: "           config.pdf.move_down VPAD"
    - :was_run: false
      :content: "           config.pdf.text \"FlowItem.draw\""
    - :was_run: false
      :content: "           rect.top -= config.pdf.bounds.height"
    - :was_run: false
      :content: "         end"
    - :was_run: false
      :content: "         config.pdf.stroke_line [rect.left, rect.top], [rect.right, rect.top]"
    - :was_run: false
      :content: "         config.pdf.stroke_line [rect.right, rect.top], [rect.right, top]"
    - :was_run: false
      :content: "       end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       def min_width"
    - :was_run: true
      :content: "         0"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       def to_s"
    - :was_run: false
      :content: "         @item.to_s"
    - :was_run: false
      :content: "       end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       class Combo"
    - :was_run: true
      :content: "         def initialize(flow_items)"
    - :was_run: true
      :content: "           @flow_items = flow_items"
    - :was_run: true
      :content: "         end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "         def fits(config, rect)"
    - :was_run: true
      :content: "           r = rect.clone"
    - :was_run: true
      :content: "           config.pdf.transaction do"
    - :was_run: true
      :content: "             @flow_items.each { |f|  f.draw config, r if r.height > 0 }"
    - :was_run: true
      :content: "             config.pdf.rollback"
    - :was_run: true
      :content: "           end"
    - :was_run: true
      :content: "           r.height > 0"
    - :was_run: true
      :content: "         end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "         def min_width"
    - :was_run: true
      :content: "           @flow_items.map { |r| r.min_width }.max"
    - :was_run: true
      :content: "         end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "         def draw(config, rect, &bloc)"
    - :was_run: true
      :content: "           reset_ballot_marks"
    - :was_run: true
      :content: "           @flow_items.each { |f| f.draw config, rect, &bloc }"
    - :was_run: true
      :content: "         end"
    - :was_run: true
      :content: "         "
    - :was_run: true
      :content: "         def reset_ballot_marks"
    - :was_run: true
      :content: "           @flow_items.each { |f| f.reset_ballot_marks }"
    - :was_run: true
      :content: "         end"
    - :was_run: true
      :content: "         "
    - :was_run: true
      :content: "         def ballot_marks"
    - :was_run: true
      :content: "           ret = []"
    - :was_run: true
      :content: "           @flow_items.each { |f| ret.concat f.ballot_marks }"
    - :was_run: true
      :content: "           ret"
    - :was_run: true
      :content: "         end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "         def to_s"
    - :was_run: false
      :content: "           s = \"Combo\\n\""
    - :was_run: false
      :content: "           @flow_items.each { |f| s += f.to_s + \"\\n\" }"
    - :was_run: false
      :content: "           s"
    - :was_run: false
      :content: "         end"
    - :was_run: false
      :content: "       end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       class Header < FlowItem"
    - :was_run: true
      :content: "         def min_width"
    - :was_run: true
      :content: "           ANY_WIDTH"
    - :was_run: true
      :content: "         end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "         def draw(config, rect)"
    - :was_run: true
      :content: "           top = rect.top"
    - :was_run: true
      :content: "           config.pdf.font(\"Helvetica\", :size => 10, :style => :bold )"
    - :was_run: true
      :content: "           config.pdf.bounding_box([rect.left + HPAD, rect.top], :width => rect.width - HPAD * 2) do"
    - :was_run: true
      :content: "             config.pdf.move_down VPAD"
    - :was_run: true
      :content: "             config.pdf.text @item, :leading => 1"
    - :was_run: true
      :content: "             rect.top -= config.pdf.bounds.height "
    - :was_run: true
      :content: "           end"
    - :was_run: true
      :content: "           config.frame_item rect, top"
    - :was_run: true
      :content: "         end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       class Question < FlowItem"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "         def min_width"
    - :was_run: false
      :content: "           return 300 if @item.question.length > 100"
    - :was_run: false
      :content: "           return ANY_WIDTH"
    - :was_run: false
      :content: "         end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "         def draw(config, rect)"
    - :was_run: false
      :content: "           reset_ballot_marks"
    - :was_run: false
      :content: "           top = rect.top"
    - :was_run: false
      :content: "           config.pdf.bounding_box([rect.left+2, rect.top], :width => rect.width - 4) do"
    - :was_run: false
      :content: "             config.pdf.font \"Helvetica\", :size => 10, :style => :bold"
    - :was_run: false
      :content: "             config.pdf.move_down VPAD"
    - :was_run: false
      :content: "             config.pdf.text config.et.get(@item, :display_name), :leading => 1 #header"
    - :was_run: false
      :content: "             config.pdf.move_down VPAD"
    - :was_run: false
      :content: "             config.pdf.text config.short_instructions(@item), :leading => 1"
    - :was_run: false
      :content: "             config.pdf.move_down VPAD * 2"
    - :was_run: false
      :content: "             config.pdf.font \"Helvetica\", :size => 10"
    - :was_run: false
      :content: "             config.pdf.text config.et.get(@item, :question), :leading => 1 # question"
    - :was_run: false
      :content: "             rect.top -= config.pdf.bounds.height"
    - :was_run: false
      :content: "           end"
    - :was_run: false
      :content: "           rect.top -= 3"
    - :was_run: false
      :content: "           space, location = config.draw_checkbox rect, config.bt[:Yes]"
    - :was_run: false
      :content: "           add_ballot_mark @item, \"Yes\", config.pdf.page_number, location"
    - :was_run: false
      :content: "           rect.top -= 3"
    - :was_run: false
      :content: "           space, location = config.draw_checkbox  rect, config.bt[:No]"
    - :was_run: false
      :content: "           add_ballot_mark @item, \"No\", config.pdf.page_number, location"
    - :was_run: false
      :content: "           config.pdf.line_width 0.5"
    - :was_run: false
      :content: "           rect.top -= 3"
    - :was_run: false
      :content: "           config.frame_item rect, top"
    - :was_run: false
      :content: "         end"
    - :was_run: false
      :content: "       end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       class Contest < FlowItem"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "         NAME_WIDTH = 100"
    - :was_run: true
      :content: "         MAX_RANKED = 10"
    - :was_run: true
      :content: "         NEXT_COL_BOUNCE = 30"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "         def min_width"
    - :was_run: true
      :content: "           if @item.voting_method_id == VotingMethod::WINNER_TAKE_ALL.id"
    - :was_run: true
      :content: "             super"
    - :was_run: true
      :content: "           else"
    - :was_run: true
      :content: "             100 + 3 * HPAD + [@item.candidates.count, MAX_RANKED].min * (HPAD + BallotConfig::CHECKBOX_WIDTH)"
    - :was_run: true
      :content: "           end"
    - :was_run: true
      :content: "         end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "         def draw(config, rect, &bloc)"
    - :was_run: true
      :content: "           reset_ballot_marks"
    - :was_run: true
      :content: "           if @item.voting_method_id == VotingMethod::WINNER_TAKE_ALL.id"
    - :was_run: true
      :content: "             draw_winner config, rect, &bloc"
    - :was_run: true
      :content: "           else"
    - :was_run: true
      :content: "             draw_ranked config, rect, &bloc"
    - :was_run: true
      :content: "           end"
    - :was_run: true
      :content: "         end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "         def draw_winner(config, rect, &bloc)"
    - :was_run: true
      :content: "           top = rect.top"
    - :was_run: true
      :content: "           # HEADER"
    - :was_run: true
      :content: "           config.pdf.bounding_box [rect.left+HPAD, rect.top], :width => rect.width - HPAD2 do"
    - :was_run: true
      :content: "             config.pdf.font \"Helvetica\", :size => 10, :style => :bold"
    - :was_run: true
      :content: "             config.pdf.move_down VPAD"
    - :was_run: true
      :content: "             config.pdf.text config.et.get(@item, :display_name), :leading => 1 #header"
    - :was_run: true
      :content: "             config.pdf.move_down VPAD"
    - :was_run: true
      :content: "             config.pdf.text config.short_instructions(@item), :leading => 1"
    - :was_run: true
      :content: "             rect.top -= config.pdf.bounds.height"
    - :was_run: true
      :content: "           end"
    - :was_run: true
      :content: "           # CANDIDATES"
    - :was_run: true
      :content: "           candidates_list = @item.candidates"
    - :was_run: true
      :content: "           candidates_list.sort { |a,b| a.order <=> b.order}.each do |candidate|"
    - :was_run: true
      :content: "             if bloc && rect.height < NEXT_COL_BOUNCE"
    - :was_run: false
      :content: "               config.frame_item rect, top"
    - :was_run: false
      :content: "               rect = yield"
    - :was_run: false
      :content: "             end"
    - :was_run: true
      :content: "             rect.top -= VPAD * 2"
    - :was_run: true
      :content: "             space, location = config.draw_checkbox rect, config.et.get(candidate, :display_name) + \"\\n\" + config.et.get(candidate.party, :display_name)"
    - :was_run: true
      :content: "             add_ballot_mark @item, candidate, config.pdf.page_number, location"
    - :was_run: true
      :content: "           end"
    - :was_run: true
      :content: "           @item.open_seat_count.times do"
    - :was_run: true
      :content: "             if bloc && rect.height < NEXT_COL_BOUNCE"
    - :was_run: false
      :content: "                config.frame_item rect, top"
    - :was_run: false
      :content: "                rect = yield"
    - :was_run: false
      :content: "              end"
    - :was_run: true
      :content: "             rect.top -= VPAD * 2"
    - :was_run: true
      :content: "             left, location = config.draw_checkbox rect, config.bt[:or_write_in]"
    - :was_run: true
      :content: "             add_ballot_mark @item, \"Writein\", config.pdf.page_number, location"
    - :was_run: true
      :content: "             config.pdf.dash 1"
    - :was_run: true
      :content: "             v = 16"
    - :was_run: true
      :content: "             config.pdf.stroke_line [rect.left + left, rect.top - v], "
    - :was_run: true
      :content: "             [rect.right - 6, rect.top - v]"
    - :was_run: true
      :content: "             rect.top -= v"
    - :was_run: true
      :content: "             config.pdf.undash"
    - :was_run: true
      :content: "           end"
    - :was_run: true
      :content: "           rect.top -= 6 if @item.open_seat_count != 0"
    - :was_run: true
      :content: "           config.frame_item rect, top"
    - :was_run: true
      :content: "         end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "         def draw_ranked(config, rect, &bloc)"
    - :was_run: true
      :content: "           top = rect.top"
    - :was_run: true
      :content: "           pdf = config.pdf"
    - :was_run: true
      :content: "           # title"
    - :was_run: true
      :content: "           pdf.bounding_box [rect.left+HPAD, rect.top], :width => rect.width - HPAD2 do"
    - :was_run: true
      :content: "             pdf.font \"Helvetica\", :size => 10, :style => :bold"
    - :was_run: true
      :content: "             pdf.move_down VPAD"
    - :was_run: true
      :content: "             pdf.text config.et.get(@item, :display_name), :leading => 1 #header"
    - :was_run: true
      :content: "             config.pdf.move_down VPAD"
    - :was_run: true
      :content: "             config.pdf.text config.short_instructions(@item), :leading => 1"
    - :was_run: true
      :content: "             rect.top -= pdf.bounds.height"
    - :was_run: true
      :content: "           end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "           # Ordinals: 1st 2nd..."
    - :was_run: true
      :content: "           hpad4 = HPAD2 * 2"
    - :was_run: true
      :content: "           rect.top -= VPAD * 2"
    - :was_run: true
      :content: "           count = @item.candidates.count"
    - :was_run: true
      :content: "           checkbox_count = [@item.candidates.count, MAX_RANKED].min"
    - :was_run: true
      :content: "           height = 0"
    - :was_run: true
      :content: "           0.upto(checkbox_count - 1) do |i|"
    - :was_run: true
      :content: "             x = rect.left + HPAD2 + i * (BallotConfig::CHECKBOX_WIDTH + hpad4)"
    - :was_run: true
      :content: "             y = rect.top + VPAD "
    - :was_run: true
      :content: "             pdf.bounding_box [x, y], :width => BallotConfig::CHECKBOX_WIDTH do"
    - :was_run: true
      :content: "               pdf.text(config.et.ordinalize(i + 1), :align => :center)"
    - :was_run: true
      :content: "               height = pdf.bounds.height"
    - :was_run: true
      :content: "             end"
    - :was_run: true
      :content: "           end"
    - :was_run: true
      :content: "           rect.top -= height;"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "           # checkboxes"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "           0.upto(count) do |i|  # candidates"
    - :was_run: true
      :content: "             if bloc && rect.height < NEXT_COL_BOUNCE"
    - :was_run: false
      :content: "               config.frame_item rect, top"
    - :was_run: false
      :content: "               rect = yield"
    - :was_run: false
      :content: "               rect.top -= HPAD2"
    - :was_run: false
      :content: "             end"
    - :was_run: true
      :content: "             0.upto(checkbox_count - 1) do |j|"
    - :was_run: true
      :content: "               x = rect.left + HPAD2 + j * (BallotConfig::CHECKBOX_WIDTH + hpad4)"
    - :was_run: true
      :content: "               y = rect.top"
    - :was_run: true
      :content: "               pdf.bounding_box [x, y], :width => BallotConfig::CHECKBOX_WIDTH do"
    - :was_run: true
      :content: "                 config.stroke_checkbox"
    - :was_run: true
      :content: "                 f = pdf.font \"Helvetica\", :size => 9"
    - :was_run: true
      :content: "                 pdf.move_down( (BallotConfig::CHECKBOX_HEIGHT - f.ascender) / 2)"
    - :was_run: true
      :content: "                 pdf.fill_color \"999999\""
    - :was_run: true
      :content: "                 pdf.text( (j + 1).to_s, :align => :center)"
    - :was_run: true
      :content: "               end"
    - :was_run: true
      :content: "             end"
    - :was_run: true
      :content: "             pdf.fill_color \"000000\""
    - :was_run: true
      :content: "             spacer = HPAD2 + checkbox_count * (BallotConfig::CHECKBOX_WIDTH + hpad4)"
    - :was_run: true
      :content: "             pdf.font \"Helvetica\", :size => 10"
    - :was_run: true
      :content: "             pdf.bounding_box [rect.left + spacer, rect.top], :width => rect.width - spacer do"
    - :was_run: true
      :content: "               if i < count"
    - :was_run: true
      :content: "                 pdf.text config.et.get(@item.candidates[i], :display_name) + \"\\n\" + config.et.get( @item.candidates[i].party, :display_name)"
    - :was_run: true
      :content: "               else # writein"
    - :was_run: true
      :content: "                 pdf.text config.bt[:or_write_in]"
    - :was_run: true
      :content: "                 pdf.dash 1"
    - :was_run: true
      :content: "                 pdf.move_down 16"
    - :was_run: true
      :content: "                 config.pdf.stroke_line [0, 0], [rect.width - spacer - HPAD2, 0]"
    - :was_run: true
      :content: "                 pdf.undash"
    - :was_run: true
      :content: "                 pdf.move_down VPAD"
    - :was_run: true
      :content: "               end            "
    - :was_run: true
      :content: "               rect.top -= [pdf.bounds.height, BallotConfig::CHECKBOX_HEIGHT].max"
    - :was_run: true
      :content: "             end"
    - :was_run: true
      :content: "             pdf.move_down VPAD * 2"
    - :was_run: true
      :content: "             rect.top -= VPAD * 2"
    - :was_run: true
      :content: "           end"
    - :was_run: true
      :content: "           config.frame_item rect, top"
    - :was_run: true
      :content: "         end"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     class ContinuationBox"
    - :was_run: true
      :content: "       def initialize(pdf)"
    - :was_run: true
      :content: "         @pdf = pdf"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       def height(config, rect, last_page = false)"
    - :was_run: true
      :content: "         r = rect.clone;"
    - :was_run: true
      :content: "         @pdf.transaction do"
    - :was_run: true
      :content: "           draw(config, r, last_page)"
    - :was_run: true
      :content: "           @pdf.rollback"
    - :was_run: true
      :content: "         end"
    - :was_run: true
      :content: "         rect.top - r.top"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       def draw(config, rect, last_page)"
    - :was_run: true
      :content: "         top = rect.top"
    - :was_run: true
      :content: "         @pdf.font \"Helvetica\", :size => 10, :style => :bold"
    - :was_run: true
      :content: "         unless last_page"
    - :was_run: true
      :content: "           circle_width = 20"
    - :was_run: true
      :content: "           text_height = 0"
    - :was_run: true
      :content: "           text_width = rect.width - circle_width - 8"
    - :was_run: true
      :content: "           @pdf.bounding_box [rect.left+FlowItem::HPAD, rect.top], :width => text_width do"
    - :was_run: true
      :content: "             @pdf.move_down FlowItem::VPAD"
    - :was_run: true
      :content: "             @pdf.text config.bt[:Continue_voting_next_side], :align => :center"
    - :was_run: true
      :content: "             @pdf.move_down FlowItem::VPAD"
    - :was_run: true
      :content: "             text_height = @pdf.bounds.height"
    - :was_run: true
      :content: "           end"
    - :was_run: true
      :content: "           circle_top = rect.top - 6"
    - :was_run: true
      :content: "           @pdf.bounding_box [rect.left + text_width, circle_top ], :width => rect.width - text_width - 8 , :height => circle_width do"
    - :was_run: true
      :content: "             @pdf.circle_at [circle_width / 2, circle_width / 2], :radius => circle_width / 2"
    - :was_run: true
      :content: "             @pdf.fill_color \"000000\""
    - :was_run: true
      :content: "             @pdf.fill_and_stroke"
    - :was_run: true
      :content: "             @pdf.stroke_color \"FFFFFF\""
    - :was_run: true
      :content: "             @pdf.cap_style :round"
    - :was_run: true
      :content: "             @pdf.line_width 2"
    - :was_run: true
      :content: "             inset = 4"
    - :was_run: true
      :content: "             @pdf.stroke_line [inset, circle_width / 2], [ circle_width - inset, circle_width / 2]"
    - :was_run: true
      :content: "             @pdf.move_to [circle_width / 2, circle_width - inset]"
    - :was_run: true
      :content: "             @pdf.line_to [circle_width - inset, circle_width / 2]"
    - :was_run: true
      :content: "             @pdf.line_to [circle_width / 2, inset]"
    - :was_run: true
      :content: "             @pdf.stroke"
    - :was_run: true
      :content: "           end"
    - :was_run: true
      :content: "           rect.top -= text_height"
    - :was_run: true
      :content: "         else"
    - :was_run: true
      :content: "           @pdf.bounding_box [rect.left + FlowItem::HPAD, rect.top], :width => (rect.width - FlowItem::HPAD2) do"
    - :was_run: true
      :content: "             @pdf.move_down FlowItem::VPAD"
    - :was_run: true
      :content: "             @pdf.text config.bt[:Thank_you], :align => :center"
    - :was_run: true
      :content: "             @pdf.move_down FlowItem::VPAD"
    - :was_run: true
      :content: "             rect.top -= @pdf.bounds.height"
    - :was_run: true
      :content: "           end"
    - :was_run: true
      :content: "         end"
    - :was_run: true
      :content: "         @pdf.line_width 0.75"
    - :was_run: true
      :content: "         @pdf.stroke_color \"000000\""
    - :was_run: true
      :content: "         @pdf.stroke_line([rect.left, rect.top], [rect.right, rect.top])"
    - :was_run: true
      :content: "         @pdf.stroke_line [rect.right, rect.top], [rect.right, top]"
    - :was_run: true
      :content: "         @pdf.stroke_line [rect.left, rect.top], [rect.left, top]"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     class BallotConfig"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       attr_accessor :pdf, :page_size, :page_layout, :left_margin, :right_margin, :top_margin, :bottom_margin, :columns, :scanner"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       CHECKBOX_WIDTH = 22"
    - :was_run: true
      :content: "       CHECKBOX_HEIGHT = 10"
    - :was_run: true
      :content: "       HPAD = 3"
    - :was_run: true
      :content: "       HPAD2 = 6"
    - :was_run: true
      :content: "       VPAD = 3"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       def initialize(style, lang, election, scanner, instruction_text, state_seal, state_signature)"
    - :was_run: true
      :content: "         @file_root = \"#{RAILS_ROOT}/app/ballots/#{style}\""
    - :was_run: true
      :content: "         @election = election"
    - :was_run: true
      :content: "         @lang = lang"
    - :was_run: true
      :content: "         @ballot_translation = PDFBallotStyle.get_ballot_translation(style, lang)"
    - :was_run: true
      :content: "         @election_translation = PDFBallotStyle.get_election_translation(election, lang)"
    - :was_run: true
      :content: "         @instruction_text = instruction_text"
    - :was_run: true
      :content: "         @state_seal = state_seal"
    - :was_run: true
      :content: "         @state_signature = state_signature"
    - :was_run: true
      :content: "         "
    - :was_run: true
      :content: "         @page_size = \"LETTER\""
    - :was_run: true
      :content: "         @page_layout = :portrait"
    - :was_run: true
      :content: "         @left_margin = @right_margin = 18"
    - :was_run: true
      :content: "         @top_margin = @bottom_margin = 30"
    - :was_run: true
      :content: "         @pleaseVoteHeight = 30"
    - :was_run: true
      :content: "         @padding = 8"
    - :was_run: true
      :content: "         @columns = @columns || 3"
    - :was_run: true
      :content: "         @checkbox_orientation = @checkbox_orientation || :left "
    - :was_run: true
      :content: "         @scanner = scanner"
    - :was_run: true
      :content: "         @scanner.set_checkbox(CHECKBOX_WIDTH, CHECKBOX_HEIGHT, @checkbox_orientation)"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       def setup(pdf, precinct)"
    - :was_run: true
      :content: "         @pdf = pdf"
    - :was_run: true
      :content: "         @precinct = precinct"
    - :was_run: true
      :content: "         if @lang == \"zh\"  # chinese fonts, "
    - :was_run: true
      :content: "           pdf.font_families.update({"
    - :was_run: true
      :content: "           \"Helvetica\" => { :normal => \"#{Rails.root}/fonts/Arial Unicode.ttf\","
    - :was_run: true
      :content: "                            :bold => \"#{Rails.root}/fonts/Arial Unicode.ttf\" },"
    - :was_run: true
      :content: "           \"Courier\" => { :normal => \"#{Rails.root}/fonts/Arial Unicode.ttf\" }"
    - :was_run: true
      :content: "           })"
    - :was_run: false
      :content: "           @wrap = :character"
    - :was_run: true
      :content: "         else"
    - :was_run: true
      :content: "           pdf.font_families.update({"
    - :was_run: true
      :content: "             \"Helvetica\" => { :normal => \"#{Rails.root}/fonts/Arial Unicode.ttf\","
    - :was_run: true
      :content: "                              :bold => \"#{Rails.root}/fonts/Arial Bold.ttf\" },"
    - :was_run: true
      :content: "             \"Courier\" => { :normal => \"#{Rails.root}/fonts/Courier New.ttf\" }"
    - :was_run: true
      :content: "               })"
    - :was_run: true
      :content: "           @wrap = :space"
    - :was_run: true
      :content: "         end"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       def load_text(filename)"
    - :was_run: false
      :content: "         IO.read \"#{@file_root}/lang/#{@lang}/#{filename}\""
    - :was_run: false
      :content: "       end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       def image_path(filename)"
    - :was_run: false
      :content: "         full_path = \"#{@file_root}/lang/#{@lang}/#{filename}\""
    - :was_run: false
      :content: "       end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       def load_image(filename)"
    - :was_run: false
      :content: "         return Prawn::Images::PNG.new(IO.read(image_path(filename))) if filename =~ /png$/"
    - :was_run: false
      :content: "         return Prawn::Images::JPG.new(IO.read(image_path(filename)))"
    - :was_run: false
      :content: "       end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       def ballot_translation"
    - :was_run: true
      :content: "         @ballot_translation"
    - :was_run: true
      :content: "       end     "
    - :was_run: true
      :content: "       alias bt ballot_translation"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       def election_translation"
    - :was_run: true
      :content: "         @election_translation"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "       alias et election_translation"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       def create_continuation_box"
    - :was_run: true
      :content: "         ContinuationBox.new(@pdf)"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       def create_columns(flow_rect)"
    - :was_run: true
      :content: "         AbstractBallot::Columns.new(@columns, flow_rect)"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       def short_instructions(item)"
    - :was_run: true
      :content: "         if item.is_a?(Contest)"
    - :was_run: true
      :content: "           if item.voting_method_id == VotingMethod::WINNER_TAKE_ALL.id"
    - :was_run: true
      :content: "             return bt[:Vote_for_1].sub(\"&1;\", \"1\") if item.open_seat_count < 2"
    - :was_run: true
      :content: "             return bt[:Vote_for_many].sub(\"&1;\", item.open_seat_count.to_s)"
    - :was_run: true
      :content: "           else"
    - :was_run: true
      :content: "             return bt[:Rank_candidates]"
    - :was_run: true
      :content: "           end"
    - :was_run: false
      :content: "         elsif item.is_a?(Question)"
    - :was_run: false
      :content: "           return bt[:Vote_yes_or_no]"
    - :was_run: false
      :content: "         else"
    - :was_run: false
      :content: "           raise \"Unknown short instruction type #{item.class}\""
    - :was_run: false
      :content: "         end      "
    - :was_run: false
      :content: "       end"
    - :was_run: true
      :content: "       "
    - :was_run: true
      :content: "       def wide_style"
    - :was_run: false
      :content: "         # do narrow flow items continue flowing after wide ones?"
    - :was_run: false
      :content: "         return :continue # :stop for narrow items starting new column"
    - :was_run: false
      :content: "       end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       def debug_stroke_bounds #debug version, rainbow of colors"
    - :was_run: false
      :content: "         @stroke_colors = [\"FF0000\", \"00FF00\", \"0000FF\", \"FFFF00\", \"FF00FF\", \"00FFFF\"] unless @stroke_colors"
    - :was_run: false
      :content: "         old = @pdf.stroke_color"
    - :was_run: false
      :content: "         @pdf.stroke_color = @stroke_colors.shift"
    - :was_run: false
      :content: "         @pdf.dash(1)  if @pdf.bounds.height == 0"
    - :was_run: false
      :content: "         @pdf.stroke_rectangle @pdf.bounds.top_left, @pdf.bounds.width, [@pdf.bounds.height, 5].max"
    - :was_run: false
      :content: "         @pdf.undash"
    - :was_run: false
      :content: "         Rails.logger.info(\"bounds.height: #{@pdf.bounds.to_s}\")"
    - :was_run: false
      :content: "         @stroke_colors.push @pdf.stroke_color"
    - :was_run: false
      :content: "         @pdf.stroke_color = old"
    - :was_run: false
      :content: "       end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       def debug_rect(r)"
    - :was_run: false
      :content: "         @pdf.bounding_box([r.left, r.top], :width => r.width, :height => r.height) do "
    - :was_run: false
      :content: "           debug_stroke_bounds"
    - :was_run: false
      :content: "         end"
    - :was_run: false
      :content: "       end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       def stroke_checkbox(pt = [0,0])"
    - :was_run: true
      :content: "         @pdf.line_width 1.5"
    - :was_run: true
      :content: "         @pdf.fill_color \"FFFFFF\""
    - :was_run: true
      :content: "         @pdf.stroke_color \"000000\""
    - :was_run: true
      :content: "         @pdf.rectangle pt, CHECKBOX_WIDTH, CHECKBOX_HEIGHT"
    - :was_run: true
      :content: "         @pdf.fill_and_stroke"
    - :was_run: true
      :content: "         @pdf.fill_color \"000000\""
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       def draw_checkbox(rect, text)"
    - :was_run: true
      :content: "   #      @pdf.bounding_box [rect.left + FlowItem::HPAD2, rect.top], :width => CHECKBOX_WIDTH do"
    - :was_run: true
      :content: "   #        stroke_checkbox"
    - :was_run: true
      :content: "   #      end"
    - :was_run: true
      :content: "         check_top_left, location = @scanner.align_checkbox(@pdf, [rect.left + FlowItem::HPAD2, rect.top])"
    - :was_run: true
      :content: "         stroke_checkbox check_top_left"
    - :was_run: true
      :content: "   #      @pdf.bounding_box check_top_left.dup, :width => CHECKBOX_WIDTH do"
    - :was_run: true
      :content: "   #        @pdf.fill_color \"FF0000\""
    - :was_run: true
      :content: "   #        @pdf.rectangle [0,0], CHECKBOX_WIDTH, CHECKBOX_HEIGHT"
    - :was_run: true
      :content: "   #        @pdf.fill_and_stroke"
    - :was_run: true
      :content: "   #        @pdf.fill_color \"000000\""
    - :was_run: true
      :content: "   #      end"
    - :was_run: true
      :content: "         rect.top -= rect.top - check_top_left[1]"
    - :was_run: true
      :content: "   #      spacer = 2 * FlowItem::HPAD2 + CHECKBOX_WIDTH"
    - :was_run: true
      :content: "         spacer = check_top_left[0] - rect.left + CHECKBOX_WIDTH + FlowItem::HPAD2"
    - :was_run: true
      :content: "         @pdf.bounding_box [rect.left + spacer, rect.top], :width => rect.width - spacer do"
    - :was_run: true
      :content: "           @pdf.font \"Helvetica\", :size => 10"
    - :was_run: true
      :content: "           @pdf.text text"
    - :was_run: true
      :content: "           rect.top -= [@pdf.bounds.height, CHECKBOX_HEIGHT].max"
    - :was_run: true
      :content: "         end"
    - :was_run: true
      :content: "         return spacer, location  # returns left-hand side of text position"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       def frame_item(rect, top)"
    - :was_run: true
      :content: "         @pdf.line_width 0.5"
    - :was_run: true
      :content: "         @pdf.stroke_line([rect.left, rect.top], [rect.right, rect.top])"
    - :was_run: true
      :content: "         @pdf.stroke_line [rect.right, rect.top], [rect.right, top]"
    - :was_run: true
      :content: "         @pdf.stroke_line [rect.left, rect.top], [rect.left, top]"
    - :was_run: true
      :content: "       end "
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       def render_frame(flow_rect)"
    - :was_run: true
      :content: "         bar_width = 18"
    - :was_run: true
      :content: "         bar_height = 140"
    - :was_run: true
      :content: "         @scanner.render_grid(@pdf)"
    - :was_run: true
      :content: "         @scanner.render_ballot_marks(@pdf)"
    - :was_run: true
      :content: "         @pdf.bounding_box [0, @pdf.bounds.height - @pleaseVoteHeight + 35], :width => @pdf.bounds.width, :height => @pdf.bounds.height - @pleaseVoteHeight * 2 do"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "           @pdf.stroke_rectangle [bar_width + @padding,@pdf.bounds.height], "
    - :was_run: true
      :content: "           @pdf.bounds.width - (bar_width + @padding)* 2, @pdf.bounds.height"
    - :was_run: true
      :content: "           @pdf.font \"Courier\", :size => 14"
    - :was_run: true
      :content: "           @pdf.draw_text bt[:Sample_Ballot], :at => [16, 275], :rotate => 90"
    - :was_run: true
      :content: "           @pdf.draw_text bt[:Sample_Ballot], :at => [@pdf.bounds.right - 2 , 275], :rotate => 90"
    - :was_run: true
      :content: "           @pdf.draw_text \"12001040100040\", :at => [16, 410], :rotate => 90"
    - :was_run: true
      :content: "           @pdf.draw_text \"132301113\", :at => [@pdf.bounds.right - 2, 146], :rotate => 90"
    - :was_run: true
      :content: "           flow_rect.inset bar_width + @padding, @pleaseVoteHeight"
    - :was_run: true
      :content: "         end"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       def render_header(flow_rect)"
    - :was_run: true
      :content: "         @pdf.font \"Helvetica\", :size => 13,  :style => :bold"
    - :was_run: true
      :content: "         @pdf.bounding_box [flow_rect.left + @padding, flow_rect.top], "
    - :was_run: true
      :content: "         :width => flow_rect.width - @padding do"
    - :was_run: true
      :content: "           @pdf.move_down 3"
    - :was_run: true
      :content: "           @pdf.text bt[:OFFICIAL_BALLOT]"
    - :was_run: true
      :content: "           @pdf.text et.strftime(@election.start_date, \"%B %d, %Y\")"
    - :was_run: true
      :content: "           @pdf.bounding_box [@pdf.bounds.width / 3,  @pdf.bounds.height], "
    - :was_run: true
      :content: "           :width => @pdf.bounds.width * 2 / 3 do"
    - :was_run: true
      :content: "             @pdf.move_down 3"
    - :was_run: true
      :content: "             @pdf.text et.get(@election, :display_name), :align => :center"
    - :was_run: true
      :content: "             @pdf.text et.get(@precinct, :display_name), :align => :center"
    - :was_run: true
      :content: "             @pdf.move_down(@padding / 3)"
    - :was_run: true
      :content: "             flow_rect.top -= @pdf.bounds.height  "
    - :was_run: true
      :content: "           end"
    - :was_run: true
      :content: "         end"
    - :was_run: true
      :content: "         @pdf.stroke_color \"000000\""
    - :was_run: true
      :content: "         @pdf.stroke_line [flow_rect.left, flow_rect.top], [flow_rect.right, flow_rect.top]"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       def render_column_instructions(columns, page)"
    - :was_run: true
      :content: "         return if page != 1"
    - :was_run: true
      :content: "         rect = columns.next"
    - :was_run: true
      :content: "         top = rect.top"
    - :was_run: true
      :content: "         @pdf.font \"Helvetica\", :size => 9, :style => :bold"
    - :was_run: true
      :content: "         @pdf.bounding_box( [rect.left + @padding, rect.top], "
    - :was_run: true
      :content: "                           :width => rect.width - @padding * 2) do"
    - :was_run: true
      :content: "           @pdf.move_down 3"
    - :was_run: true
      :content: "           @pdf.text @instruction_text"
    - :was_run: true
      :content: "           #@pdf.text load_text(\"instructions1.txt\"), :wrap => @wrap "
    - :was_run: true
      :content: "          "
    - :was_run: true
      :content: "   #        img = load_image \"instructions2.png\""
    - :was_run: true
      :content: "   #        @pdf.image image_path(\"instructions2.png\"), "
    - :was_run: true
      :content: "   #        :width => [img.width * 72 / 96, @pdf.bounds.width].min"
    - :was_run: true
      :content: "   #        @pdf.move_down 3"
    - :was_run: true
      :content: "   #        @pdf.text load_text(\"instructions3.txt\"), :wrap => @wrap"
    - :was_run: true
      :content: "         end"
    - :was_run: true
      :content: "         rect.top = rect.bottom"
    - :was_run: true
      :content: "         @pdf.line_width 0.5"
    - :was_run: true
      :content: "         @pdf.stroke_line([rect.left, rect.top], [rect.right, rect.top])"
    - :was_run: true
      :content: "         @pdf.stroke_line [rect.right, rect.top], [rect.right, top]"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       def page_complete(pagenum, last_page)"
    - :was_run: true
      :content: "         unless last_page"
    - :was_run: true
      :content: "           @pdf.font \"Helvetica\", :size => 14, :style => :bold"
    - :was_run: true
      :content: "           @pdf.bounding_box [ 0 , @pdf.bounds.height ], :width => @pdf.bounds.width do"
    - :was_run: true
      :content: "             @pdf.text bt[:Vote_Both_Sides], :align => :center"
    - :was_run: true
      :content: "           end"
    - :was_run: true
      :content: "           @pdf.bounding_box [ 0 , @pleaseVoteHeight ], :width => @pdf.bounds.width do"
    - :was_run: true
      :content: "             @pdf.move_down 10"
    - :was_run: true
      :content: "             @pdf.text bt[:Vote_Both_Sides], :align => :center"
    - :was_run: true
      :content: "           end"
    - :was_run: true
      :content: "         end"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       def create_flow_item(item)"
    - :was_run: true
      :content: "         case"
    - :was_run: true
      :content: "         when item.is_a?(Contest) then FlowItem::Contest.new(item, @scanner)"
    - :was_run: true
      :content: "         when item.is_a?(Question) then FlowItem::Question.new(item, @scanner)"
    - :was_run: true
      :content: "         when item.is_a?(String) then FlowItem::Header.new(item, @scanner)"
    - :was_run: true
      :content: "         when item.is_a?(Array) then FlowItem::Combo.new(item)"
    - :was_run: true
      :content: "         end"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "   end"
    :percent_run: 86
  app/models/precinct.rb: 
    :lines: 
    - :was_run: true
      :content: "   # == Schema Information"
    - :was_run: true
      :content: "   # Schema version: 20100215144641"
    - :was_run: true
      :content: "   #"
    - :was_run: true
      :content: "   # Table name: precincts"
    - :was_run: true
      :content: "   #"
    - :was_run: true
      :content: "   #  id           :integer         not null, primary key"
    - :was_run: true
      :content: "   #  display_name :string(255)"
    - :was_run: true
      :content: "   #  created_at   :datetime"
    - :was_run: true
      :content: "   #  updated_at   :datetime"
    - :was_run: true
      :content: "   #  ident        :string(255)"
    - :was_run: true
      :content: "   #"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "   class Precinct < ActiveRecord::Base"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     has_and_belongs_to_many :districts"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     attr_accessor :importId # for xml import, hacky could do this by dynamically extending class at runtime"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     validates_presence_of :ident"
    - :was_run: true
      :content: "     validates_uniqueness_of :ident, :message => \"Non-unique Precinct ident attempted: {{value}}.\""
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     # Make sure that ident is not nil. If it is, create a unique one."
    - :was_run: true
      :content: "     def before_validation"
    - :was_run: true
      :content: "       if self.blank? || self.ident.blank?"
    - :was_run: true
      :content: "         self.ident = \"prec-#{ActiveSupport::SecureRandom.hex}\""
    - :was_run: true
      :content: "         self.save!"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def districts_for_election(election)"
    - :was_run: true
      :content: "       districts & election.district_set.districts"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     # Return a list of DistrictSets tjat this Precinct belongs to. "
    - :was_run: true
      :content: "     # In the real world, this should always be a list of length 1, even though the data model permits more"
    - :was_run: true
      :content: "     def district_sets"
    - :was_run: false
      :content: "       districts.reduce([]) { |res, dist| res.include?(dist.district_sets[0]) ? res : res << dist.district_sets[0] }"
    - :was_run: false
      :content: "     end"
    - :was_run: false
      :content: "   end"
    :percent_run: 92
  app/models/notifier.rb: 
    :lines: 
    - :was_run: true
      :content: "   class Notifier < ActionMailer::Base"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     def password_reset_instructions(user)  "
    - :was_run: false
      :content: "       logger.info(\"user is #{user}\")"
    - :was_run: false
      :content: "       subject       \"TTV Password Reset Instructions\"  "
    - :was_run: false
      :content: "       from \"Aleks TTV Totic <a@totic.org>\""
    - :was_run: false
      :content: "       recipients    user.email  "
    - :was_run: false
      :content: "       sent_on       Time.now  "
    - :was_run: false
      :content: "       body          :edit_password_reset_url => edit_password_reset_url(user.perishable_token), :user => user"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     def registration_confirmation(user)"
    - :was_run: false
      :content: "       recipients user.email"
    - :was_run: false
      :content: "       from \"Aleks TTV Totic <a@totic.org>\""
    - :was_run: false
      :content: "       subject \"Welcome to TTV system\""
    - :was_run: false
      :content: "       body :user => user"
    - :was_run: false
      :content: "     end"
    - :was_run: false
      :content: "   end"
    :percent_run: 28
  app/ttv/yaml_export.rb: 
    :lines: 
    - :was_run: true
      :content: "   require 'yaml'"
    - :was_run: true
      :content: "   module TTV"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     # Import Yaml-based election using standard formats, and convert as needed to Election and related objects."
    - :was_run: true
      :content: "     class YAMLExport"
    - :was_run: true
      :content: "       attr_reader :election, :election_hash, :audit_header_hash"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     # <tt>election::</tt> Election object to be exported"
    - :was_run: true
      :content: "       def initialize(election)"
    - :was_run: true
      :content: "         @elec = election"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     # Do the whole export process. Main entry point. Returns Yaml object ready to be saved."
    - :was_run: true
      :content: "     #"
    - :was_run: true
      :content: "       def do_export "
    - :was_run: true
      :content: "         precinct_list_h = export_district_set(@elec)"
    - :was_run: true
      :content: "         contests_h = export_contests(@elec)"
    - :was_run: true
      :content: "         questions_h = export_questions(@elec)"
    - :was_run: true
      :content: "         @ballot_info = {\"display_name\" => @elec.display_name, "
    - :was_run: true
      :content: "                    \"start_date\" => @elec.start_date,"
    - :was_run: true
      :content: "                    \"contest_list\" => contests_h,"
    - :was_run: true
      :content: "                    \"question_list\" => questions_h,"
    - :was_run: true
      :content: "                    \"precinct_list\" => precinct_list_h,"
    - :was_run: true
      :content: "                    \"jurisdiction_display_name\" =>  @elec.display_name,"
    - :was_run: true
      :content: "                    \"number_of_precincts\" => precinct_list_h.length"
    - :was_run: true
      :content: "                 }"
    - :was_run: true
      :content: "         @audit_header = {\"type\" => \"ballot_config\"} if ballot_config?"
    - :was_run: true
      :content: "         @election_hash = {\"ballot_info\" => @ballot_info,"
    - :was_run: true
      :content: "                     \"audit_header\" => @audit_header}"
    - :was_run: true
      :content: "        end"
    - :was_run: true
      :content: "    "
    - :was_run: true
      :content: "     # Determine whether the election being exported is of type ballot_config"
    - :was_run: true
      :content: "     #"
    - :was_run: true
      :content: "       def ballot_config?"
    - :was_run: true
      :content: "         @elec.district_set == DistrictSet.find(0)  "
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "    "
    - :was_run: true
      :content: "   #"
    - :was_run: true
      :content: "   # Convert questions to a hash which can be converted to yaml directly."
    - :was_run: true
      :content: "   # <tt>election:</tt>  Election object"
    - :was_run: true
      :content: "   # returns: an array containing the questions which can be converted to yaml for export"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       def export_questions(election)"
    - :was_run: true
      :content: "         questions_h = []"
    - :was_run: true
      :content: "         election.questions.each {|question|"
    - :was_run: true
      :content: "           new_question_h = {\"display_name\" => question.display_name,"
    - :was_run: true
      :content: "                             \"question\" => question.question,"
    - :was_run: true
      :content: "                             \"district_ident\" => @district_to_ident_map[question.requesting_district]}"
    - :was_run: true
      :content: "           questions_h << new_question_h"
    - :was_run: true
      :content: "         }"
    - :was_run: true
      :content: "         questions_h"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "       "
    - :was_run: true
      :content: "   #"
    - :was_run: true
      :content: "   # Convert contests to a hash which can be converted to yaml directly."
    - :was_run: true
      :content: "   # <tt>election:</tt>  Election object"
    - :was_run: true
      :content: "   # returns: an array containing the contests which can be converted to yaml for export"
    - :was_run: true
      :content: "   #"
    - :was_run: true
      :content: "       def export_contests(election)"
    - :was_run: true
      :content: "         contests_h = []"
    - :was_run: true
      :content: "         election.contests.each do |cont|"
    - :was_run: true
      :content: "           new_cont_h = {\"display_name\" => cont.display_name, "
    - :was_run: true
      :content: "                         \"candidates\" => export_candidates(cont), "
    - :was_run: true
      :content: "                         \"district_ident\" => @district_to_ident_map[cont.district],"
    - :was_run: true
      :content: "                         \"ident\" => \"cont-#{cont.id}\","
    - :was_run: true
      :content: "                         \"display_order\" => cont.position}"
    - :was_run: true
      :content: "           contests_h << new_cont_h"
    - :was_run: true
      :content: "         end"
    - :was_run: true
      :content: "         contests_h"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "   #"
    - :was_run: true
      :content: "   # Convert the list of candidates for a contest to a hash"
    - :was_run: true
      :content: "   # <tt>contest::</tt>  Contest object"
    - :was_run: true
      :content: "   # returns: an array containing the candidates for this contest, ready to be ecported to yaml"
    - :was_run: true
      :content: "   #"
    - :was_run: true
      :content: "       def export_candidates(a_contest)"
    - :was_run: true
      :content: "         candidates_h = []"
    - :was_run: true
      :content: "         a_contest.candidates.each do |cand| "
    - :was_run: true
      :content: "           candidates_h << {\"display_name\" => cand.display_name, \"ident\" => \"cand-#{cand.id}\", \"party_display_name\" => cand.party.display_name, \"party_ident\" => \"party-#{cand.party.id}\" }"
    - :was_run: true
      :content: "         end"
    - :was_run: true
      :content: "         candidates_h"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "   # "
    - :was_run: true
      :content: "   # Note in the yaml format precinct_set is pivoted into a precinct_list, and each precinct has a list"
    - :was_run: true
      :content: "   # of districts. It's really the same information folded a different way."
    - :was_run: true
      :content: "   # <tt>election::</tt> Election object"
    - :was_run: true
      :content: "   # returns:: an array with all the precincts corresponding to this election  "
    - :was_run: true
      :content: "       def export_district_set(election)"
    - :was_run: true
      :content: "   #"
    - :was_run: true
      :content: "   # Go through all the districts in the distrset and fill in two hashes."
    - :was_run: true
      :content: "   # @district_to_ident_map[dist] = :dist_ident for each district that is mentioned in the districtsets associated with the election. (dist_ident"
    - :was_run: true
      :content: "   # precincts_already_processed[prec] = an array of all the district objects that are in the indicated precinct."
    - :was_run: true
      :content: "   #"
    - :was_run: true
      :content: "         @district_to_ident_map = {}"
    - :was_run: true
      :content: "         precinct_to_distlist = {}"
    - :was_run: true
      :content: "         election.district_set.districts.each do |dist|"
    - :was_run: true
      :content: "           if !@district_to_ident_map[dist]"
    - :was_run: true
      :content: "             @district_to_ident_map[dist] = \"dist-#{dist.id}\"          "
    - :was_run: true
      :content: "             dist.precincts.each do |a_prec|"
    - :was_run: true
      :content: "               if !precinct_to_distlist[a_prec]"
    - :was_run: true
      :content: "                 precinct_to_distlist[a_prec] = [dist]"
    - :was_run: true
      :content: "               else"
    - :was_run: true
      :content: "                 precinct_to_distlist[a_prec] << dist"
    - :was_run: true
      :content: "               end"
    - :was_run: true
      :content: "             end"
    - :was_run: true
      :content: "           end"
    - :was_run: true
      :content: "         end"
    - :was_run: true
      :content: "   #"
    - :was_run: true
      :content: "   # Generate a hash (precinct_list_h) representing the precincts."
    - :was_run: true
      :content: "   #"
    - :was_run: true
      :content: "         precinct_list_a = []"
    - :was_run: true
      :content: "         precinct_to_distlist.each do |prec, districts|"
    - :was_run: true
      :content: "           precinct_h = {}"
    - :was_run: true
      :content: "           precinct_h[\"display_name\"] = prec.display_name"
    - :was_run: true
      :content: "           precinct_h[\"ident\"] = \"prec-#{prec.id}\""
    - :was_run: true
      :content: "           precinct_h[\"voting_places\"] = [{\"ballot_counters\" => 2, \"ident\" => \"vplace-xxx\"}]"
    - :was_run: true
      :content: "           district_list_a = []"
    - :was_run: true
      :content: "           districts.each do |dist|"
    - :was_run: true
      :content: "             district_h = {\"display_name\" => dist.display_name, \"ident\" => @district_to_ident_map[dist]}"
    - :was_run: true
      :content: "             district_list_a << district_h"
    - :was_run: true
      :content: "           end"
    - :was_run: true
      :content: "           precinct_h[\"district_list\"] = district_list_a"
    - :was_run: true
      :content: "           precinct_list_a << precinct_h"
    - :was_run: true
      :content: "         end"
    - :was_run: true
      :content: "         precinct_list_a"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "   end"
    - :was_run: true
      :content: "   "
    :percent_run: 100
  app/models/language.rb: 
    :lines: 
    - :was_run: true
      :content: "   class Language < ActiveRecord::Base"
    - :was_run: true
      :content: "   end"
    :percent_run: 100
  app/models/ability.rb: 
    :lines: 
    - :was_run: true
      :content: "   class Ability"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     include CanCan::Ability"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     def initialize(user)"
    - :was_run: true
      :content: "       "
    - :was_run: true
      :content: "       unless user"
    - :was_run: true
      :content: "         user =  User.new"
    - :was_run: true
      :content: "         user.roles << UserRole.new(:name => 'public')"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       if user.role?(:root)"
    - :was_run: true
      :content: "          can :manage, :all"
    - :was_run: true
      :content: "        elsif user.role?(:standard)"
    - :was_run: true
      :content: "         can [:manage], [Election]"
    - :was_run: true
      :content: "         # can [:read, :create, :update, :destroy], [Election]"
    - :was_run: true
      :content: "         # can [:index], [Election]"
    - :was_run: true
      :content: "       elsif user.role?(:public)"
    - :was_run: true
      :content: "         can :read, [Election]"
    - :was_run: true
      :content: "         can [:create, :register], [User]"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "   end"
    :percent_run: 100
  app/controllers/maintain_controller.rb: 
    :lines: 
    - :was_run: true
      :content: "   require 'pathname'"
    - :was_run: true
      :content: "   class MaintainController < ApplicationController"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     def import_file"
    - :was_run: false
      :content: "       begin"
    - :was_run: false
      :content: "         if params[:importFile].nil? "
    - :was_run: false
      :content: "           flash[:error] = \"Import failed because file was not specified.\""
    - :was_run: false
      :content: "           redirect_to :back"
    - :was_run: false
      :content: "           return"
    - :was_run: false
      :content: "         end"
    - :was_run: false
      :content: "         if params[:commit] == \"XML file\""
    - :was_run: false
      :content: "           @election = TTV::ImportExport.import(params[:importFile])"
    - :was_run: false
      :content: "         elsif params[:commit] == \"YML file\""
    - :was_run: false
      :content: "           import_handler = TTV::YAMLImport.new(params[:importFile])"
    - :was_run: false
      :content: "           @election = import_handler.import"
    - :was_run: false
      :content: "         end"
    - :was_run: false
      :content: "         flash[:notice] = \"Election import was successful. Here is your new election.\""
    - :was_run: false
      :content: "         redirect_to @election"
    - :was_run: false
      :content: "       rescue ActionController::RedirectBackError => ex"
    - :was_run: false
      :content: "         redirect_to elections_url"
    - :was_run: false
      :content: "       rescue Exception => ex"
    - :was_run: false
      :content: "         flash[:error] = \"Import error: #{ex.message}\";"
    - :was_run: false
      :content: "         redirect_to elections_url"
    - :was_run: false
      :content: "       end"
    - :was_run: false
      :content: "     end  "
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     def import_batch"
    - :was_run: true
      :content: "       begin"
    - :was_run: true
      :content: "         if params[:import_folder_path].length == 0 "
    - :was_run: false
      :content: "           flash[:error] = \"Import failed because the directory was not specified.\""
    - :was_run: false
      :content: "           redirect_to :back"
    - :was_run: false
      :content: "           return"
    - :was_run: false
      :content: "         end"
    - :was_run: true
      :content: "         if params[:commit] == \"XML files\""
    - :was_run: true
      :content: "               import_handler = TTV::ImportExport::Import.new(params[:import_folder_path])"
    - :was_run: true
      :content: "               @election = import_handler.import_batch"
    - :was_run: true
      :content: "         elsif params[:commit] == \"YML files\""
    - :was_run: true
      :content: "           import_handler = TTV::YAMLImport.new(params[:import_folder_path])"
    - :was_run: true
      :content: "           @election = import_handler.import_batch"
    - :was_run: true
      :content: "         end"
    - :was_run: true
      :content: "         flash[:notice] = \"Election import was successful. Here are your elections\""
    - :was_run: true
      :content: "         redirect_to elections_url"
    - :was_run: false
      :content: "       rescue ActionController::RedirectBackError => ex"
    - :was_run: false
      :content: "         redirect_to elections_url"
    - :was_run: false
      :content: "       rescue Exception => ex"
    - :was_run: false
      :content: "         flash[:error] = \"Import error: #{ex.message}\";"
    - :was_run: false
      :content: "         redirect_to elections_url"
    - :was_run: false
      :content: "       end"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def export_file       "
    - :was_run: false
      :content: "       if params[:commit] == \"YML file\""
    - :was_run: false
      :content: "         election = Election.find(params[:election_to_export][:id])"
    - :was_run: false
      :content: "         export_obj = TTV::YAMLExport.new(election)"
    - :was_run: false
      :content: "         export_obj.do_export"
    - :was_run: false
      :content: "         election_hash = export_obj.election_hash"
    - :was_run: false
      :content: "         file_contents = YAML.dump(TTV::DataLayer.audit_header_dummy) + YAML.dump(election_hash)"
    - :was_run: false
      :content: "         send_data file_contents, :content_type => \"text\", :filename => election.display_name.gsub(' ', '_') + \".yml\""
    - :was_run: false
      :content: "         flash[:notice] = \"Export succeeded.\""
    - :was_run: false
      :content: "       elsif params[:commit] == \"XML file\""
    - :was_run: false
      :content: "         election = Election.find(params[:election_to_export][:id])"
    - :was_run: false
      :content: "         xml_builder = TTV::ImportExport.export(election)"
    - :was_run: false
      :content: "         send_data xml_builder, :content_type => \"text\", :filename => election.display_name.gsub(' ', '_') + \".xml\""
    - :was_run: false
      :content: "         flash[:notice] = \"Export succeeded.\""
    - :was_run: false
      :content: "       else"
    - :was_run: false
      :content: "         flash[:error] = \"Apparent bug in Maintain Controller. Call Pito :)\""
    - :was_run: false
      :content: "       end"
    - :was_run: false
      :content: "     end"
    - :was_run: false
      :content: "   "
    - :was_run: false
      :content: "   end"
    :percent_run: 27
  app/ballots/aiga/ballot_config.rb: 
    :lines: 
    - :was_run: true
      :content: "   require 'ttv/abstract_ballot'"
    - :was_run: true
      :content: "   require 'prawn'"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "   module AigaBallot"
    - :was_run: true
      :content: "     include DefaultBallot"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "   end"
    :percent_run: 100
  :global_percent_run: 64.3
  app/controllers/ballot_style_templates_controller.rb: 
    :lines: 
    - :was_run: true
      :content: "   class BallotStyleTemplatesController < ApplicationController"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     layout 'application'"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     # GET /ballot_style_templates"
    - :was_run: true
      :content: "     # GET /ballot_style_templates.xml"
    - :was_run: true
      :content: "     def index"
    - :was_run: true
      :content: "       @ballot_style_templates = BallotStyleTemplate.paginate(:per_page => 10, :page => params[:page])"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       respond_to do |format|"
    - :was_run: true
      :content: "         format.html # index.html.erb"
    - :was_run: true
      :content: "         format.xml  { render :xml => @ballot_style_templates }"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     # GET /ballot_style_templates/1"
    - :was_run: true
      :content: "     # GET /ballot_style_templates/1.xml"
    - :was_run: true
      :content: "     def show"
    - :was_run: false
      :content: "       @ballot_style_template = BallotStyleTemplate.find(params[:id])"
    - :was_run: false
      :content: "   "
    - :was_run: false
      :content: "       respond_to do |format|"
    - :was_run: false
      :content: "         format.html # show.html.erb"
    - :was_run: false
      :content: "         format.xml  { render :xml => @ballot_style_template }"
    - :was_run: false
      :content: "       end"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     # GET /ballot_style_templates/new"
    - :was_run: true
      :content: "     # GET /ballot_style_templates/new.xml"
    - :was_run: true
      :content: "     def new"
    - :was_run: true
      :content: "       @ballot_style_template = BallotStyleTemplate.new"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       respond_to do |format|"
    - :was_run: true
      :content: "         format.html # new.html.erb"
    - :was_run: true
      :content: "         format.xml  { render :xml => @ballot_style_template }"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     # GET /ballot_style_templates/1/edit"
    - :was_run: true
      :content: "     def edit"
    - :was_run: false
      :content: "       @ballot_style_template = BallotStyleTemplate.find(params[:id])"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     # POST /ballot_style_templates"
    - :was_run: true
      :content: "     # POST /ballot_style_templates.xml"
    - :was_run: true
      :content: "     def create"
    - :was_run: false
      :content: "       @ballot_style_template = BallotStyleTemplate.new(params[:ballot_style_template])"
    - :was_run: false
      :content: "   "
    - :was_run: false
      :content: "       respond_to do |format|"
    - :was_run: false
      :content: "         if @ballot_style_template.save"
    - :was_run: false
      :content: "           flash[:notice] = 'BallotStyleTemplate was successfully created.'"
    - :was_run: false
      :content: "           format.html { redirect_to(@ballot_style_template) }"
    - :was_run: false
      :content: "           format.xml  { render :xml => @ballot_style_template, :status => :created, :location => @ballot_style_template }"
    - :was_run: false
      :content: "         else"
    - :was_run: false
      :content: "           format.html { render :action => \"new\" }"
    - :was_run: false
      :content: "           format.xml  { render :xml => @ballot_style_template.errors, :status => :unprocessable_entity }"
    - :was_run: false
      :content: "         end"
    - :was_run: false
      :content: "       end"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     # PUT /ballot_style_templates/1"
    - :was_run: true
      :content: "     # PUT /ballot_style_templates/1.xml"
    - :was_run: true
      :content: "     def update"
    - :was_run: false
      :content: "       @ballot_style_template = BallotStyleTemplate.find(params[:id])"
    - :was_run: false
      :content: "   "
    - :was_run: false
      :content: "       respond_to do |format|"
    - :was_run: false
      :content: "         if @ballot_style_template.update_attributes(params[:ballot_style_template])"
    - :was_run: false
      :content: "           flash[:notice] = 'BallotStyleTemplate was successfully updated.'"
    - :was_run: false
      :content: "           format.html { redirect_to(@ballot_style_template) }"
    - :was_run: false
      :content: "           format.xml  { head :ok }"
    - :was_run: false
      :content: "         else"
    - :was_run: false
      :content: "           format.html { render :action => \"edit\" }"
    - :was_run: false
      :content: "           format.xml  { render :xml => @ballot_style_template.errors, :status => :unprocessable_entity }"
    - :was_run: false
      :content: "         end"
    - :was_run: false
      :content: "       end"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     # DELETE /ballot_style_templates/1"
    - :was_run: true
      :content: "     # DELETE /ballot_style_templates/1.xml"
    - :was_run: true
      :content: "     def destroy"
    - :was_run: false
      :content: "       @ballot_style_template = BallotStyleTemplate.find(params[:id])"
    - :was_run: false
      :content: "       @ballot_style_template.destroy"
    - :was_run: false
      :content: "   "
    - :was_run: false
      :content: "       respond_to do |format|"
    - :was_run: false
      :content: "         format.html { redirect_to(ballot_style_templates_url) }"
    - :was_run: false
      :content: "         format.xml  { head :ok }"
    - :was_run: false
      :content: "       end"
    - :was_run: false
      :content: "     end"
    - :was_run: false
      :content: "   end"
    :percent_run: 50
  app/helpers/ballot_styles_helper.rb: 
    :lines: 
    - :was_run: true
      :content: "   module BallotStylesHelper"
    - :was_run: true
      :content: "   end"
    :percent_run: 100
  app/controllers/elections_controller.rb: 
    :lines: 
    - :was_run: true
      :content: "   class ElectionsController < ApplicationController"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "    authorize_resource"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     def index"
    - :was_run: true
      :content: "       current_context.reset"
    - :was_run: true
      :content: "       @elections = Election.paginate(:per_page => 10, :page => params[:page])"
    - :was_run: true
      :content: "       redirect_to :action => 'new' if @elections.empty?"
    - :was_run: true
      :content: "       @election = UserSession.find.election if UserSession.find"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def show"
    - :was_run: true
      :content: "       @election = Election.find(params[:id], :include => [ "
    - :was_run: true
      :content: "         { :district_set => :districts }, "
    - :was_run: true
      :content: "         { :contests => :candidates },"
    - :was_run: true
      :content: "         :questions, "
    - :was_run: true
      :content: "         ])"
    - :was_run: true
      :content: "       current_context.election = @election"
    - :was_run: true
      :content: "       @districts = @election.districts.paginate(:per_page => 10, :page => params[:page])"
    - :was_run: true
      :content: "       @contests = @election.contests.paginate(:per_page => 10, :page => params[:page], :order => 'position')"
    - :was_run: true
      :content: "       @questions = @election.questions.paginate(:per_page => 10, :page => params[:page])"
    - :was_run: true
      :content: "       @precincts = @election.district_set.precincts.paginate(:per_page => 10, :page => params[:page])"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def new"
    - :was_run: true
      :content: "       @election = Election.new"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def edit"
    - :was_run: true
      :content: "       @election = Election.find(params[:id])"
    - :was_run: true
      :content: "       @dist_sets = DistrictSet.find(:all)"
    - :was_run: true
      :content: "       render :partial => 'edit', :locals => { :election => @election } if request.xhr?"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def create"
    - :was_run: true
      :content: "       @election = Election.new(params[:election])"
    - :was_run: true
      :content: "       if @election.save"
    - :was_run: true
      :content: "         flash[:notice] = 'Election was successfully created.'"
    - :was_run: true
      :content: "         redirect_to @election"
    - :was_run: false
      :content: "       else"
    - :was_run: false
      :content: "         render :action => \"new\" "
    - :was_run: false
      :content: "       end"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     # responds to AJAX updates too"
    - :was_run: true
      :content: "     def update"
    - :was_run: true
      :content: "       @election = Election.find(params[:id])"
    - :was_run: true
      :content: "       success = @election.update_attributes(params[:election])"
    - :was_run: true
      :content: "       flash[:notice] = 'Election was successfully updated.' if success"
    - :was_run: true
      :content: "       if request.xhr?"
    - :was_run: false
      :content: "         edit_id = \"#{dom_id(@election)}_edit\""
    - :was_run: false
      :content: "         static_id = \"#{dom_id(@election)}_static\""
    - :was_run: false
      :content: "         render :update do |page|"
    - :was_run: false
      :content: "           if success"
    - :was_run: false
      :content: "             page.remove edit_id"
    - :was_run: false
      :content: "             page.replace static_id, :partial => 'static', :locals => { :election => @election }"
    - :was_run: false
      :content: "           else"
    - :was_run: false
      :content: "             @dist_sets = DistrictSet.find(:all)"
    - :was_run: false
      :content: "             page.replace edit_id, :partial => 'edit', :locals => { :election => @election }"
    - :was_run: false
      :content: "           end"
    - :was_run: false
      :content: "         end"
    - :was_run: true
      :content: "       elsif success"
    - :was_run: true
      :content: "         redirect_to @election"
    - :was_run: false
      :content: "       else"
    - :was_run: false
      :content: "        render :action => \"edit\""
    - :was_run: false
      :content: "       end"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def destroy"
    - :was_run: true
      :content: "       @election = Election.find(params[:id])"
    - :was_run: true
      :content: "       @election.destroy"
    - :was_run: true
      :content: "       redirect_to elections_url"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def import"
    - :was_run: false
      :content: "       begin"
    - :was_run: false
      :content: "         if params[:importFile].nil? "
    - :was_run: false
      :content: "           flash[:error] = \"Import failed because file was not specified.\""
    - :was_run: false
      :content: "           redirect_to :back"
    - :was_run: false
      :content: "         else"
    - :was_run: false
      :content: "           @election = TTV::ImportExport.import(params[:importFile])"
    - :was_run: false
      :content: "           flash[:notice] = \"Election import was successful. Here is your new election.\""
    - :was_run: false
      :content: "           redirect_to @election"
    - :was_run: false
      :content: "         end"
    - :was_run: false
      :content: "       rescue ActionController::RedirectBackError => ex"
    - :was_run: false
      :content: "         redirect_to elections_url"
    - :was_run: false
      :content: "       rescue Exception => ex"
    - :was_run: false
      :content: "         raise ex"
    - :was_run: false
      :content: "         flash[:error] = \"Import error: #{ex.message}\";"
    - :was_run: false
      :content: "         redirect_to elections_url"
    - :was_run: false
      :content: "       end"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     def import_yml"
    - :was_run: false
      :content: "       begin"
    - :was_run: false
      :content: "         if params[:importFile].nil? "
    - :was_run: false
      :content: "           flash[:error] = \"Import failed because file was not specified.\""
    - :was_run: false
      :content: "           redirect_to :back"
    - :was_run: false
      :content: "         else"
    - :was_run: false
      :content: "           import_handler = TTV::YAMLImport.new(params[:importFile])"
    - :was_run: false
      :content: "           @election = import_handler.import"
    - :was_run: false
      :content: "           flash[:notice] = \"Election import was successful. Here is your new election.\""
    - :was_run: false
      :content: "           redirect_to @election"
    - :was_run: false
      :content: "         end"
    - :was_run: false
      :content: "       rescue ActionController::RedirectBackError => ex"
    - :was_run: false
      :content: "         redirect_to elections_url"
    - :was_run: false
      :content: "       rescue Exception => ex"
    - :was_run: false
      :content: "         raise ex"
    - :was_run: false
      :content: "         flash[:error] = \"Import error: #{ex.message}\";"
    - :was_run: false
      :content: "         redirect_to elections_url"
    - :was_run: false
      :content: "       end"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     def export"
    - :was_run: false
      :content: "       @election = Election.find(params[:id])"
    - :was_run: false
      :content: "       title = @election.display_name.gsub(/ /, \"_\").camelize"
    - :was_run: false
      :content: "       headers[\"Content-disposition\"] = \"attachment;filename=\\\"#{title}.xml\\\"\""
    - :was_run: false
      :content: "       render :xml => @election"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def precincts"
    - :was_run: false
      :content: "       @election = Election.find(params[:id])"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     def translate"
    - :was_run: false
      :content: "       @election = Election.find(params[:id])"
    - :was_run: false
      :content: "       TTV::PDFBallot.translate(@election, params[:lang])"
    - :was_run: false
      :content: "       flash[:notice] = \"Election was successfully translated\""
    - :was_run: false
      :content: "       redirect_to precincts_election_url"
    - :was_run: false
      :content: "     end"
    - :was_run: false
      :content: "   "
    - :was_run: false
      :content: "   end"
    - :was_run: true
      :content: "   "
    :percent_run: 49
  app/controllers/parties_controller.rb: 
    :lines: 
    - :was_run: true
      :content: "   class PartiesController < ApplicationController"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def index"
    - :was_run: true
      :content: "       @parties = Party.paginate(:per_page => 10, :page => params[:page])"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def show"
    - :was_run: false
      :content: "       @party = Party.find(params[:id])"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def new"
    - :was_run: true
      :content: "       @party = Party.new"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def edit"
    - :was_run: false
      :content: "       @party = Party.find(params[:id])"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def create"
    - :was_run: true
      :content: "       @party = Party.new(params[:party])"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       if @party.save"
    - :was_run: true
      :content: "         flash[:notice] = 'Party was successfully created.'"
    - :was_run: true
      :content: "         redirect_to(@party) "
    - :was_run: false
      :content: "       else"
    - :was_run: false
      :content: "         render :action => \"new\""
    - :was_run: false
      :content: "       end"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def update"
    - :was_run: false
      :content: "       @party = Party.find(params[:id])"
    - :was_run: false
      :content: "   "
    - :was_run: false
      :content: "       if @party.update_attributes(params[:party])"
    - :was_run: false
      :content: "         flash[:notice] = 'Party was successfully updated.'"
    - :was_run: false
      :content: "         redirect_to(@party)"
    - :was_run: false
      :content: "       else"
    - :was_run: false
      :content: "         render :action => \"edit\""
    - :was_run: false
      :content: "       end"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def destroy"
    - :was_run: false
      :content: "       @party = Party.find(params[:id])"
    - :was_run: false
      :content: "       @party.destroy"
    - :was_run: false
      :content: "       redirect_to(parties_url)"
    - :was_run: false
      :content: "     end"
    - :was_run: false
      :content: "     "
    - :was_run: false
      :content: "   end"
    :percent_run: 51
  app/helpers/precincts_helper.rb: 
    :lines: 
    - :was_run: true
      :content: "   module PrecinctsHelper"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "   # Return how many contests are defined for this precinct and election, "
    - :was_run: true
      :content: "   # or the total number of contests if we are not looking at a specific election"
    - :was_run: true
      :content: "     def precinct_contest_count_helper (prec, elect)"
    - :was_run: true
      :content: "       if elect.nil? "
    - :was_run: true
      :content: "         Contest.all.length"
    - :was_run: false
      :content: "       else"
    - :was_run: false
      :content: "         Contest.contests_for_precinct_election(prec, elect).length"
    - :was_run: false
      :content: "       end"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "   # Return how many questions are defined for this precinct and election, "
    - :was_run: true
      :content: "   # or the total number of questions, if we are not looking at a specific election"
    - :was_run: true
      :content: "     def precinct_question_count_helper (prec, elect)"
    - :was_run: true
      :content: "       if elect.nil? "
    - :was_run: true
      :content: "         \"--\""
    - :was_run: false
      :content: "       else"
    - :was_run: false
      :content: "         Question.questions_for_precinct_election(prec, elect).length"
    - :was_run: false
      :content: "       end"
    - :was_run: false
      :content: "     end"
    - :was_run: false
      :content: "     "
    - :was_run: false
      :content: "   end"
    :percent_run: 57
  app/controllers/precincts_controller.rb: 
    :lines: 
    - :was_run: true
      :content: "   require 'abstract_ballot'"
    - :was_run: true
      :content: "   require 'rubygems'"
    - :was_run: true
      :content: "   require 'zip/zip'"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "   CHECKBOX = \"\\xE2\\x98\\x90\" # \"\xE2\x98\x90\""
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "   class PrecinctsController < ApplicationController"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def index"
    - :was_run: true
      :content: "       current_context.reset"
    - :was_run: true
      :content: "       @precincts = Precinct.paginate(:per_page => 10, :page => params[:page])"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def show"
    - :was_run: false
      :content: "       @precinct = Precinct.find(params[:id])"
    - :was_run: false
      :content: "       current_context.precinct = @precinct"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def new"
    - :was_run: true
      :content: "       @precinct = Precinct.new"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def edit"
    - :was_run: false
      :content: "       @precinct = Precinct.find(params[:id])"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def create"
    - :was_run: false
      :content: "       @precinct = Precinct.new(params[:precinct])"
    - :was_run: false
      :content: "   "
    - :was_run: false
      :content: "       if @precinct.save"
    - :was_run: false
      :content: "         flash[:notice] = 'Precinct was successfully created.'"
    - :was_run: false
      :content: "         redirect_to(@precinct)"
    - :was_run: false
      :content: "       else"
    - :was_run: false
      :content: "         render :action => \"new\" "
    - :was_run: false
      :content: "       end"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def update"
    - :was_run: false
      :content: "       @precinct = Precinct.find(params[:id])"
    - :was_run: false
      :content: "   "
    - :was_run: false
      :content: "       if @precinct.update_attributes(params[:precinct])"
    - :was_run: false
      :content: "         flash[:notice] = 'Precinct was successfully updated.'"
    - :was_run: false
      :content: "         redirect_to(@precinct) "
    - :was_run: false
      :content: "       else"
    - :was_run: false
      :content: "         render :action => \"edit\" "
    - :was_run: false
      :content: "       end"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def destroy"
    - :was_run: false
      :content: "       @precinct = Precinct.find(params[:id])"
    - :was_run: false
      :content: "       @precinct.destroy"
    - :was_run: false
      :content: "       redirect_to(precincts_url) "
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     def ballot"
    - :was_run: false
      :content: "        election = Election.find(params[:election_id])"
    - :was_run: false
      :content: "        precinct = Precinct.find(params[:id])"
    - :was_run: false
      :content: "        unless election.ballot_style_template_id == nil"
    - :was_run: false
      :content: "          ballot_style_template = BallotStyleTemplate.find(election.ballot_style_template_id)"
    - :was_run: false
      :content: "          begin"
    - :was_run: false
      :content: "                new_ballot = election.render_ballot(election, precinct, ballot_style_template)"
    - :was_run: false
      :content: "                #RENDER BASED ON MEDIUM CHOSEN   "
    - :was_run: false
      :content: "                if new_ballot[:medium_id] == 0"
    - :was_run: false
      :content: "                   send_data new_ballot[:pdfBallot], :filename => new_ballot[:fileName], :type => \"application/pdf\", :disposition => 'attachment'"
    - :was_run: false
      :content: "                elsif new_ballot[:medium_id] == 1"
    - :was_run: false
      :content: "                  render :text => 'This is where we will generate html ballot'"
    - :was_run: false
      :content: "                else"
    - :was_run: false
      :content: "                  flash[:error] = \"Please edit ballot style template to include a output a medium and then try again.\""
    - :was_run: false
      :content: "                  redirect_to election_path election"
    - :was_run: false
      :content: "                end"
    - :was_run: false
      :content: "           rescue Exception => ex"
    - :was_run: false
      :content: "             flash[:error] = \"precinct_controller - #{ex.message}\""
    - :was_run: false
      :content: "             redirect_to precincts_election_path election"
    - :was_run: false
      :content: "          end"
    - :was_run: false
      :content: "        else"
    - :was_run: false
      :content: "          flash[:error] = \"A Ballot Style Template must be selected for this election before a ballot can be generated.\""
    - :was_run: false
      :content: "          redirect_to election_path election"
    - :was_run: false
      :content: "        end    "
    - :was_run: false
      :content: "   "
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     def ballots"
    - :was_run: false
      :content: "        election = Election.find(params[:election_id])"
    - :was_run: false
      :content: "        precincts = election.district_set.precincts"
    - :was_run: false
      :content: "        "
    - :was_run: false
      :content: "        unless election.ballot_style_template_id == nil"
    - :was_run: false
      :content: "          ballot_style_template = BallotStyleTemplate.find(election.ballot_style_template_id)"
    - :was_run: false
      :content: "          begin"
    - :was_run: false
      :content: "           ballots_array = election.render_ballots(election, precincts, ballot_style_template)"
    - :was_run: false
      :content: "           zipped_ballots = zip_ballots(ballots_array)"
    - :was_run: false
      :content: "           send_file zipped_ballots, :type => 'application/zip', :disposition => 'application', :filename => \"ballots-#{Time.now}.zip\""
    - :was_run: false
      :content: "          "
    - :was_run: false
      :content: "         rescue Exception => ex"
    - :was_run: false
      :content: "           flash[:error] = \"precinct_controller - #{ex.message}\""
    - :was_run: false
      :content: "           redirect_to precincts_election_path election"
    - :was_run: false
      :content: "         end"
    - :was_run: false
      :content: "        else"
    - :was_run: false
      :content: "          flash[:error] = \"A Ballot Style Template must be selected for this election before any ballots can be generated.\""
    - :was_run: false
      :content: "          redirect_to election_path election"
    - :was_run: false
      :content: "        end    "
    - :was_run: false
      :content: "   "
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     def zip_ballots(ballots_array)"
    - :was_run: false
      :content: "        temp_file = \"tmp/ballot_zips/ballots-#{Time.now}.zip\""
    - :was_run: false
      :content: "        Zip::ZipFile.open(temp_file, Zip::ZipFile::CREATE) {"
    - :was_run: false
      :content: "           |zipfile|"
    - :was_run: false
      :content: "            ballots_array.each do |new_ballot|"
    - :was_run: false
      :content: "              zipfile.get_output_stream(new_ballot[:fileName]) { |f| f.puts new_ballot[:pdfBallot] }"
    - :was_run: false
      :content: "            end"
    - :was_run: false
      :content: "          }"
    - :was_run: false
      :content: "       return temp_file"
    - :was_run: false
      :content: "     end"
    - :was_run: false
      :content: "   end"
    :percent_run: 29
  app/controllers/jurisdictions_controller.rb: 
    :lines: 
    - :was_run: true
      :content: "   class JurisdictionsController < ApplicationController"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     def current"
    - :was_run: true
      :content: "       if !current_context.jurisdiction?"
    - :was_run: true
      :content: "         redirect_to :action => :change"
    - :was_run: false
      :content: "       else"
    - :was_run: false
      :content: "         current_context.election = nil"
    - :was_run: false
      :content: "         @elections = current_context.jurisdiction.elections.paginate(:per_page => 10, :page => params[:page])"
    - :was_run: false
      :content: "         render :elections"
    - :was_run: false
      :content: "       end  "
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     def elections"
    - :was_run: false
      :content: "       current_context.election = nil"
    - :was_run: false
      :content: "       @elections = current_context.jurisdiction.elections.paginate(:per_page => 10, :page => params[:page])"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "    "
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     def change"
    - :was_run: false
      :content: "       @district_sets = DistrictSet.paginate(:per_page => 10, :page => params[:page])"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     def set"
    - :was_run: false
      :content: "       current_context.jurisdiction = DistrictSet.find(params[:id])"
    - :was_run: false
      :content: "       redirect_to :action => :elections"
    - :was_run: false
      :content: "     end"
    - :was_run: false
      :content: "    "
    - :was_run: false
      :content: "   end"
    :percent_run: 43
  app/helpers/candidates_helper.rb: 
    :lines: 
    - :was_run: true
      :content: "   module CandidatesHelper"
    - :was_run: true
      :content: "   end"
    :percent_run: 100
  app/helpers/jurisdiction_helper.rb: 
    :lines: 
    - :was_run: true
      :content: "   module JurisdictionHelper"
    - :was_run: true
      :content: "   end"
    :percent_run: 100
  app/models/district_type.rb: 
    :lines: 
    - :was_run: true
      :content: "   # == Schema Information"
    - :was_run: true
      :content: "   # Schema version: 20100215144641"
    - :was_run: true
      :content: "   #"
    - :was_run: true
      :content: "   # Table name: district_types"
    - :was_run: true
      :content: "   #"
    - :was_run: true
      :content: "   #  id         :integer         not null, primary key"
    - :was_run: true
      :content: "   #  title      :string(255)"
    - :was_run: true
      :content: "   #  created_at :datetime"
    - :was_run: true
      :content: "   #  updated_at :datetime"
    - :was_run: true
      :content: "   #"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "   class DistrictType < ActiveRecord::Base"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     include ConstantCache"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     cache_constants :key => :title"
    - :was_run: true
      :content: "       "
    - :was_run: true
      :content: "     def DistrictType.xmlToId(xml)"
    - :was_run: true
      :content: "       raise \"unknown district type #{xml}\" unless const_get(xml.constant_name)"
    - :was_run: true
      :content: "       const_get(xml.constant_name).id"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     def idToXml"
    - :was_run: true
      :content: "       self.title.downcase"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "   end"
    :percent_run: 100
  app/models/user_session.rb: 
    :lines: 
    - :was_run: true
      :content: "   class UserSession < Authlogic::Session::Base"
    - :was_run: true
      :content: "     generalize_credentials_error_messages \"Your login information is invalid.\""
    - :was_run: true
      :content: "     find_by_login_method :find_by_email"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "   #  attr_accessible :election_id"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     def election"
    - :was_run: true
      :content: "       return Election.find(@election_id) if (@election_id && election = Election.find(@election_id))"
    - :was_run: true
      :content: "       election = Election.find(:last, :order => 'created_at')"
    - :was_run: true
      :content: "       @election_id = election.id if election"
    - :was_run: true
      :content: "       return election"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     def election_id=(election_id)"
    - :was_run: false
      :content: "       @election_id = election_id"
    - :was_run: false
      :content: "     end"
    - :was_run: false
      :content: "   end"
    :percent_run: 82
  app/ttv/scanner.rb: 
    :lines: 
    - :was_run: true
      :content: "   module TTV"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     class BallotMark"
    - :was_run: true
      :content: "       def initialize(contest, choice, page, location)"
    - :was_run: true
      :content: "         @contest = contest"
    - :was_run: true
      :content: "         @page = page"
    - :was_run: true
      :content: "         @choice = choice"
    - :was_run: true
      :content: "         @location = location"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       def to_json(*a)"
    - :was_run: false
      :content: "         x = { :contest => @contest.id,"
    - :was_run: false
      :content: "           :choice => ((@choice.instance_of? String) ? @choice : @choice.id ),"
    - :was_run: false
      :content: "           :page => @page,"
    - :was_run: false
      :content: "           :location => @location"
    - :was_run: false
      :content: "         }"
    - :was_run: false
      :content: "         x.to_json(*a)"
    - :was_run: false
      :content: "       end"
    - :was_run: false
      :content: "   "
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     class Scanner"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       attr_accessor :ballot_marks"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       def initialize"
    - :was_run: true
      :content: "         @hspace = 72 / 4  # 1/2 inch"
    - :was_run: true
      :content: "         @vspace = 72 / 4  # 1/2 inch"
    - :was_run: true
      :content: "         @bar_width = 18"
    - :was_run: true
      :content: "         @bar_height = 140"
    - :was_run: true
      :content: "         @ballot_marks = []"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       def to_json(*a)"
    - :was_run: false
      :content: "         @ballot_marks.to_json(*a)"
    - :was_run: false
      :content: "       end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       def set_checkbox(width, height, orientation)"
    - :was_run: true
      :content: "         @check_width = width"
    - :was_run: true
      :content: "         @check_height = height"
    - :was_run: true
      :content: "         @orientation = orientation"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       def create_ballot_mark(contest, choice, page, location )"
    - :was_run: true
      :content: "         BallotMark.new(contest, choice, page, location)"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       def append_ballot_marks(marks)"
    - :was_run: true
      :content: "         @ballot_marks.concat(marks)"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       def render_grid(pdf)"
    - :was_run: true
      :content: "         pdf.canvas do"
    - :was_run: true
      :content: "           pdf.fill_color = 'FFFF00'"
    - :was_run: true
      :content: "           x = ((pdf.bounds.right - pdf.bounds.left) / (@check_width + @hspace)).floor"
    - :was_run: true
      :content: "           y = ((pdf.bounds.top - pdf.bounds.bottom) / (@check_height + @vspace)).floor"
    - :was_run: true
      :content: "           x.times do |i|"
    - :was_run: true
      :content: "             y.times do |j|"
    - :was_run: true
      :content: "               my_x = (@check_width + @hspace) * i"
    - :was_run: true
      :content: "               my_y = pdf.bounds.top - (@check_height + @vspace) * j"
    - :was_run: true
      :content: "   #            pdf.rectangle([ my_x, my_y], @check_width, @check_height)"
    - :was_run: true
      :content: "             end"
    - :was_run: true
      :content: "           end"
    - :was_run: true
      :content: "           pdf.fill"
    - :was_run: true
      :content: "           pdf.fill_color = '000000'"
    - :was_run: true
      :content: "         end"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       # our grid is aligned to top/left"
    - :was_run: true
      :content: "       # beware of this when trying to align the y axis  "
    - :was_run: true
      :content: "       def align_checkbox(pdf, point)"
    - :was_run: true
      :content: "         x_offset = pdf.bounds.absolute_left"
    - :was_run: true
      :content: "         y_offset = pdf.bounds.absolute_top - pdf.bounds.top"
    - :was_run: true
      :content: "         x = (point[0] + x_offset) / (@check_width + @hspace)"
    - :was_run: true
      :content: "         x_count = @orientations == :left ? x.ceil : x.floor"
    - :was_run: true
      :content: "         x = x.ceil * (@check_width + @hspace) - x_offset"
    - :was_run: true
      :content: "         y = (pdf.bounds.absolute_top - point[1] + y_offset) / (@check_height + @vspace)"
    - :was_run: true
      :content: "         y_count = y.ceil"
    - :was_run: true
      :content: "         y = pdf.bounds.absolute_top - (y.ceil * (@check_height + @vspace)) + y_offset"
    - :was_run: true
      :content: "         return [x, y], [x_count, y_count]"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       def render_ballot_marks(pdf)"
    - :was_run: true
      :content: "         pdf.fill_color = \"#000000\""
    - :was_run: true
      :content: "         pdf.rectangle [0, @bar_height], @bar_width, @bar_height"
    - :was_run: true
      :content: "         pdf.rectangle pdf.bounds.top_left, @bar_width, @bar_height"
    - :was_run: true
      :content: "         pdf.rectangle [pdf.bounds.right - @bar_width, @bar_height], @bar_width, @bar_height"
    - :was_run: true
      :content: "         pdf.rectangle [pdf.bounds.right - @bar_width, pdf.bounds.top], @bar_width, @bar_height"
    - :was_run: true
      :content: "         pdf.fill_and_stroke"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "   end"
    :percent_run: 88
  app/helpers/questions_helper.rb: 
    :lines: 
    - :was_run: true
      :content: "   module QuestionsHelper"
    - :was_run: true
      :content: "   end"
    :percent_run: 100
  app/models/user.rb: 
    :lines: 
    - :was_run: true
      :content: "   # == Schema Information"
    - :was_run: true
      :content: "   # Schema version: 20100215144641"
    - :was_run: true
      :content: "   #"
    - :was_run: true
      :content: "   # Table name: users"
    - :was_run: true
      :content: "   #"
    - :was_run: true
      :content: "   #  id                 :integer         not null, primary key"
    - :was_run: true
      :content: "   #  email              :string(255)"
    - :was_run: true
      :content: "   #  crypted_password   :string(255)"
    - :was_run: true
      :content: "   #  password_salt      :string(255)"
    - :was_run: true
      :content: "   #  persistence_token  :string(255)"
    - :was_run: true
      :content: "   #  perishable_token   :string(255)"
    - :was_run: true
      :content: "   #  failed_login_count :integer"
    - :was_run: true
      :content: "   #  created_at         :datetime"
    - :was_run: true
      :content: "   #  updated_at         :datetime"
    - :was_run: true
      :content: "   #"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "   class User < ActiveRecord::Base"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     has_many :roles, :class_name => \"UserRole\""
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def role?(role_name)"
    - :was_run: true
      :content: "       # roles.map(&:name)  build an array of role names for this user."
    - :was_run: true
      :content: "       # include?(role_name.to_s)  check if the role_name param is in"
    - :was_run: true
      :content: "       # this array"
    - :was_run: true
      :content: "       role_name && !roles.blank? && roles.map(&:name).include?(role_name.to_s)"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     attr_accessible :email, :password, :password_confirmation"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     acts_as_authentic do |c|"
    - :was_run: true
      :content: "       c.merge_validates_length_of_password_field_options( { :minimum => 1, :too_short => \"needs to be 1 chars\"})"
    - :was_run: true
      :content: "       c.ignore_blank_passwords=true"
    - :was_run: true
      :content: "       c.perishable_token_valid_for=24.hours"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def deliver_password_reset_instructions!  "
    - :was_run: false
      :content: "       reset_perishable_token!"
    - :was_run: false
      :content: "       Notifier.deliver_password_reset_instructions(self)  "
    - :was_run: false
      :content: "     end"
    - :was_run: false
      :content: "   "
    - :was_run: false
      :content: "   end"
    :percent_run: 88
  app/controllers/user_sessions_controller.rb: 
    :lines: 
    - :was_run: true
      :content: "   # login and password recovery"
    - :was_run: true
      :content: "   class UserSessionsController < ApplicationController"
    - :was_run: true
      :content: "     def new"
    - :was_run: true
      :content: "       @user_session = UserSession.new"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     def create"
    - :was_run: false
      :content: "       @user_session = UserSession.new(params[:user_session])"
    - :was_run: false
      :content: "       if @user_session.save"
    - :was_run: false
      :content: "         flash[:notice] = \"Successfully logged in.\""
    - :was_run: false
      :content: "         redirect_to root_url"
    - :was_run: false
      :content: "       else"
    - :was_run: false
      :content: "         render :action => 'new'"
    - :was_run: false
      :content: "       end"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     def update"
    - :was_run: false
      :content: "       @user_session = UserSession.find"
    - :was_run: false
      :content: "       if @election.update_attributes(params[:session])"
    - :was_run: false
      :content: "         if request.xhr?"
    - :was_run: false
      :content: "           render :update do |page|"
    - :was_run: false
      :content: "               page \"<< window.location.reload()\""
    - :was_run: false
      :content: "           end"
    - :was_run: false
      :content: "         end"
    - :was_run: false
      :content: "       end"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def destroy"
    - :was_run: false
      :content: "       @user_session = UserSession.find"
    - :was_run: false
      :content: "       @user_session.destroy"
    - :was_run: false
      :content: "       flash[:notice] = \"Successfully logged out.\""
    - :was_run: false
      :content: "       redirect_to root_url"
    - :was_run: false
      :content: "     end"
    - :was_run: false
      :content: "   "
    - :was_run: false
      :content: "   end"
    :percent_run: 31
  app/helpers/district_types_helper.rb: 
    :lines: 
    - :was_run: true
      :content: "   module DistrictTypesHelper"
    - :was_run: true
      :content: "   end"
    :percent_run: 100
  app/controllers/questions_controller.rb: 
    :lines: 
    - :was_run: true
      :content: "   class QuestionsController < ApplicationController"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def index"
    - :was_run: true
      :content: "       current_context.reset"
    - :was_run: true
      :content: "       @questions = Question.all"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def show"
    - :was_run: false
      :content: "       @question = Question.find(params[:id])"
    - :was_run: false
      :content: "       current_context.question = @question"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def new"
    - :was_run: true
      :content: "       @question = Question.new(:election_id => params[:election_id], :requesting_district_id => params[:district_id])"
    - :was_run: false
      :content: "       render :update do |page|"
    - :was_run: false
      :content: "         editor_id = \"#{dom_id(@question.district)}_questions_new\""
    - :was_run: false
      :content: "         page << \"if (!$('#{editor_id}')) {\""
    - :was_run: false
      :content: "         page.insert_html :after, \"#{dom_id(@question.district)}_static\", :partial => 'new.html.erb', :locals => { :question => @question }"
    - :was_run: false
      :content: "         page << \"}\""
    - :was_run: true
      :content: "       end if request.xhr?"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def edit"
    - :was_run: false
      :content: "       @question = Question.find(params[:id])"
    - :was_run: false
      :content: "       render :partial => 'edit', :locals => { :question => @question } if request.xhr?"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def create"
    - :was_run: false
      :content: "       @question = Question.new(params[:question])"
    - :was_run: false
      :content: "       success = @question.save"
    - :was_run: false
      :content: "       flash[:notice] = \"Question '\" + @question.display_name + \"' has been created.\" if success"
    - :was_run: false
      :content: "       if request.xhr?"
    - :was_run: false
      :content: "         render :update do |page|"
    - :was_run: false
      :content: "           if success"
    - :was_run: false
      :content: "             page.replace(\"#{dom_id(@question.district)}_questions_new\", \"\")"
    - :was_run: false
      :content: "             page.replace \"#{dom_id(@question.district)}_questions\", :partial => 'districts/questions', "
    - :was_run: false
      :content: "               :locals => { :district => @question.district, :election => @question.election } "
    - :was_run: false
      :content: "           else"
    - :was_run: false
      :content: "             page.replace \"#{dom_id(@question)}_questions_new\", :partial => 'question/new.html.erb', "
    - :was_run: false
      :content: "               :locals => {:question => @question }"
    - :was_run: false
      :content: "           end"
    - :was_run: false
      :content: "         end"
    - :was_run: false
      :content: "       elsif success"
    - :was_run: false
      :content: "         redirect_to(@question)"
    - :was_run: false
      :content: "       else"
    - :was_run: false
      :content: "         render :action => \"new\""
    - :was_run: false
      :content: "       end"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def update"
    - :was_run: false
      :content: "       @question = Question.find(params[:id])"
    - :was_run: false
      :content: "       success =  @question.update_attributes(params[:question])"
    - :was_run: false
      :content: "       flash[:notice] = \"Question '\" + @question.display_name + \"' was updated.\" if success"
    - :was_run: false
      :content: "       if request.xhr?"
    - :was_run: false
      :content: "         edit_id = \"#{dom_id(@question)}_edit\""
    - :was_run: false
      :content: "         static_id = \"#{dom_id(@question)}_static\""
    - :was_run: false
      :content: "         render :update do |page|"
    - :was_run: false
      :content: "           if success"
    - :was_run: false
      :content: "             page.remove edit_id"
    - :was_run: false
      :content: "             page.replace static_id, :partial => 'static', :locals => { :question => @question }"
    - :was_run: false
      :content: "           else"
    - :was_run: false
      :content: "             page.replace edit_id, :partial => 'edit', :locals => { :question => question }"
    - :was_run: false
      :content: "           end"
    - :was_run: false
      :content: "         end"
    - :was_run: false
      :content: "       elsif success"
    - :was_run: false
      :content: "         redirect_to @question"
    - :was_run: false
      :content: "       else"
    - :was_run: false
      :content: "         render :action => 'edit'"
    - :was_run: false
      :content: "       end"
    - :was_run: false
      :content: "   "
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def destroy"
    - :was_run: false
      :content: "       @question = Question.find(params[:id])"
    - :was_run: false
      :content: "       display_name = @question.display_name"
    - :was_run: false
      :content: "       district = @question.district"
    - :was_run: false
      :content: "       election = @question.election"
    - :was_run: false
      :content: "       @question.destroy"
    - :was_run: false
      :content: "       flash[:notice] = \"Question '#{display_name}' has been deleted.\" "
    - :was_run: false
      :content: "       if request.xhr? # coming from editor, replace question list"
    - :was_run: false
      :content: "         render :update do |page|"
    - :was_run: false
      :content: "           page.replace(\"#{dom_id(district)}_questions\", :partial => 'districts/questions.html.erb', "
    - :was_run: false
      :content: "           :locals => {:district => district, :election => election })"
    - :was_run: false
      :content: "         end"
    - :was_run: false
      :content: "       else"
    - :was_run: false
      :content: "         redirect_to(questions_path)"
    - :was_run: false
      :content: "       end"
    - :was_run: false
      :content: "     end"
    - :was_run: false
      :content: "   end"
    :percent_run: 24
  app/helpers/user_sessions_helper.rb: 
    :lines: 
    - :was_run: true
      :content: "   module UserSessionsHelper"
    - :was_run: true
      :content: "   end"
    :percent_run: 100
  app/controllers/contests_controller.rb: 
    :lines: 
    - :was_run: true
      :content: "   class ContestsController < ApplicationController"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def index"
    - :was_run: true
      :content: "       @contests = Contest.paginate(:per_page => 10, :page => params[:page])"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def show"
    - :was_run: false
      :content: "       @contest = Contest.find(params[:id])"
    - :was_run: false
      :content: "       current_context.contest = @contest"
    - :was_run: false
      :content: "       @candidates = @contest.candidates.paginate(:per_page => 10, :page => params[:page])"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def new"
    - :was_run: false
      :content: "       @contest = Contest.new(:election_id => params[:election_id], :district_id => params[:district_id])"
    - :was_run: false
      :content: "       render :update do |page|"
    - :was_run: false
      :content: "         editor_id = \"#{dom_id(@contest.district)}_contests_new\""
    - :was_run: false
      :content: "         page << \"if (!$('#{editor_id}')) {\""
    - :was_run: false
      :content: "         page.insert_html :after, \"#{dom_id(@contest.district)}_static\", :partial => 'new.html.erb', :locals => { :contest => @contest }"
    - :was_run: false
      :content: "         page << \"}\""
    - :was_run: false
      :content: "       end if request.xhr?"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def edit"
    - :was_run: false
      :content: "       @contest = Contest.find(params[:id])"
    - :was_run: false
      :content: "       render :partial => 'edit', :locals => { :contest => @contest } if request.xhr?"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def create"
    - :was_run: false
      :content: "       @contest = Contest.new(params[:contest])"
    - :was_run: false
      :content: "       success = @contest.save"
    - :was_run: false
      :content: "       flash[:notice] = \"Contest '\" + @contest.display_name + \"' has been created.\" if success"
    - :was_run: false
      :content: "       if request.xhr?"
    - :was_run: false
      :content: "         render :update do |page|"
    - :was_run: false
      :content: "            if success"
    - :was_run: false
      :content: "              page.replace(\"#{dom_id(@contest.district)}_contests_new\", \"\")"
    - :was_run: false
      :content: "              page.replace \"#{dom_id(@contest.district)}_contests\", :partial => 'districts/contests', :locals => { :district => @contest.district, :election => @contest.election } "
    - :was_run: false
      :content: "            else"
    - :was_run: false
      :content: "              page.replace \"#{dom_id(@contest)}_contests_new\", :partial => 'contests/new.html.erb', :locals => {:contest => @contest }"
    - :was_run: false
      :content: "            end"
    - :was_run: false
      :content: "         end"
    - :was_run: false
      :content: "       elsif success"
    - :was_run: false
      :content: "         redirect_to(@contest)"
    - :was_run: false
      :content: "       else"
    - :was_run: false
      :content: "         render :action => \"new\""
    - :was_run: false
      :content: "       end"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     # not a standard rails update. Here we handle two cases:"
    - :was_run: true
      :content: "     # - creation of new candidates : return only candidates with errors"
    - :was_run: true
      :content: "     # - update of existing contest's attributes"
    - :was_run: true
      :content: "     # They are mutually exclusive in our ui, and have different display requirements"
    - :was_run: true
      :content: "     def update"
    - :was_run: false
      :content: "       if params[:contest][:display_name]"
    - :was_run: false
      :content: "         update_contest"
    - :was_run: false
      :content: "       else"
    - :was_run: false
      :content: "         update_attributes"
    - :was_run: false
      :content: "       end"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def update_contest"
    - :was_run: false
      :content: "       @contest = Contest.find(params[:id])"
    - :was_run: false
      :content: "       success =  @contest.update_attributes(params[:contest])"
    - :was_run: false
      :content: "       flash[:notice] = \"Contest '\" + @contest.display_name + \"' was updated.\" if success"
    - :was_run: false
      :content: "       if request.xhr?"
    - :was_run: false
      :content: "         edit_id = \"#{dom_id(@contest)}_edit\""
    - :was_run: false
      :content: "         static_id = \"#{dom_id(@contest)}_static\""
    - :was_run: false
      :content: "         render :update do |page|"
    - :was_run: false
      :content: "           if success"
    - :was_run: false
      :content: "             page.remove edit_id"
    - :was_run: false
      :content: "             page.replace static_id, :partial => 'static', :locals => { :contest => @contest }"
    - :was_run: false
      :content: "           else"
    - :was_run: false
      :content: "             page.replace edit_id, :partial => 'edit', :locals => { :contest => contest }"
    - :was_run: false
      :content: "           end"
    - :was_run: false
      :content: "         end"
    - :was_run: false
      :content: "       elsif success"
    - :was_run: false
      :content: "         redirect_to @contest"
    - :was_run: false
      :content: "       else"
    - :was_run: false
      :content: "         render :action => 'edit'"
    - :was_run: false
      :content: "       end"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def update_attributes"
    - :was_run: false
      :content: "       raise \"No updating of attributes withou AJAX\" if !request.xhr?"
    - :was_run: false
      :content: "       @contest = Contest.find(params[:id])"
    - :was_run: false
      :content: "       howMany = @contest.candidates.length;"
    - :was_run: false
      :content: "       success = @contest.update_attributes(params[:contest])"
    - :was_run: false
      :content: "       howMany = @contest.candidates.length - howMany;"
    - :was_run: false
      :content: "       "
    - :was_run: false
      :content: "       error_candidates = @contest.candidates.to_a.find_all { |c| c.invalid? }"
    - :was_run: false
      :content: "       flash[:notice] = pluralize(howMany, 'candidate has', 'candidates have') + \" been created.\" if error_candidates.length == 0"
    - :was_run: false
      :content: "       render :update do |page|"
    - :was_run: false
      :content: "         if error_candidates.length == 0"
    - :was_run: false
      :content: "           page.replace(\"#{dom_id(@contest)}_candidates_new\", \"\")"
    - :was_run: false
      :content: "           page.replace \"#{dom_id(@contest)}_candidates\", :partial => 'candidates', :locals => { :contest => @contest } "
    - :was_run: false
      :content: "         else"
    - :was_run: false
      :content: "           page.replace \"#{dom_id(@contest)}_candidates_new\", :partial => 'candidates/new.html.erb', :locals => {:model => error_candidates }"
    - :was_run: false
      :content: "         end"
    - :was_run: false
      :content: "       end"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def destroy"
    - :was_run: false
      :content: "       @contest = Contest.find(params[:id])"
    - :was_run: false
      :content: "       display_name = @contest.display_name"
    - :was_run: false
      :content: "       district = @contest.district"
    - :was_run: false
      :content: "       election = @contest.election"
    - :was_run: false
      :content: "       @contest.destroy"
    - :was_run: false
      :content: "       flash[:notice] = \"Contest #{display_name} has been deleted.\" "
    - :was_run: false
      :content: "       if request.xhr? # coming from editor, replace contest list"
    - :was_run: false
      :content: "         render :update do |page|"
    - :was_run: false
      :content: "           page.replace(\"#{dom_id(district)}_contests\", :partial => 'districts/contests.html.erb', "
    - :was_run: false
      :content: "             :locals => {:district => district, :election => election })"
    - :was_run: false
      :content: "         end"
    - :was_run: false
      :content: "       else"
    - :was_run: false
      :content: "         redirect_to(contests_url)"
    - :was_run: false
      :content: "       end"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def move"
    - :was_run: false
      :content: "       @contest = Contest.find(params[:id])"
    - :was_run: false
      :content: "       direction = params[:direction] == \"up\"?\"up\":\"down\""
    - :was_run: false
      :content: "   "
    - :was_run: false
      :content: "       contests = @contest.election.contests"
    - :was_run: false
      :content: "       contests.sort!{|c1,c2|c1.position <=> c2.position}"
    - :was_run: false
      :content: "   "
    - :was_run: false
      :content: "       contest_index = contests.index @contest"
    - :was_run: false
      :content: "   "
    - :was_run: false
      :content: "       if (contest_index == 0 and direction == \"up\") or (contest_index == contests.length - 1 and direction == \"down\") "
    - :was_run: false
      :content: "         flash[:error] = \"Contest ##{@contest.id}, \\\"#{@contest.display_name}\\\", cannot be moved further \" + direction"
    - :was_run: false
      :content: "         render :partial => 'contests/contest_list', :locals => {:election => @contest.election, :page => params[:page]} "
    - :was_run: false
      :content: "       else"
    - :was_run: false
      :content: "         "
    - :was_run: false
      :content: "         # Reordering logic goes here"
    - :was_run: false
      :content: "         # Squish all order numbers"
    - :was_run: false
      :content: "         contests.each do |cont|"
    - :was_run: false
      :content: "           cont.update_attributes(:position => (contests.index cont))"
    - :was_run: false
      :content: "         end"
    - :was_run: false
      :content: "         "
    - :was_run: false
      :content: "         old_order = @contest.position"
    - :was_run: false
      :content: "         if direction == \"up\""
    - :was_run: false
      :content: "           contests[contest_index].update_attributes(:position => contests[contest_index-1].position)"
    - :was_run: false
      :content: "           contests[contest_index-1].update_attributes(:position => old_order)"
    - :was_run: false
      :content: "         else # direction == \"down\""
    - :was_run: false
      :content: "           contests[contest_index].update_attributes(:position => contests[contest_index+1].position)"
    - :was_run: false
      :content: "           contests[contest_index+1].update_attributes(:position => old_order)      "
    - :was_run: false
      :content: "         end"
    - :was_run: false
      :content: "         "
    - :was_run: false
      :content: "         flash[:notice] = \"Contest ##{@contest.id}, \\\"#{@contest.display_name}\\\", has been moved \" + direction"
    - :was_run: false
      :content: "         render :partial => 'contests/contest_list', :locals => {:election => @contest.election, :page => params[:page]} "
    - :was_run: false
      :content: "       end"
    - :was_run: false
      :content: "     end"
    - :was_run: false
      :content: "   end"
    :percent_run: 18
  app/helpers/districts_helper.rb: 
    :lines: 
    - :was_run: true
      :content: "   module DistrictsHelper"
    - :was_run: true
      :content: "   end"
    :percent_run: 100
  app/models/ballot_style_template.rb: 
    :lines: 
    - :was_run: true
      :content: "   class BallotStyleTemplate < ActiveRecord::Base"
    - :was_run: true
      :content: "     validates_presence_of [:display_name,:instruction_text,:state_graphic], :on => :create, :message => \"can't be blank\""
    - :was_run: true
      :content: "   end"
    :percent_run: 100
  app/helpers/district_sets_helper.rb: 
    :lines: 
    - :was_run: true
      :content: "   module DistrictSetsHelper"
    - :was_run: true
      :content: "   end"
    :percent_run: 100
  app/models/user_context.rb: 
    :lines: 
    - :was_run: true
      :content: "   #"
    - :was_run: true
      :content: "   # Represent a place in the navigation of the application in a structured way. There is exactly one instance"
    - :was_run: true
      :content: "   # of this class and (for now) it is carried around in session[:current_context]. See current_context method in"
    - :was_run: true
      :content: "   # ApplicationController where it is created and returned to any other method that needs it."
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "   class UserContext"
    - :was_run: true
      :content: "     attr_accessor :jurisdiction, :election, :contest, :question, :precinct"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     def initialize(session)"
    - :was_run: true
      :content: "       @session = session"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     #TODO: DRY these common methods with define_method"
    - :was_run: true
      :content: "     def jurisdiction"
    - :was_run: true
      :content: "       @jurisdiction || @session[:jurisdiction_id] && @jurisdiction = DistrictSet.find(@session[:jurisdiction_id])"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     def election"
    - :was_run: true
      :content: "       @election || @session[:election_id] && @election = Election.find(@session[:election_id])"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     def contest"
    - :was_run: true
      :content: "       @contest || @session[:contest_id] && @contest = Contest.find(@session[:contest_id])"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def question"
    - :was_run: true
      :content: "       @question || @session[:question_id] && @question = Question.find(@session[:question_id])"
    - :was_run: true
      :content: "     end  "
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     def precinct"
    - :was_run: true
      :content: "       @precinct || @session[:precinct_id] && @precinct = Precinct.find(@session[:question_id])"
    - :was_run: true
      :content: "     end  "
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def jurisdiction?"
    - :was_run: true
      :content: "       !@jurisdiction.nil?"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def election?"
    - :was_run: true
      :content: "       !@election.nil?"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def contest?"
    - :was_run: true
      :content: "       !@contest.nil?"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     def question?"
    - :was_run: true
      :content: "       !@question.nil?"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     def precinct?"
    - :was_run: true
      :content: "       !@precinct.nil?"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def contest= a_contest"
    - :was_run: false
      :content: "       @question, @precinct = nil, nil"
    - :was_run: false
      :content: "       @session[:question_id], @session[:precinct_id] = nil, nil"
    - :was_run: false
      :content: "       "
    - :was_run: false
      :content: "       @session[:contest_id] = a_contest ? a_contest.id : nil"
    - :was_run: false
      :content: "       @contest = a_contest"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     def question= a_question"
    - :was_run: false
      :content: "       @contest, @precinct = nil, nil"
    - :was_run: false
      :content: "       @session[:contest_id], @session[:precinct_id] = nil, nil"
    - :was_run: false
      :content: "       "
    - :was_run: false
      :content: "       @session[:question_id] = a_question ? a_question.id : nil"
    - :was_run: false
      :content: "       @question= a_question"
    - :was_run: false
      :content: "     end  "
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def precinct= a_precinct"
    - :was_run: false
      :content: "       @contest, @question = nil, nil"
    - :was_run: false
      :content: "       @session[:contest_id], @session[:question_id] = nil, nil"
    - :was_run: false
      :content: "       "
    - :was_run: false
      :content: "       @session[:precint_id] = a_precinct ? a_precinct.id : nil"
    - :was_run: false
      :content: "       self.jurisdiction = a_precinct.district_sets[0]"
    - :was_run: false
      :content: "       @precinct= a_precinct"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     def election= an_election"
    - :was_run: true
      :content: "       contest, question, precint  = nil, nil, nil"
    - :was_run: true
      :content: "       @session[:contest_id], @session[:question_id], @session[:precint_id]  = nil, nil, nil    "
    - :was_run: true
      :content: "       "
    - :was_run: true
      :content: "       @session[:election_id] = an_election ? an_election.id : nil"
    - :was_run: true
      :content: "       self.jurisdiction = an_election.district_set unless an_election.nil?"
    - :was_run: true
      :content: "       @election = an_election"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def jurisdiction= a_jurisdiction"
    - :was_run: true
      :content: "       @session[:jurisdiction_id] = a_jurisdiction ? a_jurisdiction.id : nil"
    - :was_run: true
      :content: "       @jurisdiction = a_jurisdiction"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     def jurisdiction_name"
    - :was_run: true
      :content: "       jurisdiction ? jurisdiction.display_name :  \"no jurisdiction selected\""
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     def reset"
    - :was_run: true
      :content: "       @session[:election_id] = @session[:jurisdiction_id] = @session[:contest] = @session[:question] = @session[:precinct]= nil"
    - :was_run: true
      :content: "       @election = @jurisdiction = @contest = @question = @precinct= nil"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     def jurisdiction_secondary_name"
    - :was_run: true
      :content: "       second_name = (jurisdiction ? jurisdiction.secondary_name :  nil)"
    - :was_run: true
      :content: "       second_name || \"\""
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "     # Convert to text"
    - :was_run: true
      :content: "     def to_s"
    - :was_run: false
      :content: "       s = \"\""
    - :was_run: false
      :content: "       if !@jurisdiction.nil?"
    - :was_run: false
      :content: "         s << @jurisdiction.display_name"
    - :was_run: false
      :content: "       end"
    - :was_run: false
      :content: "       if !@election.nil?"
    - :was_run: false
      :content: "         s << \" > \" + @election.display_name"
    - :was_run: false
      :content: "       end"
    - :was_run: false
      :content: "       if !@question.nil?"
    - :was_run: false
      :content: "         s << \" > \" + @question.display_name"
    - :was_run: false
      :content: "       end"
    - :was_run: false
      :content: "       if !@contest.nil?"
    - :was_run: false
      :content: "         s << \" > \" + @contest.display_name"
    - :was_run: false
      :content: "       end"
    - :was_run: false
      :content: "       if !@precinct.nil?"
    - :was_run: false
      :content: "         s << \" > \" + @precinct.display_name"
    - :was_run: false
      :content: "       end"
    - :was_run: false
      :content: "       s"
    - :was_run: false
      :content: "     end"
    - :was_run: false
      :content: "   end"
    :percent_run: 70
  app/models/user_role.rb: 
    :lines: 
    - :was_run: true
      :content: "   class UserRole < ActiveRecord::Base"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     belongs_to :user"
    - :was_run: true
      :content: "     validates_inclusion_of :name, :in => %w{ root standard public}, :message => \"Invalid Role\""
    - :was_run: true
      :content: "   end"
    :percent_run: 100
  app/ttv/pdf_ballot_style.rb: 
    :lines: 
    - :was_run: true
      :content: "   require 'ballots/default/ballot_config.rb'"
    - :was_run: true
      :content: "   require 'ballots/aiga/ballot_config.rb'"
    - :was_run: true
      :content: "   require 'ballots/nh/ballot_config.rb'"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "   class PDFBallotStyle"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     BALLOT_DIR = \"#{RAILS_ROOT}/app/ballots\""
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def self.list"
    - :was_run: false
      :content: "       styles = ['default']"
    - :was_run: false
      :content: "       dir = Dir.open BALLOT_DIR"
    - :was_run: false
      :content: "       dir.each do |f|"
    - :was_run: false
      :content: "         next if f =~ /\\..*/ || ! File.directory?(\"#{BALLOT_DIR}/#{f}\") || f == \"default\""
    - :was_run: false
      :content: "         styles.push f"
    - :was_run: false
      :content: "       end"
    - :was_run: false
      :content: "       styles"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def self.get_file(style, name)"
    - :was_run: false
      :content: "       name = \"#{BALLOT_DIR}/#{style}/#{name}\""
    - :was_run: false
      :content: "       begin"
    - :was_run: false
      :content: "         IO.read(name)"
    - :was_run: false
      :content: "       rescue"
    - :was_run: false
      :content: "         Rails.logger.warn \"No such file #{name} \" "
    - :was_run: false
      :content: "         \"-\""
    - :was_run: false
      :content: "       end"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def self.get_election_translation(election, lang)"
    - :was_run: true
      :content: "       return TTV::Translate::ElectionTranslation.new(election, lang)"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "       "
    - :was_run: true
      :content: "     def self.get_ballot_translation(style, lang)"
    - :was_run: true
      :content: "   #    puts BALLOT_DIR"
    - :was_run: true
      :content: "       return TTV::Translate::YamlTranslation.new(\"#{BALLOT_DIR}/#{style}/lang/#{lang}/ballot.yml\")"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def self.get_ballot_config(style, lang, election, scanner, instruction_text, state_seal, state_signature)"
    - :was_run: true
      :content: "       begin"
    - :was_run: true
      :content: "         ballot_defining_module = style.camelize + \"Ballot\""
    - :was_run: true
      :content: "         mod = ballot_defining_module.constantize"
    - :was_run: true
      :content: "         mod::BallotConfig.new(style, lang, election, scanner, instruction_text, state_seal, state_signature)"
    - :was_run: false
      :content: "       rescue => ex"
    - :was_run: false
      :content: "         Rails.logger.error(ex)"
    - :was_run: false
      :content: "         raise \"Unknown Ballot Style: #{style}\""
    - :was_run: false
      :content: "       end"
    - :was_run: false
      :content: "     end"
    - :was_run: false
      :content: "   end"
    - :was_run: true
      :content: "   "
    :percent_run: 55
  app/controllers/languages_controller.rb: 
    :lines: 
    - :was_run: true
      :content: "   class LanguagesController < ApplicationController"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     layout 'application'"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     # GET /languages"
    - :was_run: true
      :content: "     # GET /languages.xml"
    - :was_run: true
      :content: "     def index"
    - :was_run: true
      :content: "       @languages = Language.paginate(:per_page => 10, :page => params[:page])"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       respond_to do |format|"
    - :was_run: true
      :content: "         format.html # index.html.erb"
    - :was_run: true
      :content: "         format.xml  { render :xml => @languages }"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     # GET /languages/1"
    - :was_run: true
      :content: "     # GET /languages/1.xml"
    - :was_run: true
      :content: "     def show"
    - :was_run: false
      :content: "       @language = Language.find(params[:id])"
    - :was_run: false
      :content: "   "
    - :was_run: false
      :content: "       respond_to do |format|"
    - :was_run: false
      :content: "         format.html # show.html.erb"
    - :was_run: false
      :content: "         format.xml  { render :xml => @language }"
    - :was_run: false
      :content: "       end"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     # GET /languages/new"
    - :was_run: true
      :content: "     # GET /languages/new.xml"
    - :was_run: true
      :content: "     def new"
    - :was_run: true
      :content: "       @language = Language.new"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       respond_to do |format|"
    - :was_run: true
      :content: "         format.html # new.html.erb"
    - :was_run: true
      :content: "         format.xml  { render :xml => @language }"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     # GET /languages/1/edit"
    - :was_run: true
      :content: "     def edit"
    - :was_run: false
      :content: "       @language = Language.find(params[:id])"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     # POST /languages"
    - :was_run: true
      :content: "     # POST /languages.xml"
    - :was_run: true
      :content: "     def create"
    - :was_run: false
      :content: "       @language = Language.new(params[:language])"
    - :was_run: false
      :content: "   "
    - :was_run: false
      :content: "       respond_to do |format|"
    - :was_run: false
      :content: "         if @language.save"
    - :was_run: false
      :content: "           flash[:notice] = 'Language was successfully created.'"
    - :was_run: false
      :content: "           format.html { redirect_to(@language) }"
    - :was_run: false
      :content: "           format.xml  { render :xml => @language, :status => :created, :location => @language }"
    - :was_run: false
      :content: "         else"
    - :was_run: false
      :content: "           format.html { render :action => \"new\" }"
    - :was_run: false
      :content: "           format.xml  { render :xml => @language.errors, :status => :unprocessable_entity }"
    - :was_run: false
      :content: "         end"
    - :was_run: false
      :content: "       end"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     # PUT /languages/1"
    - :was_run: true
      :content: "     # PUT /languages/1.xml"
    - :was_run: true
      :content: "     def update"
    - :was_run: false
      :content: "       @language = Language.find(params[:id])"
    - :was_run: false
      :content: "   "
    - :was_run: false
      :content: "       respond_to do |format|"
    - :was_run: false
      :content: "         if @language.update_attributes(params[:language])"
    - :was_run: false
      :content: "           flash[:notice] = 'Language was successfully updated.'"
    - :was_run: false
      :content: "           format.html { redirect_to(@language) }"
    - :was_run: false
      :content: "           format.xml  { head :ok }"
    - :was_run: false
      :content: "         else"
    - :was_run: false
      :content: "           format.html { render :action => \"edit\" }"
    - :was_run: false
      :content: "           format.xml  { render :xml => @language.errors, :status => :unprocessable_entity }"
    - :was_run: false
      :content: "         end"
    - :was_run: false
      :content: "       end"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     # DELETE /languages/1"
    - :was_run: true
      :content: "     # DELETE /languages/1.xml"
    - :was_run: true
      :content: "     def destroy"
    - :was_run: false
      :content: "       @language = Language.find(params[:id])"
    - :was_run: false
      :content: "       @language.destroy"
    - :was_run: false
      :content: "   "
    - :was_run: false
      :content: "       respond_to do |format|"
    - :was_run: false
      :content: "         format.html { redirect_to(languages_url) }"
    - :was_run: false
      :content: "         format.xml  { head :ok }"
    - :was_run: false
      :content: "       end"
    - :was_run: false
      :content: "     end"
    - :was_run: false
      :content: "   end"
    :percent_run: 50
  app/controllers/media_controller.rb: 
    :lines: 
    - :was_run: true
      :content: "   class MediaController < ApplicationController"
    - :was_run: true
      :content: "     layout 'application'"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     # GET /media"
    - :was_run: true
      :content: "     # GET /media.xml"
    - :was_run: true
      :content: "     def index"
    - :was_run: true
      :content: "       @media = Medium.paginate(:per_page => 10, :page => params[:page])"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       respond_to do |format|"
    - :was_run: true
      :content: "         format.html # index.html.erb"
    - :was_run: true
      :content: "         format.xml  { render :xml => @media }"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     # GET /media/1"
    - :was_run: true
      :content: "     # GET /media/1.xml"
    - :was_run: true
      :content: "     def show"
    - :was_run: false
      :content: "       @medium = Medium.find(params[:id])"
    - :was_run: false
      :content: "   "
    - :was_run: false
      :content: "       respond_to do |format|"
    - :was_run: false
      :content: "         format.html # show.html.erb"
    - :was_run: false
      :content: "         format.xml  { render :xml => @medium }"
    - :was_run: false
      :content: "       end"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     # GET /media/new"
    - :was_run: true
      :content: "     # GET /media/new.xml"
    - :was_run: true
      :content: "     def new"
    - :was_run: true
      :content: "       @medium = Medium.new"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       respond_to do |format|"
    - :was_run: true
      :content: "         format.html # new.html.erb"
    - :was_run: true
      :content: "         format.xml  { render :xml => @medium }"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     # GET /media/1/edit"
    - :was_run: true
      :content: "     def edit"
    - :was_run: false
      :content: "       @medium = Medium.find(params[:id])"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     # POST /media"
    - :was_run: true
      :content: "     # POST /media.xml"
    - :was_run: true
      :content: "     def create"
    - :was_run: false
      :content: "       @medium = Medium.new(params[:medium])"
    - :was_run: false
      :content: "   "
    - :was_run: false
      :content: "       respond_to do |format|"
    - :was_run: false
      :content: "         if @medium.save"
    - :was_run: false
      :content: "           flash[:notice] = 'Medium was successfully created.'"
    - :was_run: false
      :content: "           format.html { redirect_to(@medium) }"
    - :was_run: false
      :content: "           format.xml  { render :xml => @medium, :status => :created, :location => @medium }"
    - :was_run: false
      :content: "         else"
    - :was_run: false
      :content: "           format.html { render :action => \"new\" }"
    - :was_run: false
      :content: "           format.xml  { render :xml => @medium.errors, :status => :unprocessable_entity }"
    - :was_run: false
      :content: "         end"
    - :was_run: false
      :content: "       end"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     # PUT /media/1"
    - :was_run: true
      :content: "     # PUT /media/1.xml"
    - :was_run: true
      :content: "     def update"
    - :was_run: false
      :content: "       @medium = Medium.find(params[:id])"
    - :was_run: false
      :content: "   "
    - :was_run: false
      :content: "       respond_to do |format|"
    - :was_run: false
      :content: "         if @medium.update_attributes(params[:medium])"
    - :was_run: false
      :content: "           flash[:notice] = 'Medium was successfully updated.'"
    - :was_run: false
      :content: "           format.html { redirect_to(@medium) }"
    - :was_run: false
      :content: "           format.xml  { head :ok }"
    - :was_run: false
      :content: "         else"
    - :was_run: false
      :content: "           format.html { render :action => \"edit\" }"
    - :was_run: false
      :content: "           format.xml  { render :xml => @medium.errors, :status => :unprocessable_entity }"
    - :was_run: false
      :content: "         end"
    - :was_run: false
      :content: "       end"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     # DELETE /media/1"
    - :was_run: true
      :content: "     # DELETE /media/1.xml"
    - :was_run: true
      :content: "     def destroy"
    - :was_run: false
      :content: "       @medium = Medium.find(params[:id])"
    - :was_run: false
      :content: "       @medium.destroy"
    - :was_run: false
      :content: "   "
    - :was_run: false
      :content: "       respond_to do |format|"
    - :was_run: false
      :content: "         format.html { redirect_to(media_url) }"
    - :was_run: false
      :content: "         format.xml  { head :ok }"
    - :was_run: false
      :content: "       end"
    - :was_run: false
      :content: "     end"
    - :was_run: false
      :content: "   end"
    :percent_run: 49
  app/helpers/users_helper.rb: 
    :lines: 
    - :was_run: true
      :content: "   module UsersHelper"
    - :was_run: true
      :content: "   end"
    :percent_run: 100
  app/models/district.rb: 
    :lines: 
    - :was_run: true
      :content: "   # == Schema Information"
    - :was_run: true
      :content: "   # Schema version: 20100215144641"
    - :was_run: true
      :content: "   #"
    - :was_run: true
      :content: "   # Table name: districts"
    - :was_run: true
      :content: "   #"
    - :was_run: true
      :content: "   #  id               :integer         not null, primary key"
    - :was_run: true
      :content: "   #  district_type_id :integer"
    - :was_run: true
      :content: "   #  display_name     :string(255)"
    - :was_run: true
      :content: "   #  created_at       :datetime"
    - :was_run: true
      :content: "   #  updated_at       :datetime"
    - :was_run: true
      :content: "   #  ident            :string(255)"
    - :was_run: true
      :content: "   #"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "   class District < ActiveRecord::Base"
    - :was_run: true
      :content: "     has_and_belongs_to_many :district_sets"
    - :was_run: true
      :content: "     has_and_belongs_to_many :precincts"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     has_many :contests, :order => :display_name"
    - :was_run: true
      :content: "     has_many :questions, :order => :display_name"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     belongs_to :district_type"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     attr_accessible :district_type, :display_name, :district_type_id, :ident"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     attr_accessor :importId, :importPrecincts # for xml import"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     validates_presence_of :display_name"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     validates_presence_of :ident"
    - :was_run: true
      :content: "     validates_uniqueness_of :ident, :message => \"Non-unique district ident attempted: {{value}}.\""
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     # Make sure that ident is not nil. If it is, create a unique one."
    - :was_run: true
      :content: "     def before_validation"
    - :was_run: true
      :content: "       if self.blank? || self.ident.blank?"
    - :was_run: true
      :content: "         self.ident = \"dist-#{ActiveSupport::SecureRandom.hex}\""
    - :was_run: true
      :content: "         self.save!"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     # we assume election has preloaded the contents/questions"
    - :was_run: true
      :content: "     def contestsForElection(election)"
    - :was_run: true
      :content: "       return election.contests.select { |c| c.district_id == self.id }"
    - :was_run: true
      :content: "   #    Contest.find_all_by_election_id_and_district_id(election.id, self.id)"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     def questionsForElection(election)"
    - :was_run: true
      :content: "       return election.questions.select { |q| q.district_id == self.id }"
    - :was_run: true
      :content: "   #    Question.find_all_by_election_id_and_district_id(election.id, self.id)"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "   end"
    :percent_run: 100
  app/models/district_set.rb: 
    :lines: 
    - :was_run: true
      :content: "   # == Schema Information"
    - :was_run: true
      :content: "   # Schema version: 20100215144641"
    - :was_run: true
      :content: "   #"
    - :was_run: true
      :content: "   # Table name: district_sets"
    - :was_run: true
      :content: "   #"
    - :was_run: true
      :content: "   #  id             :integer         not null, primary key"
    - :was_run: true
      :content: "   #  display_name   :string(255)"
    - :was_run: true
      :content: "   #  secondary_name :string(255)"
    - :was_run: true
      :content: "   #  created_at     :datetime"
    - :was_run: true
      :content: "   #  updated_at     :datetime"
    - :was_run: true
      :content: "   #"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "   class DistrictSet < ActiveRecord::Base"
    - :was_run: true
      :content: "     has_and_belongs_to_many :districts"
    - :was_run: true
      :content: "     has_many :elections"
    - :was_run: true
      :content: "     has_attached_file :icon, :styles => { :medium => \"300x300>\", :thumb => \"100x100>\" }"
    - :was_run: true
      :content: "       "
    - :was_run: true
      :content: "     # returns all precincts in this district set"
    - :was_run: true
      :content: "     def precincts"
    - :was_run: true
      :content: "       precinct_ids = connection.select_values( <<-eos"
    - :was_run: true
      :content: "         SELECT DISTINCT districts_precincts.precinct_id"
    - :was_run: true
      :content: "         FROM\tdistricts_precincts, district_sets_districts"
    - :was_run: true
      :content: "         WHERE\tdistrict_sets_districts.district_set_id = #{self.id}"
    - :was_run: true
      :content: "         AND\tdistrict_sets_districts.district_id = districts_precincts.district_id"
    - :was_run: true
      :content: "       eos"
    - :was_run: true
      :content: "       )"
    - :was_run: true
      :content: "       Precinct.find(precinct_ids)"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "   end"
    :percent_run: 100
  app/controllers/candidates_controller.rb: 
    :lines: 
    - :was_run: true
      :content: "   class CandidatesController < ApplicationController"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def index"
    - :was_run: true
      :content: "       current_context.reset"
    - :was_run: true
      :content: "       @candidates = Candidate.paginate(:per_page => 10, :page => params[:page])"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def show"
    - :was_run: false
      :content: "       @candidate = Candidate.find(params[:id])"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def new"
    - :was_run: false
      :content: "       @candidate = Candidate.new"
    - :was_run: false
      :content: "       @candidate.contest_id = params[:contest_id];"
    - :was_run: false
      :content: "       raise \"Invalid contest. Candidates must be created inside a contest\" if params[:contest_id].nil?"
    - :was_run: false
      :content: "       render :update do |page|"
    - :was_run: false
      :content: "         editor_id = \"#{dom_id(@candidate.contest)}_candidates_new\""
    - :was_run: false
      :content: "         page.insert_html :after, \"#{dom_id(@candidate.contest)}_static\", :partial => 'new.html.erb', :locals => { :model => @candidate }"
    - :was_run: false
      :content: "       end if request.xhr?;"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def edit"
    - :was_run: false
      :content: "       @candidate = Candidate.find(params[:id])"
    - :was_run: false
      :content: "       render :partial => 'edit', :locals => { :candidate => @candidate } if request.xhr?"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     # def create -- candidates are created through contests:update nested attributes"
    - :was_run: true
      :content: "     # end"
    - :was_run: true
      :content: "     def update"
    - :was_run: false
      :content: "       @candidate = Candidate.find(params[:id])"
    - :was_run: false
      :content: "       success = @candidate.update_attributes(params[:candidate])"
    - :was_run: false
      :content: "       flash[:notice] = \"Candidate '\" + @candidate.display_name + \"' was successfully updated.\" if success"
    - :was_run: false
      :content: "       if request.xhr?"
    - :was_run: false
      :content: "         edit_id = \"#{dom_id(@candidate)}_edit\""
    - :was_run: false
      :content: "         static_id = \"#{dom_id(@candidate)}_static\""
    - :was_run: false
      :content: "         render :update do |page|"
    - :was_run: false
      :content: "           if success"
    - :was_run: false
      :content: "             page.remove edit_id"
    - :was_run: false
      :content: "             page.replace static_id, :partial => 'static', :locals => { :candidate => @candidate }"
    - :was_run: false
      :content: "           else"
    - :was_run: false
      :content: "             page.replace edit_id, :partial => 'edit', :locals => { :candidate => @candidate }"
    - :was_run: false
      :content: "           end"
    - :was_run: false
      :content: "         end"
    - :was_run: false
      :content: "       elsif success"
    - :was_run: false
      :content: "         redirect_to @candidate"
    - :was_run: false
      :content: "       else"
    - :was_run: false
      :content: "         render :action => \"edit\""
    - :was_run: false
      :content: "       end"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def destroy"
    - :was_run: false
      :content: "       begin"
    - :was_run: false
      :content: "         @candidate = Candidate.find(params[:id])"
    - :was_run: false
      :content: "         contest = @candidate.contest"
    - :was_run: false
      :content: "         display_name = @candidate.display_name"
    - :was_run: false
      :content: "         @candidate.destroy"
    - :was_run: false
      :content: "         flash[:notice] = \"Candidate '\" + display_name + \"' has been deleted.\""
    - :was_run: false
      :content: "         if request.xhr? # coming from contest editor, return all contests"
    - :was_run: false
      :content: "           render :update do |page|"
    - :was_run: false
      :content: "             page.replace(\"#{dom_id(contest)}_candidates\", :partial => 'contests/candidates.html.erb', :locals => {:contest => contest})"
    - :was_run: false
      :content: "           end"
    - :was_run: false
      :content: "         else"
    - :was_run: false
      :content: "           redirect_to(candidates_url)"
    - :was_run: false
      :content: "         end"
    - :was_run: false
      :content: "       rescue => ex"
    - :was_run: false
      :content: "         flash[:error] = \"Unexpected error: \" + ex.message"
    - :was_run: false
      :content: "       end"
    - :was_run: false
      :content: "     end"
    - :was_run: false
      :content: "   end"
    :percent_run: 26
  app/models/election.rb: 
    :lines: 
    - :was_run: true
      :content: "   # == Schema Information"
    - :was_run: true
      :content: "   # Schema version: 20100215144641"
    - :was_run: true
      :content: "   #"
    - :was_run: true
      :content: "   # Table name: elections"
    - :was_run: true
      :content: "   #"
    - :was_run: true
      :content: "   #  id              :integer         not null, primary key"
    - :was_run: true
      :content: "   #  display_name    :string(255)"
    - :was_run: true
      :content: "   #  district_set_id :integer"
    - :was_run: true
      :content: "   #  start_date      :datetime"
    - :was_run: true
      :content: "   #  created_at      :datetime"
    - :was_run: true
      :content: "   #  updated_at      :datetime"
    - :was_run: true
      :content: "   #"
    - :was_run: true
      :content: "   require 'abstract_ballot'"
    - :was_run: true
      :content: "   class Election < ActiveRecord::Base"
    - :was_run: true
      :content: "       has_many :contests, :order => :position, :dependent => :destroy"
    - :was_run: true
      :content: "       has_many :questions, :order => :display_name, :dependent => :destroy"
    - :was_run: true
      :content: "       "
    - :was_run: true
      :content: "       validates_presence_of :display_name"
    - :was_run: true
      :content: "       belongs_to :district_set"
    - :was_run: true
      :content: "       "
    - :was_run: true
      :content: "       before_destroy :destroy_translations"
    - :was_run: true
      :content: "       "
    - :was_run: true
      :content: "       def to_s"
    - :was_run: false
      :content: "         s = \"\""
    - :was_run: false
      :content: "         attributes.each do |key, value| "
    - :was_run: false
      :content: "           s += (\"#{key}:#{value} \")"
    - :was_run: false
      :content: "         end"
    - :was_run: false
      :content: "         return s"
    - :was_run: false
      :content: "       end"
    - :was_run: true
      :content: "       "
    - :was_run: true
      :content: "       def districts"
    - :was_run: true
      :content: "         @districts = district_set.districts if (!@districts)"
    - :was_run: true
      :content: "         @districts  "
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       def validate "
    - :was_run: true
      :content: "          errors.add(:district_set_id , \"is invalid\") unless DistrictSet.exists?(district_set)"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "       "
    - :was_run: true
      :content: "       # really used for export. I'd use a different method, if I could force 'render :xml' to call it"
    - :was_run: true
      :content: "       def to_xml( options = {}, &block )"
    - :was_run: false
      :content: "         return TTV::ImportExport.export(self)"
    - :was_run: false
      :content: "       end"
    - :was_run: true
      :content: "       "
    - :was_run: true
      :content: "       TRANSLATION_FOLDER = \"#{RAILS_ROOT}/db/translations\""
    - :was_run: true
      :content: "       "
    - :was_run: true
      :content: "       def translation_path(lang)"
    - :was_run: true
      :content: "         \"#{TRANSLATION_FOLDER}/election-#{id}.#{lang}.yml\""
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "       "
    - :was_run: true
      :content: "       def destroy_translations"
    - :was_run: true
      :content: "         Dir.foreach TRANSLATION_FOLDER do |f|"
    - :was_run: true
      :content: "           next unless f =~ /election-#{id}.*yml$/"
    - :was_run: true
      :content: "           File.unlink(\"#{TRANSLATION_FOLDER}/#{f}\")"
    - :was_run: true
      :content: "         end"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "       def comp compare"
    - :was_run: false
      :content: "         equal = true"
    - :was_run: false
      :content: "         equal = false if !equal_contests? compare"
    - :was_run: false
      :content: "         equal = false if !equal_districts? compare"
    - :was_run: false
      :content: "         equal = false if !equal_questions? compare"
    - :was_run: false
      :content: "         equal = false if display_name != compare.display_name"
    - :was_run: false
      :content: "         return equal"
    - :was_run: false
      :content: "       end"
    - :was_run: true
      :content: "       "
    - :was_run: true
      :content: "     #"
    - :was_run: true
      :content: "     # Contains assertions that certify the election objects election1 and "
    - :was_run: true
      :content: "     # election2 contain equivalent contests, district associations, candidates, parties"
    - :was_run: true
      :content: "     #"
    - :was_run: true
      :content: "     def equal_contests? election2"
    - :was_run: false
      :content: "       equal = true"
    - :was_run: false
      :content: "       contests.each {|e1_contest|"
    - :was_run: false
      :content: "         e2_contest = election2.contests.find_by_display_name(e1_contest.display_name)"
    - :was_run: false
      :content: "         equal = false if e2_contest.nil?"
    - :was_run: false
      :content: "   "
    - :was_run: false
      :content: "         equal = false if e1_contest.district.display_name != e2_contest.district.display_name"
    - :was_run: false
      :content: "   "
    - :was_run: false
      :content: "         # contain the same candidates associated with the same party"
    - :was_run: false
      :content: "         e1_contest.candidates.each {|e1_candidate|"
    - :was_run: false
      :content: "           # handle multiple candidates with the same name, different parties"
    - :was_run: false
      :content: "           e2_candidates = e2_contest.candidates.find_all_by_display_name(e1_candidate.display_name)"
    - :was_run: false
      :content: "           "
    - :was_run: false
      :content: "           equal = false if e2_candidates.empty?"
    - :was_run: false
      :content: "           "
    - :was_run: false
      :content: "           match = false"
    - :was_run: false
      :content: "           "
    - :was_run: false
      :content: "           e2_candidates.each {|e2_candidate|          "
    - :was_run: false
      :content: "             if e2_candidate.party.display_name == e1_candidate.party.display_name"
    - :was_run: false
      :content: "               match = true"
    - :was_run: false
      :content: "             end"
    - :was_run: false
      :content: "           }"
    - :was_run: false
      :content: "           "
    - :was_run: false
      :content: "           equal = false if match = false"
    - :was_run: false
      :content: "         }"
    - :was_run: false
      :content: "       }"
    - :was_run: false
      :content: "       return equal"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     #"
    - :was_run: true
      :content: "     # Contains assertions that certify the election objects election1 and "
    - :was_run: true
      :content: "     # election2 contain equivalent precincts and associated districts"
    - :was_run: true
      :content: "     #"
    - :was_run: true
      :content: "     def equal_districts? election2"
    - :was_run: false
      :content: "       equal = true"
    - :was_run: false
      :content: "       districts.each {|e1_district|"
    - :was_run: false
      :content: "         e2_district = election2.districts.find_by_display_name(e1_district.display_name)"
    - :was_run: false
      :content: "         equal = false if !e2_district"
    - :was_run: false
      :content: "         "
    - :was_run: false
      :content: "         # is the same district type"
    - :was_run: false
      :content: "         equal = false if e1_district.district_type != e2_district.district_type"
    - :was_run: false
      :content: "         "
    - :was_run: false
      :content: "         # contain the same precincts"
    - :was_run: false
      :content: "         e1_district.precincts.each {|e1_precinct|"
    - :was_run: false
      :content: "           e2_precinct = e2_district.precincts.find_by_display_name(e1_precinct.display_name)"
    - :was_run: false
      :content: "           equal = false if e2_precinct.nil?"
    - :was_run: false
      :content: "         }"
    - :was_run: false
      :content: "       }"
    - :was_run: false
      :content: "       return equal"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     #"
    - :was_run: true
      :content: "     # Contains assertions that certify the election objects election1 and "
    - :was_run: true
      :content: "     # election2 contain equivalent questions and associated districts"
    - :was_run: true
      :content: "     #  "
    - :was_run: true
      :content: "     def equal_questions? election2"
    - :was_run: false
      :content: "       equal = true"
    - :was_run: false
      :content: "       questions.each {|e1_question|"
    - :was_run: false
      :content: "         e2_question = election2.questions.find_by_display_name(e1_question.display_name)"
    - :was_run: false
      :content: "         equal = false if e2_question.nil?"
    - :was_run: false
      :content: "         "
    - :was_run: false
      :content: "         equal = false if e1_question.question != e2_question.question"
    - :was_run: false
      :content: "         "
    - :was_run: false
      :content: "         equal = false if e1_question.district.display_name != e2_question.district.display_name"
    - :was_run: false
      :content: "       }"
    - :was_run: false
      :content: "       return equal"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "       "
    - :was_run: true
      :content: "       def render_ballot(election, precinct, ballot_style_template)"
    - :was_run: false
      :content: "         style = BallotStyle.find(ballot_style_template.ballot_style).ballot_style_code"
    - :was_run: false
      :content: "         lang = Language.find(ballot_style_template.default_language).code"
    - :was_run: false
      :content: "         instruction_text = ballot_style_template.instruction_text"
    - :was_run: false
      :content: "         state_seal = ballot_style_template.state_graphic"
    - :was_run: false
      :content: "         state_signature = ballot_style_template.state_signature_image"
    - :was_run: false
      :content: "         medium_id = ballot_style_template.medium_id"
    - :was_run: false
      :content: "         title = precinct.display_name.gsub(/ /, \"_\").camelize + \" Ballot.pdf\""
    - :was_run: false
      :content: "         "
    - :was_run: false
      :content: "         if medium_id == 0"
    - :was_run: false
      :content: "           pdfBallot = AbstractBallot.create(election, precinct, style, lang, instruction_text, state_seal, state_signature)"
    - :was_run: false
      :content: "           new_ballot = {:fileName => title, :pdfBallot => pdfBallot, :medium_id => medium_id}"
    - :was_run: false
      :content: "         else"
    - :was_run: false
      :content: "           new_ballot = {:title => title, :medium_id => medium_id}"
    - :was_run: false
      :content: "         end"
    - :was_run: false
      :content: "         return new_ballot"
    - :was_run: false
      :content: "       end"
    - :was_run: true
      :content: "       "
    - :was_run: true
      :content: "       "
    - :was_run: true
      :content: "       "
    - :was_run: true
      :content: "       "
    - :was_run: true
      :content: "       def render_ballots(election, precincts, ballot_style_template)"
    - :was_run: false
      :content: "         style = BallotStyle.find(ballot_style_template.ballot_style).ballot_style_code"
    - :was_run: false
      :content: "         lang = Language.find(ballot_style_template.default_language).code"
    - :was_run: false
      :content: "         instruction_text = ballot_style_template.instruction_text"
    - :was_run: false
      :content: "         state_seal = ballot_style_template.state_graphic"
    - :was_run: false
      :content: "         state_signature = ballot_style_template.state_signature_image"
    - :was_run: false
      :content: "         ballot_array = Array.new"
    - :was_run: false
      :content: "         precincts.each do |precinct|"
    - :was_run: false
      :content: "           title = precinct.display_name.gsub(/ /, \"_\").camelize + \" Ballot.pdf\""
    - :was_run: false
      :content: "           pdfBallot = AbstractBallot.create(election, precinct, style, lang, instruction_text, state_seal, state_signature)"
    - :was_run: false
      :content: "           new_ballot = {:fileName => title, :pdfBallot => pdfBallot}"
    - :was_run: false
      :content: "           ballot_array << new_ballot"
    - :was_run: false
      :content: "         end"
    - :was_run: false
      :content: "         "
    - :was_run: false
      :content: "            "
    - :was_run: false
      :content: "           #new_ballots = {:fileName => title, :pdfBallot => pdfBallot, :medium_id => medium_id}"
    - :was_run: false
      :content: "           "
    - :was_run: false
      :content: "         return ballot_array"
    - :was_run: false
      :content: "       end"
    - :was_run: false
      :content: "       "
    - :was_run: false
      :content: "   "
    - :was_run: false
      :content: "   end"
    :percent_run: 41
  app/controllers/district_types_controller.rb: 
    :lines: 
    - :was_run: true
      :content: "   class DistrictTypesController < ApplicationController"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def index"
    - :was_run: true
      :content: "       @district_types = DistrictType.paginate(:per_page => 10, :page => params[:page])"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def show"
    - :was_run: false
      :content: "       @district_type = DistrictType.find(params[:id])"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def new"
    - :was_run: true
      :content: "       @district_type = DistrictType.new"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def edit"
    - :was_run: false
      :content: "       @district_type = DistrictType.find(params[:id])"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def create"
    - :was_run: false
      :content: "       @district_type = DistrictType.new(params[:district_type])"
    - :was_run: false
      :content: "   "
    - :was_run: false
      :content: "       if @district_type.save"
    - :was_run: false
      :content: "         flash[:notice] = 'DistrictType was successfully created.'"
    - :was_run: false
      :content: "         redirect_to(@district_type) "
    - :was_run: false
      :content: "       else"
    - :was_run: false
      :content: "         render :action => \"new\" "
    - :was_run: false
      :content: "       end"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def update"
    - :was_run: false
      :content: "       @district_type = DistrictType.find(params[:id])"
    - :was_run: false
      :content: "   "
    - :was_run: false
      :content: "       if @district_type.update_attributes(params[:district_type])"
    - :was_run: false
      :content: "         flash[:notice] = 'DistrictType was successfully updated.'"
    - :was_run: false
      :content: "         redirect_to(@district_type) "
    - :was_run: false
      :content: "       else"
    - :was_run: false
      :content: "         render :action => \"edit\" "
    - :was_run: false
      :content: "       end"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def destroy"
    - :was_run: false
      :content: "       @district_type = DistrictType.find(params[:id])"
    - :was_run: false
      :content: "       @district_type.destroy"
    - :was_run: false
      :content: "       redirect_to(district_types_url) "
    - :was_run: false
      :content: "     end"
    - :was_run: false
      :content: "   end"
    :percent_run: 41
  app/controllers/ballot_styles_controller.rb: 
    :lines: 
    - :was_run: true
      :content: "   class BallotStylesController < ApplicationController"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     layout 'application'"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     # GET /ballot_styles"
    - :was_run: true
      :content: "     # GET /ballot_styles.xml"
    - :was_run: true
      :content: "     def index"
    - :was_run: true
      :content: "       @ballot_styles = BallotStyle.paginate(:per_page => 10, :page => params[:page])"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       respond_to do |format|"
    - :was_run: true
      :content: "         format.html # index.html.erb"
    - :was_run: true
      :content: "         format.xml  { render :xml => @ballot_styles }"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     # GET /ballot_styles/1"
    - :was_run: true
      :content: "     # GET /ballot_styles/1.xml"
    - :was_run: true
      :content: "     def show"
    - :was_run: false
      :content: "       @ballot_style = BallotStyle.find(params[:id])"
    - :was_run: false
      :content: "   "
    - :was_run: false
      :content: "       respond_to do |format|"
    - :was_run: false
      :content: "         format.html # show.html.erb"
    - :was_run: false
      :content: "         format.xml  { render :xml => @ballot_style }"
    - :was_run: false
      :content: "       end"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     # GET /ballot_styles/new"
    - :was_run: true
      :content: "     # GET /ballot_styles/new.xml"
    - :was_run: true
      :content: "     def new"
    - :was_run: true
      :content: "       @ballot_style = BallotStyle.new"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       respond_to do |format|"
    - :was_run: true
      :content: "         format.html # new.html.erb"
    - :was_run: true
      :content: "         format.xml  { render :xml => @ballot_style }"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     # GET /ballot_styles/1/edit"
    - :was_run: true
      :content: "     def edit"
    - :was_run: false
      :content: "       @ballot_style = BallotStyle.find(params[:id])"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     # POST /ballot_styles"
    - :was_run: true
      :content: "     # POST /ballot_styles.xml"
    - :was_run: true
      :content: "     def create"
    - :was_run: false
      :content: "       @ballot_style = BallotStyle.new(params[:ballot_style])"
    - :was_run: false
      :content: "   "
    - :was_run: false
      :content: "       respond_to do |format|"
    - :was_run: false
      :content: "         if @ballot_style.save"
    - :was_run: false
      :content: "           flash[:notice] = 'BallotStyle was successfully created.'"
    - :was_run: false
      :content: "           format.html { redirect_to(@ballot_style) }"
    - :was_run: false
      :content: "           format.xml  { render :xml => @ballot_style, :status => :created, :location => @ballot_style }"
    - :was_run: false
      :content: "         else"
    - :was_run: false
      :content: "           format.html { render :action => \"new\" }"
    - :was_run: false
      :content: "           format.xml  { render :xml => @ballot_style.errors, :status => :unprocessable_entity }"
    - :was_run: false
      :content: "         end"
    - :was_run: false
      :content: "       end"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     # PUT /ballot_styles/1"
    - :was_run: true
      :content: "     # PUT /ballot_styles/1.xml"
    - :was_run: true
      :content: "     def update"
    - :was_run: false
      :content: "       @ballot_style = BallotStyle.find(params[:id])"
    - :was_run: false
      :content: "   "
    - :was_run: false
      :content: "       respond_to do |format|"
    - :was_run: false
      :content: "         if @ballot_style.update_attributes(params[:ballot_style])"
    - :was_run: false
      :content: "           flash[:notice] = 'BallotStyle was successfully updated.'"
    - :was_run: false
      :content: "           format.html { redirect_to(@ballot_style) }"
    - :was_run: false
      :content: "           format.xml  { head :ok }"
    - :was_run: false
      :content: "         else"
    - :was_run: false
      :content: "           format.html { render :action => \"edit\" }"
    - :was_run: false
      :content: "           format.xml  { render :xml => @ballot_style.errors, :status => :unprocessable_entity }"
    - :was_run: false
      :content: "         end"
    - :was_run: false
      :content: "       end"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     # DELETE /ballot_styles/1"
    - :was_run: true
      :content: "     # DELETE /ballot_styles/1.xml"
    - :was_run: true
      :content: "     def destroy"
    - :was_run: false
      :content: "       @ballot_style = BallotStyle.find(params[:id])"
    - :was_run: false
      :content: "       @ballot_style.destroy"
    - :was_run: false
      :content: "   "
    - :was_run: false
      :content: "       respond_to do |format|"
    - :was_run: false
      :content: "         format.html { redirect_to(ballot_styles_url) }"
    - :was_run: false
      :content: "         format.xml  { head :ok }"
    - :was_run: false
      :content: "       end"
    - :was_run: false
      :content: "     end"
    - :was_run: false
      :content: "   end"
    :percent_run: 50
  app/models/medium.rb: 
    :lines: 
    - :was_run: true
      :content: "   class Medium < ActiveRecord::Base"
    - :was_run: true
      :content: "   end"
    :percent_run: 100
  app/controllers/districts_controller.rb: 
    :lines: 
    - :was_run: true
      :content: "   class DistrictsController < ApplicationController"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def index"
    - :was_run: true
      :content: "       @districts = District.paginate(:per_page => 10, :page => params[:page])"
    - :was_run: true
      :content: "       "
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def show"
    - :was_run: false
      :content: "       @district = District.find(params[:id])"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def new"
    - :was_run: false
      :content: "       @district = District.new"
    - :was_run: false
      :content: "   #    @district.election_id = params[:election_id]"
    - :was_run: false
      :content: "   #    @election = params[:election_id]"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def edit"
    - :was_run: false
      :content: "       @district = District.find(params[:id])"
    - :was_run: false
      :content: "       @district_sets = {}"
    - :was_run: false
      :content: "       DistrictSet.find(:all).collect { |ds| @district_sets[ds.display_name] = ds.id}"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def create"
    - :was_run: false
      :content: "       @district = District.new(params[:district])"
    - :was_run: false
      :content: "       @election = params[:election_id]"
    - :was_run: false
      :content: "       if @district.save"
    - :was_run: false
      :content: "         flash[:notice] = 'District was successfully created.'"
    - :was_run: false
      :content: "         redirect_to(@district)"
    - :was_run: false
      :content: "       else"
    - :was_run: false
      :content: "         render :action => \"new\""
    - :was_run: false
      :content: "       end"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def update"
    - :was_run: false
      :content: "       @district = District.find(params[:id])"
    - :was_run: false
      :content: "       handle_district_sets"
    - :was_run: false
      :content: "       if @district.update_attributes(params[:district])"
    - :was_run: false
      :content: "         flash[:notice] = 'District was successfully updated.'"
    - :was_run: false
      :content: "         redirect_to districts_url"
    - :was_run: false
      :content: "       else"
    - :was_run: false
      :content: "         render :action => \"edit\""
    - :was_run: false
      :content: "       end"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def destroy"
    - :was_run: false
      :content: "       @district = District.find(params[:id])"
    - :was_run: false
      :content: "       @district.destroy"
    - :was_run: false
      :content: "       redirect_to(districts_url)"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     private"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     def handle_district_sets"
    - :was_run: false
      :content: "       if params['district_sets']"
    - :was_run: false
      :content: "         @district.district_sets.clear"
    - :was_run: false
      :content: "         chosen_sets = params[:district_sets].map { |id| DistrictSet.find(id)}"
    - :was_run: false
      :content: "         @district.district_sets << chosen_sets"
    - :was_run: false
      :content: "       end"
    - :was_run: false
      :content: "     end"
    - :was_run: false
      :content: "   end"
    :percent_run: 36
  app/ttv/import_export.rb: 
    :lines: 
    - :was_run: true
      :content: "   require 'rexml/document'"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "   module TTV"
    - :was_run: true
      :content: "     module ImportExport"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       # imports an election from standard XML format"
    - :was_run: true
      :content: "       class Import"
    - :was_run: true
      :content: "         def initialize(source)"
    - :was_run: true
      :content: "           @source = source"
    - :was_run: true
      :content: "           @importIdDistrictMap = {}"
    - :was_run: true
      :content: "           @precinctsMasterList = {}"
    - :was_run: true
      :content: "           @election = nil"
    - :was_run: true
      :content: "         end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "         def importQuestions(xmlQuestions)"
    - :was_run: true
      :content: "           questions = []"
    - :was_run: true
      :content: "           xmlQuestions.each do |xmlQuestion|"
    - :was_run: true
      :content: "             xmlText = xmlQuestion.get_elements('text')"
    - :was_run: true
      :content: "             text = xmlText.size > 0 ? xmlText[0].text : \"\""
    - :was_run: true
      :content: "             text = text.rstrip.lstrip"
    - :was_run: true
      :content: "             question = Question.create(:display_name => xmlQuestion.attributes['display_name'],"
    - :was_run: true
      :content: "             :requesting_district_id => @importIdDistrictMap[xmlQuestion.attributes['district_idref']],"
    - :was_run: true
      :content: "             :election_id => @election.id,"
    - :was_run: true
      :content: "             :question => text );"
    - :was_run: true
      :content: "             questions.push(question)"
    - :was_run: true
      :content: "           end"
    - :was_run: true
      :content: "           questions"
    - :was_run: true
      :content: "         end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "         def importCandidate(xmlCandidate)"
    - :was_run: true
      :content: "           party_name = xmlCandidate.attributes['party']"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "           party = Party.find_by_display_name(party_name)"
    - :was_run: true
      :content: "           if party.nil? "
    - :was_run: true
      :content: "             party = Party.new(:display_name => party_name)"
    - :was_run: true
      :content: "           end"
    - :was_run: true
      :content: "           "
    - :was_run: true
      :content: "           #puts \"XML Import: \" + xmlCandidate.attributes['display_name'] + party.display_name"
    - :was_run: true
      :content: "           new_candidate = Candidate.new(:display_name => xmlCandidate.attributes['display_name'],"
    - :was_run: true
      :content: "                         :party_id => party.id)"
    - :was_run: true
      :content: "           new_candidate.party = party"
    - :was_run: true
      :content: "           new_candidate"
    - :was_run: true
      :content: "         end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "         def importContests(xmlContests)"
    - :was_run: true
      :content: "           contests = []"
    - :was_run: true
      :content: "           xmlContests.each do |xmlContest|"
    - :was_run: true
      :content: "             contest = Contest.create(:display_name => xmlContest.attributes['display_name'],"
    - :was_run: true
      :content: "             :position => xmlContest.attributes['order'] || 0,"
    - :was_run: true
      :content: "             :open_seat_count => xmlContest.attributes['open_seat'],"
    - :was_run: true
      :content: "             :voting_method_id => VotingMethod.xmlToId(xmlContest.attributes['voting_method'] || 'winner'),"
    - :was_run: true
      :content: "             :district_id => @importIdDistrictMap[xmlContest.attributes['district_idref']],"
    - :was_run: true
      :content: "             :election_id => @election.id )"
    - :was_run: true
      :content: "             xmlContest.get_elements('candidates/candidate').each do | xmlCandidate |"
    - :was_run: true
      :content: "               contest.candidates << importCandidate(xmlCandidate)"
    - :was_run: true
      :content: "             end"
    - :was_run: true
      :content: "             contests.push(contest)"
    - :was_run: true
      :content: "           end"
    - :was_run: true
      :content: "           contests"
    - :was_run: true
      :content: "         end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "         def createPrecinct(id, precinctsMasterList)"
    - :was_run: true
      :content: "           newPrecinct = Precinct.new()"
    - :was_run: true
      :content: "           newPrecinct.importId = id"
    - :was_run: true
      :content: "           precinctsMasterList[id] = newPrecinct"
    - :was_run: true
      :content: "         end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "         def importDistrict(xmlDistrict, precinctsMasterList)"
    - :was_run: true
      :content: "           district = District.new(:display_name => xmlDistrict.attributes['display_name'], "
    - :was_run: true
      :content: "                                   :district_type_id => DistrictType.xmlToId(xmlDistrict.attributes['type'] ))"
    - :was_run: true
      :content: "           importPrecincts = {}"
    - :was_run: true
      :content: "           xmlDistrict.get_elements('precinct').each do |xmlPrecinct|"
    - :was_run: true
      :content: "             id = xmlPrecinct.attributes['idref']"
    - :was_run: true
      :content: "             if precinctsMasterList[id]"
    - :was_run: true
      :content: "               importPrecincts[id] = precinctsMasterList[id]"
    - :was_run: true
      :content: "             else"
    - :was_run: true
      :content: "               importPrecincts[id] = createPrecinct(id, precinctsMasterList)"
    - :was_run: true
      :content: "             end"
    - :was_run: true
      :content: "           end"
    - :was_run: true
      :content: "           district.importId = xmlDistrict.attributes['id']"
    - :was_run: true
      :content: "           district.importPrecincts = importPrecincts"
    - :was_run: true
      :content: "           district"
    - :was_run: true
      :content: "         end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "         # districts/precincts are REXML elements"
    - :was_run: true
      :content: "         def importDistrictSet(xmlDistricts, xmlPrecincts)"
    - :was_run: true
      :content: "           newSet = DistrictSet.new(:display_name => xmlDistricts.attributes['display_name'])"
    - :was_run: true
      :content: "           newDistricts = []"
    - :was_run: true
      :content: "           newPrecincts = {}"
    - :was_run: true
      :content: "           xmlDistricts.get_elements('district').each do |xmlDistrict|"
    - :was_run: true
      :content: "             newDistricts << importDistrict(xmlDistrict, newPrecincts)"
    - :was_run: true
      :content: "           end"
    - :was_run: true
      :content: "           xmlPrecincts.get_elements('precinct').each do |xmlPrecinct|"
    - :was_run: true
      :content: "             id = xmlPrecinct.attributes['id']"
    - :was_run: true
      :content: "             unless newPrecincts[id]"
    - :was_run: false
      :content: "               newPrecincts[id] = Precinct.new()"
    - :was_run: false
      :content: "               newPrecincts.importId = id"
    - :was_run: false
      :content: "             end"
    - :was_run: true
      :content: "             newPrecincts[id].display_name = xmlPrecinct.attributes['display_name']"
    - :was_run: true
      :content: "           end"
    - :was_run: true
      :content: "           # we have all new districts & precincts loaded, see if this district set is duplicate"
    - :was_run: true
      :content: "           # duplicate? is a heuristic"
    - :was_run: true
      :content: "           duplicates = DistrictSet.find_all_by_display_name(newSet.display_name)"
    - :was_run: true
      :content: "           duplicates.each do |dup|"
    - :was_run: true
      :content: "             if dup.districts.size == newDistricts.size && dup.precincts.size == newPrecincts.size"
    - :was_run: true
      :content: "               newDistricts.each do |district|"
    - :was_run: true
      :content: "                 match = dup.districts.detect { |item| item.display_name == district.display_name}"
    - :was_run: true
      :content: "                 next unless match"
    - :was_run: true
      :content: "                 @importIdDistrictMap[district.importId] = match.id"
    - :was_run: true
      :content: "               end"
    - :was_run: true
      :content: "               return dup"
    - :was_run: true
      :content: "             end"
    - :was_run: true
      :content: "           end"
    - :was_run: true
      :content: "           # duplicate not found, create the whole set"
    - :was_run: true
      :content: "           newSet.save!"
    - :was_run: true
      :content: "           newSet.reload"
    - :was_run: true
      :content: "           newPrecincts.each_value { |precinct| precinct.save! }"
    - :was_run: true
      :content: "           newDistricts.each do |district|"
    - :was_run: true
      :content: "             district.save!"
    - :was_run: true
      :content: "             district.importPrecincts.each_value { |precinct| district.precincts << precinct }"
    - :was_run: true
      :content: "             newSet.districts << district"
    - :was_run: true
      :content: "             @importIdDistrictMap[district.importId] = district.id"
    - :was_run: true
      :content: "           end"
    - :was_run: true
      :content: "           newSet"
    - :was_run: true
      :content: "         end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "         def import"
    - :was_run: true
      :content: "             doc = REXML::Document.new @source"
    - :was_run: true
      :content: "             xmlElection = doc.root"
    - :was_run: true
      :content: "             raise \"Invalid XML: <election> is not the root. \" unless xmlElection.name == 'election' "
    - :was_run: true
      :content: "             ActiveRecord::Base.transaction do"
    - :was_run: true
      :content: "               district_set = importDistrictSet(xmlElection.get_elements('districts')[0],"
    - :was_run: true
      :content: "               xmlElection.get_elements('precincts')[0])"
    - :was_run: true
      :content: "               @election = Election.create(:display_name => xmlElection.attributes['display_name'],"
    - :was_run: true
      :content: "               :start_date => xmlElection.attributes['start_date'],"
    - :was_run: true
      :content: "               :district_set_id => district_set.id)"
    - :was_run: true
      :content: "               contests = importContests(xmlElection.get_elements('body/contest'))"
    - :was_run: true
      :content: "               questions = importQuestions(xmlElection.get_elements('body/question'))"
    - :was_run: true
      :content: "             end "
    - :was_run: true
      :content: "           @election"
    - :was_run: true
      :content: "        end"
    - :was_run: true
      :content: "        "
    - :was_run: true
      :content: "        "
    - :was_run: true
      :content: "         def import_batch"
    - :was_run: true
      :content: "          xml_dir = Dir.new(@source)"
    - :was_run: true
      :content: "          xml_dir.each do |xml_file|"
    - :was_run: true
      :content: "            if xml_file[xml_file.length - 3..xml_file.length] == 'xml' && xml_file.class == 'File'"
    - :was_run: false
      :content: "              file = File.new(\"#{@source}/#{xml_file}\")"
    - :was_run: false
      :content: "              doc = REXML::Document.new(file)"
    - :was_run: false
      :content: "              xmlElection = doc.root"
    - :was_run: false
      :content: "              raise \"Invalid XML: <election> is not the root. \" unless xmlElection.name == 'election'"
    - :was_run: false
      :content: "              ActiveRecord::Base.transaction do"
    - :was_run: false
      :content: "                district_set = importDistrictSet(xmlElection.get_elements('districts')[0],"
    - :was_run: false
      :content: "                xmlElection.get_elements('precincts')[0])"
    - :was_run: false
      :content: "                @election = Election.create(:display_name => xmlElection.attributes['display_name'],"
    - :was_run: false
      :content: "                :start_date => xmlElection.attributes['start_date'],"
    - :was_run: false
      :content: "                :district_set_id => district_set.id)"
    - :was_run: false
      :content: "                contests = importContests(xmlElection.get_elements('body/contest'))"
    - :was_run: false
      :content: "                questions = importQuestions(xmlElection.get_elements('body/question'))"
    - :was_run: false
      :content: "              end "
    - :was_run: false
      :content: "            end"
    - :was_run: false
      :content: "          end"
    - :was_run: true
      :content: "          @election"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "      "
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "       "
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       # exports the election as XML"
    - :was_run: true
      :content: "       class Export"
    - :was_run: true
      :content: "         def initialize(election)"
    - :was_run: true
      :content: "           @election = election"
    - :was_run: true
      :content: "           @xml = nil"
    - :was_run: true
      :content: "           "
    - :was_run: true
      :content: "           @ballot_config = @election.district_set == DistrictSet.find(0)"
    - :was_run: true
      :content: "         end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "         def exportDistrict(district)"
    - :was_run: true
      :content: "           @xml.district :id => district.id, :display_name => district.display_name, :type => district.district_type.idToXml do "
    - :was_run: true
      :content: "             district.precincts.each do | precinct |"
    - :was_run: true
      :content: "               @xml.precinct :idref => precinct.id"
    - :was_run: true
      :content: "             end"
    - :was_run: true
      :content: "           end"
    - :was_run: true
      :content: "         end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "         def exportPrecinct(precinct)"
    - :was_run: true
      :content: "           @xml.precinct :id => precinct.id, :display_name => precinct.display_name        "
    - :was_run: true
      :content: "         end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "         def exportDistrictSet(district_set)"
    - :was_run: true
      :content: "           @xml.districts :display_name => district_set.display_name do "
    - :was_run: true
      :content: "             district_set.districts.each do |district|"
    - :was_run: true
      :content: "               exportDistrict(district)"
    - :was_run: true
      :content: "             end"
    - :was_run: true
      :content: "           end"
    - :was_run: true
      :content: "           @xml.precincts do"
    - :was_run: true
      :content: "             district_set.precincts.each do | precinct |"
    - :was_run: true
      :content: "               exportPrecinct(precinct)"
    - :was_run: true
      :content: "             end"
    - :was_run: true
      :content: "           end"
    - :was_run: true
      :content: "         end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "         def exportCandidate(candidate)"
    - :was_run: true
      :content: "           #puts \"XML export: \" + candidate.display_name + \" \" + candidate.party.display_name"
    - :was_run: true
      :content: "           @xml.candidate :display_name => candidate.display_name,"
    - :was_run: true
      :content: "             :party => candidate.party.display_name"
    - :was_run: true
      :content: "         end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "         def exportContest(contest)"
    - :was_run: true
      :content: "           @xml.contest :display_name => contest.display_name, "
    - :was_run: true
      :content: "           :open_seat => contest.open_seat_count,"
    - :was_run: true
      :content: "           :voting_method => contest.voting_method.idToXml,"
    - :was_run: true
      :content: "           :district_idref => contest.district_id,"
    - :was_run: true
      :content: "           :order => contest.position do"
    - :was_run: true
      :content: "             @xml.candidates do"
    - :was_run: true
      :content: "               contest.candidates.each do |candidate|"
    - :was_run: true
      :content: "                 exportCandidate(candidate)"
    - :was_run: true
      :content: "               end "
    - :was_run: true
      :content: "             end if contest.candidates.size != 0"
    - :was_run: true
      :content: "           end"
    - :was_run: true
      :content: "         end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "         def exportQuestion(question)"
    - :was_run: false
      :content: "           @xml.question :display_name => question.display_name, :district_idref => question.requesting_district_id do"
    - :was_run: false
      :content: "             @xml.text do"
    - :was_run: false
      :content: "               @xml << question.question"
    - :was_run: false
      :content: "             end"
    - :was_run: false
      :content: "           end"
    - :was_run: false
      :content: "         end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "         def export"
    - :was_run: true
      :content: "           @xml = Builder::XmlMarkup.new( { :skip_types => true, :indent => 2 })"
    - :was_run: true
      :content: "           @options = { :skip_types => true, :indent => 2, :skip_instruct => true, :builder => @xml}          "
    - :was_run: true
      :content: "           @xml.instruct!"
    - :was_run: true
      :content: "           @xml.election :display_name => @election.display_name, :start_date => @election.start_date do"
    - :was_run: true
      :content: "             exportDistrictSet(@election.district_set)"
    - :was_run: true
      :content: "             @xml.body do"
    - :was_run: true
      :content: "               @election.contests.each do |contest|"
    - :was_run: true
      :content: "                 exportContest(contest)"
    - :was_run: true
      :content: "               end"
    - :was_run: true
      :content: "               @election.questions.each do |question|"
    - :was_run: false
      :content: "                 exportQuestion(question)"
    - :was_run: false
      :content: "               end"
    - :was_run: false
      :content: "             end"
    - :was_run: false
      :content: "           end"
    - :was_run: true
      :content: "           @xml.target!"
    - :was_run: true
      :content: "         end"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       def ImportExport.export(election)"
    - :was_run: true
      :content: "         exporter = TTV::ImportExport::Export.new(election)"
    - :was_run: true
      :content: "         exporter.export"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       def ImportExport.import(source)"
    - :was_run: true
      :content: "         begin"
    - :was_run: true
      :content: "           importer = TTV::ImportExport::Import.new(source)"
    - :was_run: true
      :content: "           importer.import();"
    - :was_run: false
      :content: "         rescue Exception => ex"
    - :was_run: false
      :content: "           raise ex"
    - :was_run: false
      :content: "         end"
    - :was_run: false
      :content: "       end"
    - :was_run: false
      :content: "   "
    - :was_run: false
      :content: "     end"
    - :was_run: false
      :content: "   end"
    :percent_run: 87
  app/controllers/district_sets_controller.rb: 
    :lines: 
    - :was_run: true
      :content: "   class DistrictSetsController < ApplicationController"
    - :was_run: true
      :content: "     # GET /district_sets"
    - :was_run: true
      :content: "     # GET /district_sets.xml"
    - :was_run: true
      :content: "     def index"
    - :was_run: true
      :content: "       @district_sets = DistrictSet.paginate(:per_page => 10, :page => params[:page])"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       respond_to do |format|"
    - :was_run: true
      :content: "         format.html # index.html.erb"
    - :was_run: true
      :content: "         format.xml  { render :xml => @district_sets }"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     # GET /district_sets/1"
    - :was_run: true
      :content: "     # GET /district_sets/1.xml"
    - :was_run: true
      :content: "     def show"
    - :was_run: false
      :content: "       @district_set = DistrictSet.find(params[:id])"
    - :was_run: false
      :content: "   "
    - :was_run: false
      :content: "       respond_to do |format|"
    - :was_run: false
      :content: "         format.html # show.html.erb"
    - :was_run: false
      :content: "         format.xml  { render :xml => @district_set }"
    - :was_run: false
      :content: "       end"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     # GET /district_sets/new"
    - :was_run: true
      :content: "     # GET /district_sets/new.xml"
    - :was_run: true
      :content: "     def new"
    - :was_run: true
      :content: "       @district_set = DistrictSet.new"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       respond_to do |format|"
    - :was_run: true
      :content: "         format.html # new.html.erb"
    - :was_run: true
      :content: "         format.xml  { render :xml => @district_set }"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     # GET /district_sets/1/edit"
    - :was_run: true
      :content: "     def edit"
    - :was_run: false
      :content: "       @district_set = DistrictSet.find(params[:id])"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     # POST /district_sets"
    - :was_run: true
      :content: "     # POST /district_sets.xml"
    - :was_run: true
      :content: "     def create"
    - :was_run: false
      :content: "       @district_set = DistrictSet.new(params[:district_set])"
    - :was_run: false
      :content: "   "
    - :was_run: false
      :content: "       respond_to do |format|"
    - :was_run: false
      :content: "         if @district_set.save"
    - :was_run: false
      :content: "           flash[:notice] = 'DistrictSet was successfully created.'"
    - :was_run: false
      :content: "           format.html { redirect_to(@district_set) }"
    - :was_run: false
      :content: "           format.xml  { render :xml => @district_set, :status => :created, :location => @district_set }"
    - :was_run: false
      :content: "         else"
    - :was_run: false
      :content: "           format.html { render :action => \"new\" }"
    - :was_run: false
      :content: "           format.xml  { render :xml => @district_set.errors, :status => :unprocessable_entity }"
    - :was_run: false
      :content: "         end"
    - :was_run: false
      :content: "       end"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     # PUT /district_sets/1"
    - :was_run: true
      :content: "     # PUT /district_sets/1.xml"
    - :was_run: true
      :content: "     def update"
    - :was_run: false
      :content: "       @district_set = DistrictSet.find(params[:id])"
    - :was_run: false
      :content: "   "
    - :was_run: false
      :content: "       respond_to do |format|"
    - :was_run: false
      :content: "         if @district_set.update_attributes(params[:district_set])"
    - :was_run: false
      :content: "           flash[:notice] = 'DistrictSet was successfully updated.'"
    - :was_run: false
      :content: "           format.html { redirect_to(@district_set) }"
    - :was_run: false
      :content: "           format.xml  { head :ok }"
    - :was_run: false
      :content: "         else"
    - :was_run: false
      :content: "           format.html { render :action => \"edit\" }"
    - :was_run: false
      :content: "           format.xml  { render :xml => @district_set.errors, :status => :unprocessable_entity }"
    - :was_run: false
      :content: "         end"
    - :was_run: false
      :content: "       end"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     # DELETE /district_sets/1"
    - :was_run: true
      :content: "     # DELETE /district_sets/1.xml"
    - :was_run: true
      :content: "     def destroy"
    - :was_run: false
      :content: "       @district_set = DistrictSet.find(params[:id])"
    - :was_run: false
      :content: "       @district_set.destroy"
    - :was_run: false
      :content: "   "
    - :was_run: false
      :content: "       respond_to do |format|"
    - :was_run: false
      :content: "         format.html { redirect_to(district_sets_url) }"
    - :was_run: false
      :content: "         format.xml  { head :ok }"
    - :was_run: false
      :content: "       end"
    - :was_run: false
      :content: "     end"
    - :was_run: false
      :content: "   end"
    :percent_run: 48
  app/models/party.rb: 
    :lines: 
    - :was_run: true
      :content: "   # == Schema Information"
    - :was_run: true
      :content: "   # Schema version: 20100215144641"
    - :was_run: true
      :content: "   #"
    - :was_run: true
      :content: "   # Table name: parties"
    - :was_run: true
      :content: "   #"
    - :was_run: true
      :content: "   #  id           :integer         not null, primary key"
    - :was_run: true
      :content: "   #  display_name :string(255)"
    - :was_run: true
      :content: "   #  created_at   :datetime"
    - :was_run: true
      :content: "   #  updated_at   :datetime"
    - :was_run: true
      :content: "   #"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "   class Party < ActiveRecord::Base"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     include ConstantCache"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     cache_constants :key => :display_name"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def idToXml"
    - :was_run: true
      :content: "       self.display_name.downcase"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     validates_presence_of :ident"
    - :was_run: true
      :content: "     validates_uniqueness_of :ident, :message => \"Non-unique Party ident attempted: {{value}}.\""
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     # Make sure that ident is not nil. If it is, create a unique one."
    - :was_run: true
      :content: "     def before_validation"
    - :was_run: true
      :content: "       if self.blank? || self.ident.blank?"
    - :was_run: true
      :content: "         self.ident = \"party-#{ActiveSupport::SecureRandom.hex}\""
    - :was_run: true
      :content: "         self.save!"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def Party.xmlToId(xml)"
    - :was_run: true
      :content: "       raise \"unknown party #{xml}\" unless const_get(xml.constant_name)"
    - :was_run: true
      :content: "       const_get(xml.constant_name).id"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "   end"
    :percent_run: 100
  app/models/contest.rb: 
    :lines: 
    - :was_run: true
      :content: "   # == Schema Information"
    - :was_run: true
      :content: "   # Schema version: 20100215144641"
    - :was_run: true
      :content: "   #"
    - :was_run: true
      :content: "   # Table name: contests"
    - :was_run: true
      :content: "   #"
    - :was_run: true
      :content: "   #  id               :integer         not null, primary key"
    - :was_run: true
      :content: "   #  display_name     :string(255)"
    - :was_run: true
      :content: "   #  open_seat_count  :integer"
    - :was_run: true
      :content: "   #  voting_method_id :integer"
    - :was_run: true
      :content: "   #  district_id      :integer"
    - :was_run: true
      :content: "   #  election_id      :integer"
    - :was_run: true
      :content: "   #  created_at       :datetime"
    - :was_run: true
      :content: "   #  updated_at       :datetime"
    - :was_run: true
      :content: "   #"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "   class Contest < ActiveRecord::Base"
    - :was_run: true
      :content: "     # requesting district"
    - :was_run: true
      :content: "     belongs_to  :district"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     belongs_to :election"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     belongs_to :voting_method"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     has_many :candidates, :dependent => :destroy, :order => :display_name"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     attr_accessible :display_name, :open_seat_count, :voting_method_id , :candidates_attributes, :election_id, :district_id, :position"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     accepts_nested_attributes_for :candidates, :allow_destroy => true, :reject_if => proc { |attributes| attributes['display_name'].blank? }"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     validates_presence_of :display_name, :open_seat_count, :voting_method_id, :district_id, :election_id"
    - :was_run: true
      :content: "     validates_numericality_of :open_seat_count"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     def validate"
    - :was_run: true
      :content: "       osc = open_seat_count.to_i"
    - :was_run: true
      :content: "       errors.add(:open_seat_count, \"must be more than 0\") if osc < 1"
    - :was_run: true
      :content: "       errors.add(:open_seat_count, \"must be less than 10\") if osc > 10"
    - :was_run: true
      :content: "       errors.add(:voting_method_id, \"is invalid\") if !VotingMethod.exists?(voting_method_id)"
    - :was_run: true
      :content: "       errors.add(:district_id, \"is invalid\") if !District.exists?(district_id)"
    - :was_run: true
      :content: "       errors.add(:election_id, \"is invalid\") if !Election.exists?(election_id)"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     def after_initialize"
    - :was_run: true
      :content: "       write_attribute(:open_seat_count, 1) if !open_seat_count"
    - :was_run: true
      :content: "       write_attribute(:voting_method_id, 0) if !voting_method_id"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     def to_s"
    - :was_run: false
      :content: "       \"CONTEST #{self.display_name}\""
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     def self.contests_for_precinct_election(p, e)"
    - :was_run: true
      :content: "       d = p.districts_for_election(e)"
    - :was_run: true
      :content: "       e.contests.map do |c|"
    - :was_run: true
      :content: "         c if d.include?(c.district)      "
    - :was_run: false
      :content: "       end.flatten.compact"
    - :was_run: false
      :content: "     end"
    - :was_run: false
      :content: "     "
    - :was_run: false
      :content: "   end"
    :percent_run: 90
  app/ttv/translate.rb: 
    :lines: 
    - :was_run: true
      :content: "   module TTV"
    - :was_run: true
      :content: "     module Translate"
    - :was_run: true
      :content: "       "
    - :was_run: true
      :content: "       # from http://ruby.geraldbauer.ca/google-translation-api.html"
    - :was_run: true
      :content: "       # for a list of languages, see http://code.google.com/apis/ajaxlanguage/documentation/reference.html#LangNameArray"
    - :was_run: true
      :content: "       def self.translate(text, from, to)"
    - :was_run: false
      :content: "         raise \"#{text} is not a string, cannot translate\" unless text.class == String"
    - :was_run: false
      :content: "         if text.count(\"\\n\") > 0 # line splits, and google chews them up, must separate manually"
    - :was_run: false
      :content: "           puts \"translating #{text.length} '#{text}'\""
    - :was_run: false
      :content: "           translation = \"\""
    - :was_run: false
      :content: "           text.split(\"\\n\").each do |t|"
    - :was_run: false
      :content: "             translation += self.translate(t, from, to) + \"\\n\""
    - :was_run: false
      :content: "           end"
    - :was_run: false
      :content: "           puts \"translated \", translation"
    - :was_run: false
      :content: "           return translation"
    - :was_run: false
      :content: "         end"
    - :was_run: false
      :content: "         "
    - :was_run: false
      :content: "         return \"\" unless text =~ /\\w+/"
    - :was_run: false
      :content: "   "
    - :was_run: false
      :content: "         base = 'http://ajax.googleapis.com/ajax/services/language/translate' "
    - :was_run: false
      :content: "   "
    - :was_run: false
      :content: "         # assemble query params"
    - :was_run: false
      :content: "         params = {"
    - :was_run: false
      :content: "           :langpair => \"#{from}|#{to}\", "
    - :was_run: false
      :content: "           :q => text,"
    - :was_run: false
      :content: "           :v => 1.0  "
    - :was_run: false
      :content: "         }"
    - :was_run: false
      :content: "   "
    - :was_run: false
      :content: "         query = params.map{ |k,v| \"#{k}=#{CGI.escape(v.to_s)}\" }.join('&')"
    - :was_run: false
      :content: "   "
    - :was_run: false
      :content: "         response = Net::HTTP.get_response( URI.parse( \"#{base}?#{query}\" ) )"
    - :was_run: false
      :content: "         json = ActiveSupport::JSON.decode( response.body )"
    - :was_run: false
      :content: "   "
    - :was_run: false
      :content: "         if json['responseStatus'] == 200"
    - :was_run: false
      :content: "           json['responseData']['translatedText']"
    - :was_run: false
      :content: "         else"
    - :was_run: false
      :content: "           raise StandardError, response['responseDetails']"
    - :was_run: false
      :content: "         end"
    - :was_run: false
      :content: "       end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       def self.translate_file(src_path, dest_path, from, to)"
    - :was_run: false
      :content: "         if src_path =~ /.yml$/"
    - :was_run: false
      :content: "           yaml = YAML::load_file(src_path)"
    - :was_run: false
      :content: "           translation = {}"
    - :was_run: false
      :content: "           yaml.each do |a, b|"
    - :was_run: false
      :content: "             translation[a] = self.translate(b, from, to)"
    - :was_run: false
      :content: "           end"
    - :was_run: false
      :content: "           File.open dest_path, 'w' do |out|"
    - :was_run: false
      :content: "             YAML.dump(translation, out )"
    - :was_run: false
      :content: "           end"
    - :was_run: false
      :content: "         else"
    - :was_run: false
      :content: "           text = IO.read src_path"
    - :was_run: false
      :content: "           translation = self.translate text, from, to"
    - :was_run: false
      :content: "           out = File.open dest_path, \"w\" do |f|"
    - :was_run: false
      :content: "             f.write translation"
    - :was_run: false
      :content: "           end"
    - :was_run: false
      :content: "         end"
    - :was_run: false
      :content: "       end"
    - :was_run: true
      :content: "       "
    - :was_run: true
      :content: "       # use from a command line to translate ballot directories"
    - :was_run: true
      :content: "       # load \"lib/ttv/translate.rb\""
    - :was_run: true
      :content: "       # TTV::Translate.translate_directory(\"ballots/default/lang/en\", \"ballots/default/lang/zh\", \"en\", \"zh\")"
    - :was_run: true
      :content: "       def self.translate_directory(src_dir, dest_dir, from, to)"
    - :was_run: false
      :content: "         Dir.foreach src_dir do |f|"
    - :was_run: false
      :content: "           next unless f =~ /txt|yml/"
    - :was_run: false
      :content: "           self.translate_file \"#{src_dir}/#{f}\", \"#{dest_dir}/#{f}\", from, to"
    - :was_run: false
      :content: "         end"
    - :was_run: false
      :content: "       end"
    - :was_run: true
      :content: "       "
    - :was_run: true
      :content: "       def self.human_language(code)"
    - :was_run: false
      :content: "         case code"
    - :was_run: false
      :content: "         when 'en'; \"English\""
    - :was_run: false
      :content: "         when 'es'; \"Spanish\""
    - :was_run: false
      :content: "         when 'zh'; \"Chinese\""
    - :was_run: false
      :content: "         else code"
    - :was_run: false
      :content: "         end"
    - :was_run: false
      :content: "       end"
    - :was_run: true
      :content: "       "
    - :was_run: true
      :content: "       class YamlTranslation"
    - :was_run: true
      :content: "         def initialize(filename)"
    - :was_run: true
      :content: "           @filename = filename"
    - :was_run: true
      :content: "           @dirty = false"
    - :was_run: true
      :content: "           begin"
    - :was_run: true
      :content: "             @yaml = YAML::load_file(@filename)"
    - :was_run: true
      :content: "           rescue => ex"
    - :was_run: true
      :content: "             @dirty = true"
    - :was_run: true
      :content: "             @yaml = {}"
    - :was_run: true
      :content: "             @ex = ex"
    - :was_run: true
      :content: "           end"
    - :was_run: true
      :content: "         end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "         def [](val)"
    - :was_run: true
      :content: "           return @yaml[val] if @yaml.has_key? val"
    - :was_run: true
      :content: "           @dirty = true"
    - :was_run: true
      :content: "           @yaml[val] = \"NEEDSTRANSLATION\""
    - :was_run: true
      :content: "           \"NEEDSTRANSLATION\""
    - :was_run: true
      :content: "         end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "         def save"
    - :was_run: false
      :content: "           File.open( @filename, 'w' ) do |out|"
    - :was_run: false
      :content: "             YAML.dump( @yaml, out )"
    - :was_run: false
      :content: "           end unless !@dirty    "
    - :was_run: false
      :content: "         end"
    - :was_run: true
      :content: "         "
    - :was_run: true
      :content: "         def dirty?"
    - :was_run: false
      :content: "           @dirty"
    - :was_run: false
      :content: "         end"
    - :was_run: false
      :content: "   "
    - :was_run: false
      :content: "       end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       # for english (default_language)"
    - :was_run: true
      :content: "       #   recreate the file every time"
    - :was_run: true
      :content: "       # for other languages"
    - :was_run: true
      :content: "       #   recreate the file if needed"
    - :was_run: true
      :content: "       class ElectionTranslation"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "         DEFAULT_LANGUAGE = 'en'"
    - :was_run: true
      :content: "         "
    - :was_run: true
      :content: "         def initialize(election, lang)"
    - :was_run: true
      :content: "           @election = election"
    - :was_run: true
      :content: "           @filename = election.translation_path(lang)"
    - :was_run: true
      :content: "           @lang = lang"
    - :was_run: true
      :content: "           @dirty = false"
    - :was_run: true
      :content: "           begin"
    - :was_run: true
      :content: "             @yaml = YAML::load_file(@filename)"
    - :was_run: true
      :content: "           rescue => ex"
    - :was_run: true
      :content: "             @yaml = {}"
    - :was_run: true
      :content: "             @ex = ex"
    - :was_run: true
      :content: "           end"
    - :was_run: true
      :content: "         end"
    - :was_run: true
      :content: "         "
    - :was_run: true
      :content: "         def get(object, property)"
    - :was_run: true
      :content: "           key = \"#{object.class.name}-#{object.id}.#{property}\""
    - :was_run: true
      :content: "           return @yaml[key] if @yaml.has_key? key"
    - :was_run: true
      :content: "           if @lang == DEFAULT_LANGUAGE"
    - :was_run: true
      :content: "             @yaml[key] = object.send property"
    - :was_run: true
      :content: "             @yaml[key]"
    - :was_run: false
      :content: "           else"
    - :was_run: false
      :content: "             return @yaml[key] if @yaml.has_key? key"
    - :was_run: false
      :content: "             @dirty = true"
    - :was_run: false
      :content: "             @yaml[key] = \"NEEDSTRANSLATION\""
    - :was_run: false
      :content: "             \"NEEDSTRANSLATION\""
    - :was_run: false
      :content: "           end"
    - :was_run: false
      :content: "         end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "         def dirty?"
    - :was_run: true
      :content: "            @dirty"
    - :was_run: true
      :content: "          end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "   # look at this for solutions"
    - :was_run: true
      :content: "   # http://www.artweb-design.de/2008/7/18/the-ruby-on-rails-i18n-core-api    "
    - :was_run: true
      :content: "   # http://guides.rubyonrails.org/i18n.html"
    - :was_run: true
      :content: "         def ordinalize(n)"
    - :was_run: true
      :content: "           n.ordinalize # FIXME, need international support, might come with rails for free in future releases"
    - :was_run: true
      :content: "         end"
    - :was_run: true
      :content: "         "
    - :was_run: true
      :content: "         def strftime(date, format)"
    - :was_run: true
      :content: "           I18n.localize date, :locale => @lang, :format => format"
    - :was_run: true
      :content: "           # date.strftime(format)"
    - :was_run: true
      :content: "         end"
    - :was_run: true
      :content: "         "
    - :was_run: true
      :content: "         def save"
    - :was_run: false
      :content: "           File.open( @filename, 'w' ) do |out|"
    - :was_run: false
      :content: "             YAML.dump( @yaml, out )"
    - :was_run: false
      :content: "           end"
    - :was_run: false
      :content: "         end"
    - :was_run: false
      :content: "   "
    - :was_run: false
      :content: "       end"
    - :was_run: false
      :content: "           "
    - :was_run: false
      :content: "     end"
    - :was_run: false
      :content: "   end"
    :percent_run: 50
  app/ttv/abstract_ballot.rb: 
    :lines: 
    - :was_run: true
      :content: "   require 'prawn'"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "   module AbstractBallot"
    - :was_run: true
      :content: "       "
    - :was_run: true
      :content: "     def self.create(election, precinct, style='default', lang='en', instruction_text='none', state_seal = 'none', state_signature = 'none', destination = nil)"
    - :was_run: true
      :content: "   #      Prawn.debug = true"
    - :was_run: true
      :content: "       scanner = TTV::Scanner.new()"
    - :was_run: true
      :content: "       config = PDFBallotStyle.get_ballot_config(style, lang, election, scanner, instruction_text, state_seal, state_signature)"
    - :was_run: true
      :content: "       renderer = Renderer.new(election, precinct, config, destination)"
    - :was_run: true
      :content: "       renderer.render"
    - :was_run: true
      :content: "       raise ArgumentError, \"Translation to #{TTV::Translate.human_language(lang)} has not been done. Translate, then try again.\" if config.et.dirty?"
    - :was_run: true
      :content: "   #      config.bt.save"
    - :was_run: true
      :content: "       renderer.to_s"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     # no rebuild is used in testing to prevent continuous rebuilds"
    - :was_run: true
      :content: "     def self.translate(election, lang, no_rebuild = false)"
    - :was_run: false
      :content: "       return if no_rebuild && File.exists?(election.translation_path(lang))"
    - :was_run: false
      :content: "   "
    - :was_run: false
      :content: "       # generate english yaml file by generating ballots for all precincts"
    - :was_run: false
      :content: "       # "
    - :was_run: false
      :content: "       scanner = Scanner.new()"
    - :was_run: false
      :content: "       config = TTV::PDFBallotStyle.get_ballot_config('default', 'en', election, scanner, instruction_text, state_seal, state_signature)"
    - :was_run: false
      :content: "       election.district_set.precincts.each do | precinct |"
    - :was_run: false
      :content: "         renderer = Renderer.new(election, precinct, config)"
    - :was_run: false
      :content: "         renderer.render"
    - :was_run: false
      :content: "       end"
    - :was_run: false
      :content: "       config.et.save"
    - :was_run: false
      :content: "       TTV::Translate.translate_file(election.translation_path('en'), election.translation_path(lang), 'en', lang)"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     class Rect"
    - :was_run: true
      :content: "       attr_accessor :top, :left, :bottom, :right"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       def initialize(top, left, bottom, right)"
    - :was_run: true
      :content: "         @top, @left, @bottom , @right = top, left, bottom, right"
    - :was_run: true
      :content: "         @original_top = @top"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       def width"
    - :was_run: true
      :content: "         right - left"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       def height"
    - :was_run: true
      :content: "         top - bottom"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       def to_s"
    - :was_run: false
      :content: "         \"#{full_height? ? 'empty' : ''  }T:#{@top} L:#{@left} B:#{@bottom} R:#{@right} W:#{self.width} H:#{self.height}\""
    - :was_run: false
      :content: "       end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       def inset(horiz, vertical)"
    - :was_run: true
      :content: "         @top -= vertical"
    - :was_run: true
      :content: "         @bottom += vertical"
    - :was_run: true
      :content: "         @left += horiz"
    - :was_run: true
      :content: "         @right -= horiz"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       def first"
    - :was_run: false
      :content: "         self"
    - :was_run: false
      :content: "       end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       def full_height?"
    - :was_run: true
      :content: "         @original_top == @top"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       def self.create(top, left, bottom, right)"
    - :was_run: true
      :content: "         return new(top, left, bottom, right)"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       def self.create_wh(top, left, width, height)"
    - :was_run: true
      :content: "         return new(top, left, top - height, left + width)"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       def self.create_bound_box(bb)"
    - :was_run: true
      :content: "         return self.create(bb.top, bb.left, bb.bottom, bb.right)"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     # WideColumn is used in layout to group columns together"
    - :was_run: true
      :content: "     # its boundaries are leftmost/rightmost/lowest top/highest bottom"
    - :was_run: true
      :content: "     class WideColumn"
    - :was_run: true
      :content: "       def initialize (rects)"
    - :was_run: true
      :content: "         @rects = rects"
    - :was_run: true
      :content: "         @original_top = top"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       def initialize_copy(old)"
    - :was_run: true
      :content: "         @rects =  @rects.map { |r| r.clone }"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       def top"
    - :was_run: true
      :content: "         @rects.map { |r| r.top}.min"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "       def top=(x)"
    - :was_run: true
      :content: "         @rects.each { |r| r.top = x }"
    - :was_run: true
      :content: "       end        "
    - :was_run: true
      :content: "       def bottom"
    - :was_run: true
      :content: "         @rects.map { |r| r.bottom}.max"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "       def bottom=(x)"
    - :was_run: false
      :content: "         @rects.each { |r| r.bottom = x} "
    - :was_run: false
      :content: "       end"
    - :was_run: true
      :content: "       def left"
    - :was_run: true
      :content: "         @rects.map { |r| r.left}.min"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "       def right"
    - :was_run: true
      :content: "         @rects.map { |r| r.right}.max"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       def width"
    - :was_run: true
      :content: "         right - left"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       def height"
    - :was_run: true
      :content: "         top - bottom"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       def index(r)"
    - :was_run: false
      :content: "         @rects.index(r)"
    - :was_run: false
      :content: "       end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       def first"
    - :was_run: false
      :content: "         @rects.first"
    - :was_run: false
      :content: "       end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       def full_height?"
    - :was_run: false
      :content: "         @original_top == top"
    - :was_run: false
      :content: "       end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       def to_s"
    - :was_run: false
      :content: "         s = \"T:#{top} L:#{left} B:#{bottom} R:#{right} W:#{width} H#{height}\\n\\n\""
    - :was_run: false
      :content: "         @rects.each do |r| "
    - :was_run: false
      :content: "           s += \"Combo: #{r.to_s}\\n\" "
    - :was_run: false
      :content: "         end"
    - :was_run: false
      :content: "         s"
    - :was_run: false
      :content: "       end        "
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     # encapsulates columns for rendering"
    - :was_run: true
      :content: "     class Columns"
    - :was_run: true
      :content: "       def initialize(col_count, flow_rect)"
    - :was_run: true
      :content: "         @column_rects = []"
    - :was_run: true
      :content: "         column_width = flow_rect.width / ( col_count * 1.0)"
    - :was_run: true
      :content: "         col_count.times do |x|"
    - :was_run: true
      :content: "           @column_rects.push Rect.create_wh(flow_rect.top, flow_rect.left + column_width *x,"
    - :was_run: true
      :content: "           column_width, flow_rect.height)"
    - :was_run: true
      :content: "         end"
    - :was_run: true
      :content: "         @next = @column_rects.first"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       def to_s"
    - :was_run: false
      :content: "         s = \"\""
    - :was_run: false
      :content: "         @column_rects.each do |c|"
    - :was_run: false
      :content: "           s += \"#{c}\\n\""
    - :was_run: false
      :content: "         end"
    - :was_run: false
      :content: "         s"
    - :was_run: false
      :content: "       end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       def next"
    - :was_run: true
      :content: "         retval = @next"
    - :was_run: true
      :content: "         @next = @column_rects[@column_rects.index(@next) + 1] if @next"
    - :was_run: true
      :content: "         retval"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       def first"
    - :was_run: false
      :content: "         @column_rects.first"
    - :was_run: false
      :content: "       end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       def last"
    - :was_run: true
      :content: "         @column_rects.last"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       def current=(r)"
    - :was_run: false
      :content: "         @next = @column_rects[@column_rects.index(r) + 1]"
    - :was_run: false
      :content: "       end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       def empty?"
    - :was_run: true
      :content: "         @column_rects.select{ |r| r.full_height? }.size == @column_rects.size"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "       "
    - :was_run: true
      :content: "       def make_wide(column, width)"
    - :was_run: true
      :content: "         return nil if column == nil # not an error case"
    - :was_run: true
      :content: "         cols = [column]"
    - :was_run: true
      :content: "         i = @column_rects.index(column) + 1"
    - :was_run: true
      :content: "         total = column.width"
    - :was_run: true
      :content: "         while (total < width && i < @column_rects.size)"
    - :was_run: true
      :content: "           new_col = @column_rects[i]"
    - :was_run: true
      :content: "           @next = @column_rects[i+1]"
    - :was_run: true
      :content: "           total += new_col.width"
    - :was_run: true
      :content: "           cols.push new_col"
    - :was_run: true
      :content: "           i += 1"
    - :was_run: true
      :content: "         end"
    - :was_run: true
      :content: "         return WideColumn.new(cols) if total >= width"
    - :was_run: false
      :content: "         nil"
    - :was_run: false
      :content: "       end      "
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     class Renderer"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       def initialize(election, precinct, config, destination)"
    - :was_run: true
      :content: "         @election = election"
    - :was_run: true
      :content: "         @precinct = precinct"
    - :was_run: true
      :content: "         @destination = destination"
    - :was_run: true
      :content: "         @c = config"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       def to_s"
    - :was_run: true
      :content: "         @pdf.render"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       def init_flow_items"
    - :was_run: true
      :content: "         @flow_items = []"
    - :was_run: true
      :content: "         @precinct.districts(@election.district_set).each do |district|"
    - :was_run: true
      :content: "           header_item = @c.create_flow_item @c.et.get(district, :display_name)"
    - :was_run: true
      :content: "           #        @flow_items.push(@c.create_flow_item(district.display_name))"
    - :was_run: true
      :content: "           contest_list = district.contestsForElection(@election)"
    - :was_run: true
      :content: "           contest_list.sort { |a,b| a.position <=> b.position}.each do |contest|"
    - :was_run: true
      :content: "             if header_item"
    - :was_run: true
      :content: "               @flow_items.push(@c.create_flow_item( [header_item, @c.create_flow_item(contest)] ))"
    - :was_run: true
      :content: "               header_item = nil"
    - :was_run: true
      :content: "             else"
    - :was_run: true
      :content: "               @flow_items.push(@c.create_flow_item(contest))"
    - :was_run: true
      :content: "             end"
    - :was_run: true
      :content: "           end"
    - :was_run: true
      :content: "           district.questionsForElection(@election).each do |question|"
    - :was_run: false
      :content: "             if header_item"
    - :was_run: false
      :content: "               @flow_items.push(@c.create_flow_item( [header_item, @c.create_flow_item(question)] ))"
    - :was_run: false
      :content: "               header_item = nil"
    - :was_run: false
      :content: "             else"
    - :was_run: false
      :content: "               @flow_items.push(@c.create_flow_item(question))"
    - :was_run: false
      :content: "             end"
    - :was_run: false
      :content: "           end"
    - :was_run: false
      :content: "         end       "
    - :was_run: false
      :content: "       end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       def render"
    - :was_run: true
      :content: "         @pdf = Prawn::Document.new("
    - :was_run: true
      :content: "         :page_layout => @c.page_layout,"
    - :was_run: true
      :content: "         :page_size => @c.page_size, "
    - :was_run: true
      :content: "         :left_margin => @c.left_margin,"
    - :was_run: true
      :content: "         :right_margin => @c.right_margin,"
    - :was_run: true
      :content: "         :top_margin => @c.top_margin,"
    - :was_run: true
      :content: "         :bottom_margin => @c.bottom_margin,"
    - :was_run: true
      :content: "         :skip_page_creation => true,"
    - :was_run: true
      :content: "         :info => { :Creator => \"TrustTheVote\","
    - :was_run: true
      :content: "           :Title => \"#{@election.display_name} #{@precinct.display_name} ballot\""
    - :was_run: true
      :content: "         }"
    - :was_run: true
      :content: "         )"
    - :was_run: true
      :content: "         @c.setup(@pdf, @precinct)"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "         init_flow_items"
    - :was_run: true
      :content: "         render_everything"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       # initializes everything outside of the flow rect on a new page"
    - :was_run: true
      :content: "       def start_page"
    - :was_run: true
      :content: "         end_page(false) if @page"
    - :was_run: true
      :content: "         @pagenum += 1"
    - :was_run: true
      :content: "         @pdf.start_new_page"
    - :was_run: true
      :content: "         "
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "         flow_rect = Rect.create_bound_box(@pdf.bounds)"
    - :was_run: true
      :content: "         @c.render_frame flow_rect"
    - :was_run: true
      :content: "         @c.render_header flow_rect"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "         columns = @c.create_columns(flow_rect)"
    - :was_run: true
      :content: "         # make space for continuation box"
    - :was_run: true
      :content: "         continuation_box = @c.create_continuation_box"
    - :was_run: true
      :content: "         columns.last.bottom += continuation_box.height(@c, columns.last, true)"
    - :was_run: true
      :content: "         @c.render_column_instructions(columns, @pagenum)"
    - :was_run: true
      :content: "         curr_column = columns.next"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "         @page = { :continuation_box => continuation_box, :columns => columns, :last_column => curr_column }"
    - :was_run: true
      :content: "         [flow_rect, columns, curr_column]"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       def end_page(last_page)"
    - :was_run: true
      :content: "         return if @page == nil"
    - :was_run: true
      :content: "         continuation_col = @page[:last_column]"
    - :was_run: true
      :content: "         return if continuation_col == nil"
    - :was_run: true
      :content: "         continuation_box = @page[:continuation_box]"
    - :was_run: true
      :content: "         columns = @page[:columns]"
    - :was_run: true
      :content: "         if (continuation_col.height < "
    - :was_run: true
      :content: "           continuation_box.height(@c, continuation_col, @flow_items.size != 0) )"
    - :was_run: false
      :content: "           if ! (continuation_col.class == WideColumn && continuation_col.index(columns.last))"
    - :was_run: false
      :content: "             continuation_col = columns.last"
    - :was_run: false
      :content: "           end"
    - :was_run: false
      :content: "         end"
    - :was_run: true
      :content: "         continuation_box.draw(@c, continuation_col, last_page)"
    - :was_run: true
      :content: "         @c.page_complete(@pagenum, last_page)"
    - :was_run: true
      :content: "         @page = nil"
    - :was_run: true
      :content: "         if last_page"
    - :was_run: true
      :content: "   #        puts @c.scanner.to_json"
    - :was_run: true
      :content: "         end"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       # tries to fit current item into any columns on the current page"
    - :was_run: true
      :content: "       # returns nil if item does not fit"
    - :was_run: true
      :content: "       #"
    - :was_run: true
      :content: "       def fit_width(item, flow_rect, curr_column, columns)"
    - :was_run: true
      :content: "         return nil if curr_column == nil"
    - :was_run: true
      :content: "         if item.min_width != 0 # if width >= narrow column"
    - :was_run: true
      :content: "           if item.min_width > curr_column.width"
    - :was_run: true
      :content: "             if curr_column.full_height?"
    - :was_run: true
      :content: "               curr_column = columns.make_wide curr_column, item.min_width # widen the current column"
    - :was_run: true
      :content: "             else"
    - :was_run: true
      :content: "               curr_column = columns.make_wide columns.next, item.min_width # "
    - :was_run: true
      :content: "             end"
    - :was_run: true
      :content: "           end"
    - :was_run: true
      :content: "         elsif curr_column.class == WideColumn # fit narrow items in wide column"
    - :was_run: false
      :content: "           if @c.wide_style == :continue"
    - :was_run: false
      :content: "             curr_column = curr_column.first"
    - :was_run: false
      :content: "             columns.current = curr_column"
    - :was_run: false
      :content: "           else"
    - :was_run: false
      :content: "             curr_column = columns.next"
    - :was_run: false
      :content: "           end"
    - :was_run: false
      :content: "         end"
    - :was_run: true
      :content: "         curr_column"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "       def render_error(text)"
    - :was_run: false
      :content: "         @pdf.fill_color \"FF0000\""
    - :was_run: false
      :content: "         @pdf.font \"Helvetica\", :size => 18, :style => :bold"
    - :was_run: false
      :content: "         @pdf.text_box text, :at => [50, @pdf.bounds.top - 100], :width    => 300, :height => 1000"
    - :was_run: false
      :content: "       end"
    - :was_run: true
      :content: "       "
    - :was_run: true
      :content: "       def render_everything"
    - :was_run: true
      :content: "         @pagenum = 0"
    - :was_run: true
      :content: "         @page =  nil"
    - :was_run: true
      :content: "         curr_column = nil   # used as a flag that we need a new page"
    - :was_run: true
      :content: "         while @flow_items.size > 0"
    - :was_run: true
      :content: "           flow_rect, columns, curr_column = start_page if curr_column == nil"
    - :was_run: true
      :content: "           item = @flow_items.first"
    - :was_run: true
      :content: "           curr_column = fit_width(item, flow_rect, curr_column, columns)"
    - :was_run: true
      :content: "           "
    - :was_run: true
      :content: "           if curr_column == nil # item too wide for current page, start a new one"
    - :was_run: true
      :content: "             if columns.empty? # too wide for empty page, that's an error"
    - :was_run: true
      :content: "               @flow_items.shift"
    - :was_run: false
      :content: "               render_error \"ERROR Item #{item.to_s} is too wide to fit onto page.\""
    - :was_run: false
      :content: "             end"
    - :was_run: true
      :content: "             next"
    - :was_run: true
      :content: "           end"
    - :was_run: true
      :content: "           "
    - :was_run: true
      :content: "           if item.fits @c, curr_column"
    - :was_run: true
      :content: "             @page[:last_column] = curr_column"
    - :was_run: true
      :content: "             item = @flow_items.shift"
    - :was_run: true
      :content: "             item.draw @c, curr_column"
    - :was_run: true
      :content: "             @c.scanner.append_ballot_marks(item.ballot_marks)"
    - :was_run: true
      :content: "           elsif curr_column.full_height? # item is taller than a single column, need to break it up"
    - :was_run: false
      :content: "             if curr_column.first != columns.first # split items go on a brand new page for now"
    - :was_run: false
      :content: "               curr_column = nil"
    - :was_run: false
      :content: "               next"
    - :was_run: false
      :content: "             else"
    - :was_run: false
      :content: "               @page[:last_column] = curr_column"
    - :was_run: false
      :content: "               @flow_items.shift"
    - :was_run: false
      :content: "               item.draw @c, curr_column do"
    - :was_run: false
      :content: "                 # returns new columns for item to draw in"
    - :was_run: false
      :content: "                 curr_column = columns.next"
    - :was_run: false
      :content: "                 curr_column = fit_width(item, flow_rect, curr_column, columns)"
    - :was_run: false
      :content: "                 if (curr_column == nil)"
    - :was_run: false
      :content: "                   flow_rect, columns, curr_column = start_page"
    - :was_run: false
      :content: "                   curr_column = fit_width(item, flow_rect, curr_column, columns)"
    - :was_run: false
      :content: "                   if (curr_column == nil) # cannot fit on a single blank page, error"
    - :was_run: false
      :content: "                     render_error \"ERROR, item #{item.to_s} too wide to fit onto page\""
    - :was_run: false
      :content: "                   end"
    - :was_run: false
      :content: "                 end"
    - :was_run: false
      :content: "                 @page[:last_column] = curr_column if curr_column"
    - :was_run: false
      :content: "                 curr_column"
    - :was_run: false
      :content: "               end # block"
    - :was_run: false
      :content: "               @c.scanner.append_ballot_marks(item.ballot_marks)"
    - :was_run: false
      :content: "             end"
    - :was_run: true
      :content: "           else"
    - :was_run: true
      :content: "             curr_column = columns.next"
    - :was_run: true
      :content: "           end"
    - :was_run: true
      :content: "         end"
    - :was_run: true
      :content: "         end_page(true)"
    - :was_run: true
      :content: "       end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     end"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "   end"
    :percent_run: 76
  app/controllers/password_resets_controller.rb: 
    :lines: 
    - :was_run: true
      :content: "   class PasswordResetsController < ApplicationController"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     before_filter :require_no_user"
    - :was_run: true
      :content: "     before_filter :load_user_using_perishable_token, :only => [:edit, :update]  "
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     def new  "
    - :was_run: false
      :content: "       render  "
    - :was_run: false
      :content: "     end  "
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def edit"
    - :was_run: false
      :content: "       render"
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "     "
    - :was_run: true
      :content: "     def update  "
    - :was_run: false
      :content: "       @user.password = params[:user][:password]  "
    - :was_run: false
      :content: "       @user.password_confirmation = params[:user][:password_confirmation]  "
    - :was_run: false
      :content: "       if @user.save  "
    - :was_run: false
      :content: "         flash[:notice] = \"Password successfully updated\"  "
    - :was_run: false
      :content: "         redirect_to root_url  "
    - :was_run: false
      :content: "       else  "
    - :was_run: false
      :content: "         render :action => :edit  "
    - :was_run: false
      :content: "       end  "
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def create  "
    - :was_run: false
      :content: "       @user = User.find_by_email(params[:email])  "
    - :was_run: false
      :content: "       if @user  "
    - :was_run: false
      :content: "         begin"
    - :was_run: false
      :content: "           @user.deliver_password_reset_instructions!  "
    - :was_run: false
      :content: "           flash[:notice] = \"Instructions to reset your password have been emailed to you. Please check your email.\""
    - :was_run: false
      :content: "         rescue => ex"
    - :was_run: false
      :content: "           flash[:error] = \"Mailer error. Reset email not sent. You need Ruby 1.8.7 or greater. #{ex.message}\""
    - :was_run: false
      :content: "         end"
    - :was_run: false
      :content: "         redirect_to root_url  "
    - :was_run: false
      :content: "       else  "
    - :was_run: false
      :content: "         flash[:notice] = \"No user was found with that email address\"  "
    - :was_run: false
      :content: "         render :action => :new  "
    - :was_run: false
      :content: "       end  "
    - :was_run: false
      :content: "     end"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "   private"
    - :was_run: true
      :content: "   "
    - :was_run: true
      :content: "     def load_user_using_perishable_token  "
    - :was_run: false
      :content: "        @user = User.find_using_perishable_token(params[:id])  "
    - :was_run: false
      :content: "        unless @user  "
    - :was_run: false
      :content: "          flash[:notice] = \"We're sorry, but we could not locate your account. \" +  "
    - :was_run: false
      :content: "          \"If you are having issues try copying and pasting the URL \" +  "
    - :was_run: false
      :content: "          \"from your email into your browser or restarting the \" +  "
    - :was_run: false
      :content: "          \"reset password process.\"  "
    - :was_run: false
      :content: "          redirect_to root_url  "
    - :was_run: false
      :content: "        end"
    - :was_run: false
      :content: "      end"
    - :was_run: false
      :content: "   "
    - :was_run: false
      :content: "   end"
    :percent_run: 30
  app/helpers/languages_helper.rb: 
    :lines: 
    - :was_run: true
      :content: "   module LanguagesHelper"
    - :was_run: true
      :content: "   end"
    :percent_run: 100
:flog: 
  :pages: 
  - :path: /app/ballots/default/ballot_config.rb
    :highest_score: 232.2
    :average_score: 27.7
    :scanned_methods: 
    - :operators: 
      - :operator: +
        :score: 30.5
      - :operator: assignment
        :score: 28.8
      - :operator: branch
        :score: 16.8
      - :operator: "-"
        :score: 14.5
      - :operator: "*"
        :score: 12.5
      - :operator: text
        :score: 11.5
      - :operator: move_down
        :score: 11.4
      - :operator: et
        :score: 9.8
      - :operator: candidates
        :score: 9.6
      - :operator: top
        :score: 8.9
      - :operator: lit_fixnum
        :score: 8.4
      - :operator: left
        :score: 8.4
      - :operator: "[]"
        :score: 7.9
      - :operator: height
        :score: 7.7
      - :operator: pdf
        :score: 7.6
      - :operator: get
        :score: 6.9
      - :operator: bounding_box
        :score: 6.8
      - :operator: width
        :score: 6.7
      - :operator: bounds
        :score: 6.3
      - :operator: font
        :score: 5.5
      - :operator: upto
        :score: 4.7
      - :operator: fill_color
        :score: 3.8
      - :operator: <
        :score: 3.7
      - :operator: frame_item
        :score: 3.4
      - :operator: count
        :score: 3.2
      - :operator: ascender
        :score: 2.7
      - :operator: party
        :score: 2.6
      - :operator: bt
        :score: 2.5
      - :operator: to_s
        :score: 2.3
      - :operator: /
        :score: 2.3
      - :operator: stroke_line
        :score: 2.1
      - :operator: stroke_checkbox
        :score: 2.1
      - :operator: dash
        :score: 2.1
      - :operator: undash
        :score: 2.1
      - :operator: ordinalize
        :score: 2.1
      - :operator: max
        :score: 1.9
      - :operator: yield
        :score: 1.9
      - :operator: short_instructions
        :score: 1.9
      - :operator: min
        :score: 1.5
      :score: 232.2
      :name: Contest#draw_ranked
    - :operators: 
      - :operator: assignment
        :score: 25.7
      - :operator: pdf
        :score: 23.2
      - :operator: branch
        :score: 14.5
      - :operator: +
        :score: 7.6
      - :operator: "-"
        :score: 7.4
      - :operator: top
        :score: 7.4
      - :operator: et
        :score: 6.9
      - :operator: get
        :score: 6.3
      - :operator: height
        :score: 5.7
      - :operator: frame_item
        :score: 5.3
      - :operator: lit_fixnum
        :score: 4.2
      - :operator: left
        :score: 4.0
      - :operator: order
        :score: 4.0
      - :operator: page_number
        :score: 3.8
      - :operator: yield
        :score: 3.8
      - :operator: <
        :score: 3.6
      - :operator: draw_checkbox
        :score: 3.4
      - :operator: add_ballot_mark
        :score: 3.4
      - :operator: open_seat_count
        :score: 3.4
      - :operator: "*"
        :score: 3.4
      - :operator: move_down
        :score: 3.4
      - :operator: text
        :score: 3.4
      - :operator: party
        :score: 2.3
      - :operator: bt
        :score: 2.1
      - :operator: right
        :score: 2.1
      - :operator: "[]"
        :score: 1.9
      - :operator: bounds
        :score: 1.9
      - :operator: short_instructions
        :score: 1.9
      - :operator: width
        :score: 1.9
      - :operator: <=>
        :score: 1.8
      - :operator: stroke_line
        :score: 1.7
      - :operator: undash
        :score: 1.7
      - :operator: dash
        :score: 1.7
      - :operator: font
        :score: 1.7
      - :operator: sort
        :score: 1.7
      - :operator: ==
        :score: 1.5
      - :operator: times
        :score: 1.5
      - :operator: candidates
        :score: 1.5
      - :operator: each
        :score: 1.5
      - :operator: bounding_box
        :score: 1.5
      :score: 148.5
      :name: Contest#draw_winner
    - :operators: 
      - :operator: "-"
        :score: 16.5
      - :operator: /
        :score: 16.0
      - :operator: top
        :score: 13.1
      - :operator: assignment
        :score: 11.4
      - :operator: left
        :score: 10.7
      - :operator: lit_fixnum
        :score: 7.6
      - :operator: move_down
        :score: 7.0
      - :operator: branch
        :score: 6.1
      - :operator: width
        :score: 6.1
      - :operator: stroke_line
        :score: 6.0
      - :operator: +
        :score: 5.3
      - :operator: right
        :score: 4.8
      - :operator: bounding_box
        :score: 4.7
      - :operator: bt
        :score: 4.3
      - :operator: "[]"
        :score: 3.9
      - :operator: bounds
        :score: 3.9
      - :operator: line_to
        :score: 3.6
      - :operator: height
        :score: 3.5
      - :operator: text
        :score: 3.5
      - :operator: line_width
        :score: 3.2
      - :operator: stroke_color
        :score: 3.2
      - :operator: move_to
        :score: 1.8
      - :operator: cap_style
        :score: 1.8
      - :operator: stroke
        :score: 1.8
      - :operator: circle_at
        :score: 1.8
      - :operator: fill_color
        :score: 1.8
      - :operator: fill_and_stroke
        :score: 1.8
      - :operator: font
        :score: 1.4
      :score: 139.6
      :name: ContinuationBox#draw
    - :operators: 
      - :operator: pdf
        :score: 24.5
      - :operator: assignment
        :score: 10.5
      - :operator: text
        :score: 5.1
      - :operator: move_down
        :score: 5.1
      - :operator: lit_fixnum
        :score: 5.0
      - :operator: et
        :score: 4.2
      - :operator: get
        :score: 3.8
      - :operator: bt
        :score: 3.8
      - :operator: "[]"
        :score: 3.4
      - :operator: font
        :score: 3.4
      - :operator: page_number
        :score: 3.4
      - :operator: top
        :score: 3.2
      - :operator: draw_checkbox
        :score: 3.0
      - :operator: add_ballot_mark
        :score: 3.0
      - :operator: short_instructions
        :score: 1.9
      - :operator: bounds
        :score: 1.9
      - :operator: "*"
        :score: 1.9
      - :operator: left
        :score: 1.9
      - :operator: width
        :score: 1.9
      - :operator: height
        :score: 1.7
      - :operator: +
        :score: 1.7
      - :operator: "-"
        :score: 1.7
      - :operator: line_width
        :score: 1.5
      - :operator: frame_item
        :score: 1.5
      - :operator: reset_ballot_marks
        :score: 1.5
      - :operator: branch
        :score: 1.5
      - :operator: bounding_box
        :score: 1.5
      :score: 92.1
      :name: Question#draw
    - :operators: 
      - :operator: bounds
        :score: 16.6
      - :operator: "-"
        :score: 8.8
      - :operator: lit_fixnum
        :score: 8.2
      - :operator: +
        :score: 7.4
      - :operator: height
        :score: 7.4
      - :operator: draw_text
        :score: 6.4
      - :operator: bt
        :score: 4.0
      - :operator: right
        :score: 4.0
      - :operator: "*"
        :score: 3.8
      - :operator: "[]"
        :score: 3.6
      - :operator: width
        :score: 3.6
      - :operator: assignment
        :score: 2.8
      - :operator: font
        :score: 1.6
      - :operator: inset
        :score: 1.6
      - :operator: stroke_rectangle
        :score: 1.6
      - :operator: bounding_box
        :score: 1.4
      - :operator: branch
        :score: 1.4
      - :operator: render_ballot_marks
        :score: 1.4
      - :operator: render_grid
        :score: 1.4
      :score: 82.8
      :name: BallotConfig#render_frame
    - :operators: 
      - :operator: bounds
        :score: 8.6
      - :operator: text
        :score: 6.8
      - :operator: et
        :score: 6.4
      - :operator: width
        :score: 6.0
      - :operator: /
        :score: 5.6
      - :operator: move_down
        :score: 5.2
      - :operator: top
        :score: 4.8
      - :operator: get
        :score: 4.0
      - :operator: height
        :score: 3.6
      - :operator: lit_fixnum
        :score: 3.5
      - :operator: left
        :score: 3.4
      - :operator: bounding_box
        :score: 3.0
      - :operator: branch
        :score: 3.0
      - :operator: "*"
        :score: 2.0
      - :operator: bt
        :score: 2.0
      - :operator: start_date
        :score: 2.0
      - :operator: "[]"
        :score: 1.8
      - :operator: strftime
        :score: 1.8
      - :operator: right
        :score: 1.6
      - :operator: "-"
        :score: 1.6
      - :operator: +
        :score: 1.6
      - :operator: stroke_color
        :score: 1.4
      - :operator: stroke_line
        :score: 1.4
      - :operator: font
        :score: 1.4
      :score: 79.5
      :name: BallotConfig#render_header
    - :operators: 
      - :operator: pdf
        :score: 12.0
      - :operator: top
        :score: 7.8
      - :operator: right
        :score: 4.8
      - :operator: left
        :score: 3.4
      - :operator: stroke_line
        :score: 2.8
      - :operator: bounds
        :score: 1.8
      - :operator: width
        :score: 1.8
      - :operator: text
        :score: 1.6
      - :operator: move_down
        :score: 1.6
      - :operator: height
        :score: 1.6
      - :operator: +
        :score: 1.6
      - :operator: "-"
        :score: 1.6
      - :operator: bounding_box
        :score: 1.4
      - :operator: branch
        :score: 1.4
      - :operator: assignment
        :score: 1.4
      - :operator: font
        :score: 1.4
      - :operator: lit_fixnum
        :score: 0.4
      :score: 45.6
      :name: FlowItem#draw
    - :operators: 
      - :operator: +
        :score: 6.2
      - :operator: assignment
        :score: 5.6
      - :operator: left
        :score: 5.6
      - :operator: top
        :score: 4.8
      - :operator: "-"
        :score: 4.8
      - :operator: "[]"
        :score: 3.6
      - :operator: bounds
        :score: 2.0
      - :operator: height
        :score: 1.8
      - :operator: width
        :score: 1.8
      - :operator: max
        :score: 1.6
      - :operator: text
        :score: 1.6
      - :operator: font
        :score: 1.6
      - :operator: stroke_checkbox
        :score: 1.4
      - :operator: bounding_box
        :score: 1.4
      - :operator: align_checkbox
        :score: 1.4
      - :operator: branch
        :score: 1.4
      - :operator: lit_fixnum
        :score: 0.9
      :score: 40.9
      :name: BallotConfig#draw_checkbox
    - :operators: 
      - :operator: top
        :score: 7.8
      - :operator: right
        :score: 4.8
      - :operator: assignment
        :score: 4.2
      - :operator: left
        :score: 3.4
      - :operator: branch
        :score: 2.8
      - :operator: stroke_line
        :score: 2.8
      - :operator: "*"
        :score: 1.8
      - :operator: width
        :score: 1.8
      - :operator: lit_fixnum
        :score: 1.8
      - :operator: text
        :score: 1.6
      - :operator: move_down
        :score: 1.6
      - :operator: +
        :score: 1.6
      - :operator: "-"
        :score: 1.6
      - :operator: next
        :score: 1.4
      - :operator: bounding_box
        :score: 1.4
      - :operator: font
        :score: 1.4
      - :operator: line_width
        :score: 1.4
      - :operator: ==
        :score: 1.4
      - :operator: bottom
        :score: 1.4
      :score: 39.3
      :name: BallotConfig#render_column_instructions
    - :operators: 
      - :operator: bt
        :score: 7.9
      - :operator: "[]"
        :score: 7.1
      - :operator: branch
        :score: 6.1
      - :operator: open_seat_count
        :score: 4.0
      - :operator: sub
        :score: 3.5
      - :operator: is_a?
        :score: 2.9
      - :operator: to_s
        :score: 1.9
      - :operator: class
        :score: 1.8
      - :operator: <
        :score: 1.7
      - :operator: voting_method_id
        :score: 1.7
      - :operator: id
        :score: 1.7
      - :operator: raise
        :score: 1.6
      - :operator: ==
        :score: 1.5
      - :operator: lit_fixnum
        :score: 0.5
      :score: 38.3
      :name: BallotConfig#short_instructions
    - :operators: 
      - :operator: bounds
        :score: 9.2
      - :operator: assignment
        :score: 5.7
      - :operator: height
        :score: 3.4
      - :operator: stroke_color
        :score: 3.0
      - :operator: branch
        :score: 2.8
      - :operator: max
        :score: 1.6
      - :operator: width
        :score: 1.6
      - :operator: top_left
        :score: 1.6
      - :operator: logger
        :score: 1.6
      - :operator: to_s
        :score: 1.6
      - :operator: dash
        :score: 1.5
      - :operator: undash
        :score: 1.4
      - :operator: stroke_rectangle
        :score: 1.4
      - :operator: ==
        :score: 1.4
      - :operator: push
        :score: 1.4
      - :operator: info
        :score: 1.4
      - :operator: shift
        :score: 1.4
      - :operator: lit_fixnum
        :score: 0.9
      :score: 35.0
      :name: BallotConfig#debug_stroke_bounds
    - :operators: 
      - :operator: pdf
        :score: 9.3
      - :operator: top
        :score: 3.2
      - :operator: bounds
        :score: 1.9
      - :operator: width
        :score: 1.9
      - :operator: left
        :score: 1.9
      - :operator: "*"
        :score: 1.9
      - :operator: text
        :score: 1.7
      - :operator: height
        :score: 1.7
      - :operator: move_down
        :score: 1.7
      - :operator: "-"
        :score: 1.7
      - :operator: +
        :score: 1.7
      - :operator: frame_item
        :score: 1.5
      - :operator: bounding_box
        :score: 1.5
      - :operator: branch
        :score: 1.5
      - :operator: assignment
        :score: 1.5
      - :operator: font
        :score: 1.5
      - :operator: lit_fixnum
        :score: 1.4
      :score: 34.6
      :name: Header#draw
    - :operators: 
      - :operator: bounds
        :score: 6.0
      - :operator: branch
        :score: 4.6
      - :operator: bt
        :score: 4.3
      - :operator: "[]"
        :score: 3.9
      - :operator: width
        :score: 3.6
      - :operator: text
        :score: 3.5
      - :operator: bounding_box
        :score: 3.2
      - :operator: move_down
        :score: 1.8
      - :operator: height
        :score: 1.8
      - :operator: font
        :score: 1.6
      - :operator: lit_fixnum
        :score: 1.0
      :score: 31.0
      :name: BallotConfig#page_complete
    - :operators: 
      - :operator: assignment
        :score: 26.6
      - :operator: branch
        :score: 2.8
      - :operator: lit_fixnum
        :score: 1.8
      - :operator: get_election_translation
        :score: 1.4
      - :operator: get_ballot_translation
        :score: 1.4
      - :operator: set_checkbox
        :score: 1.4
      :score: 27.4
      :name: BallotConfig#initialize
    - :operators: 
      - :operator: +
        :score: 5.4
      - :operator: "*"
        :score: 3.8
      - :operator: candidates
        :score: 2.4
      - :operator: count
        :score: 2.2
      - :operator: min
        :score: 2.0
      - :operator: id
        :score: 1.7
      - :operator: voting_method_id
        :score: 1.7
      - :operator: ==
        :score: 1.5
      - :operator: branch
        :score: 1.5
      - :operator: lit_fixnum
        :score: 1.1
      :score: 21.8
      :name: Contest#min_width
    - :operators: 
      - :operator: top
        :score: 6.4
      - :operator: right
        :score: 4.8
      - :operator: left
        :score: 4.8
      - :operator: stroke_line
        :score: 4.2
      - :operator: line_width
        :score: 1.4
      :score: 21.6
      :name: BallotConfig#frame_item
    - :operators: 
      - :operator: root
        :score: 10.8
      - :operator: assignment
        :score: 6.0
      - :operator: font_families
        :score: 3.6
      - :operator: update
        :score: 3.2
      - :operator: branch
        :score: 1.4
      - :operator: ==
        :score: 1.4
      :score: 20.0
      :name: BallotConfig#setup
    - :operators: 
      - :operator: branch
        :score: 5.0
      - :operator: height
        :score: 3.7
      - :operator: pdf
        :score: 3.6
      - :operator: ">"
        :score: 3.3
      - :operator: assignment
        :score: 3.3
      - :operator: draw
        :score: 1.9
      - :operator: rollback
        :score: 1.7
      - :operator: each
        :score: 1.7
      - :operator: transaction
        :score: 1.5
      - :operator: clone
        :score: 1.5
      :score: 19.8
      :name: Combo#fits
    - :operators: 
      - :operator: branch
        :score: 7.4
      - :operator: is_a?
        :score: 6.4
      - :operator: new
        :score: 6.4
      :score: 14.8
      :name: BallotConfig#create_flow_item
    - :operators: 
      - :operator: block_pass
        :score: 3.6
      - :operator: voting_method_id
        :score: 1.7
      - :operator: id
        :score: 1.7
      - :operator: draw_winner
        :score: 1.6
      - :operator: draw_ranked
        :score: 1.6
      - :operator: branch
        :score: 1.5
      - :operator: ==
        :score: 1.5
      - :operator: reset_ballot_marks
        :score: 1.5
      :score: 13.3
      :name: Contest#draw
    - :operators: 
      - :operator: pdf
        :score: 3.4
      - :operator: rollback
        :score: 1.6
      - :operator: draw
        :score: 1.6
      - :operator: height
        :score: 1.6
      - :operator: branch
        :score: 1.4
      - :operator: clone
        :score: 1.4
      - :operator: transaction
        :score: 1.4
      - :operator: ">"
        :score: 1.4
      - :operator: assignment
        :score: 1.4
      :score: 12.6
      :name: FlowItem#fits
    - :operators: 
      - :operator: top
        :score: 3.2
      - :operator: assignment
        :score: 2.8
      - :operator: draw
        :score: 1.6
      - :operator: rollback
        :score: 1.6
      - :operator: clone
        :score: 1.4
      - :operator: branch
        :score: 1.4
      - :operator: transaction
        :score: 1.4
      - :operator: "-"
        :score: 1.4
      :score: 11.1
      :name: ContinuationBox#height
    - :operators: 
      - :operator: image_path
        :score: 3.7
      - :operator: read
        :score: 3.3
      - :operator: new
        :score: 2.9
      - :operator: branch
        :score: 1.4
      :score: 10.0
      :name: BallotConfig#load_image
    - :operators: 
      - :operator: width
        :score: 1.6
      - :operator: left
        :score: 1.6
      - :operator: top
        :score: 1.6
      - :operator: height
        :score: 1.6
      - :operator: debug_stroke_bounds
        :score: 1.5
      - :operator: branch
        :score: 1.4
      - :operator: bounding_box
        :score: 1.4
      :score: 9.4
      :name: BallotConfig#debug_rect
    - :operators: 
      - :operator: fill_color
        :score: 2.8
      - :operator: rectangle
        :score: 1.4
      - :operator: stroke_color
        :score: 1.4
      - :operator: fill_and_stroke
        :score: 1.4
      - :operator: line_width
        :score: 1.4
      - :operator: assignment
        :score: 1.4
      :score: 8.5
      :name: BallotConfig#stroke_checkbox
    - :operators: 
      - :operator: assignment
        :score: 4.7
      - :operator: +
        :score: 3.4
      - :operator: to_s
        :score: 2.0
      - :operator: each
        :score: 1.5
      - :operator: branch
        :score: 1.5
      :score: 8.5
      :name: Combo#to_s
    - :operators: 
      - :operator: alias
        :score: 5.2
      - :operator: lit_fixnum
        :score: 1.6
      - :operator: attr_accessor
        :score: 1.3
      :score: 8.1
      :name: BallotConfig#none
    - :operators: 
      - :operator: block_pass
        :score: 1.8
      - :operator: assignment
        :score: 1.6
      - :operator: draw
        :score: 1.6
      - :operator: branch
        :score: 1.5
      - :operator: each
        :score: 1.5
      - :operator: reset_ballot_marks
        :score: 1.5
      :score: 6.8
      :name: Combo#draw
    - :operators: 
      - :operator: question
        :score: 1.9
      - :operator: length
        :score: 1.7
      - :operator: ">"
        :score: 1.5
      - :operator: branch
        :score: 1.5
      - :operator: lit_fixnum
        :score: 0.8
      :score: 6.1
      :name: Question#min_width
    - :operators: 
      - :operator: assignment
        :score: 3.1
      - :operator: ballot_marks
        :score: 1.8
      - :operator: concat
        :score: 1.6
      - :operator: each
        :score: 1.5
      - :operator: branch
        :score: 1.5
      :score: 6.0
      :name: Combo#ballot_marks
    - :operators: 
      - :operator: assignment
        :score: 1.8
      - :operator: min_width
        :score: 1.8
      - :operator: branch
        :score: 1.7
      - :operator: map
        :score: 1.7
      - :operator: max
        :score: 1.5
      :score: 5.6
      :name: Combo#min_width
    - :operators: 
      - :operator: assignment
        :score: 1.6
      - :operator: reset_ballot_marks
        :score: 1.6
      - :operator: branch
        :score: 1.5
      - :operator: each
        :score: 1.5
      :score: 3.8
      :name: Combo#reset_ballot_marks
    - :operators: 
      - :operator: create_ballot_mark
        :score: 1.6
      - :operator: push
        :score: 1.4
      :score: 3.0
      :name: FlowItem#add_ballot_mark
    - :operators: 
      - :operator: assignment
        :score: 2.8
      :score: 2.8
      :name: FlowItem#initialize
    - :operators: 
      - :operator: include
        :score: 2.4
      :score: 2.4
      :name: DefaultBallot#none
    - :operators: 
      - :operator: require
        :score: 2.2
      :score: 2.2
      :name: main#none
    - :operators: 
      - :operator: lit_fixnum
        :score: 1.6
      :score: 1.6
      :name: FlowItem#none
    - :operators: 
      - :operator: assignment
        :score: 1.5
      :score: 1.5
      :name: Combo#initialize
    - :operators: 
      - :operator: new
        :score: 1.4
      :score: 1.4
      :name: BallotConfig#create_continuation_box
    - :operators: 
      - :operator: new
        :score: 1.4
      :score: 1.4
      :name: BallotConfig#create_columns
    - :operators: 
      - :operator: assignment
        :score: 1.4
      :score: 1.4
      :name: BallotConfig#image_path
    - :operators: 
      - :operator: read
        :score: 1.4
      :score: 1.4
      :name: BallotConfig#load_text
    - :operators: 
      - :operator: assignment
        :score: 1.4
      :score: 1.4
      :name: ContinuationBox#initialize
    - :operators: 
      - :operator: to_s
        :score: 1.4
      :score: 1.4
      :name: FlowItem#to_s
    - :operators: 
      - :operator: branch
        :score: 1.4
      :score: 1.4
      :name: FlowItem#ballot_marks
    - :operators: 
      - :operator: assignment
        :score: 1.4
      :score: 1.4
      :name: FlowItem#reset_ballot_marks
    - :operators: 
      - :operator: lit_fixnum
        :score: 1.1
      :score: 1.1
      :name: Contest#none
    :score: 1300.2
  - :path: /app/ballots/nh/ballot_config.rb
    :highest_score: 191.9
    :average_score: 40.5
    :scanned_methods: 
    - :operators: 
      - :operator: assignment
        :score: 36.5
      - :operator: pdf
        :score: 24.5
      - :operator: col_width
        :score: 21.1
      - :operator: left
        :score: 18.9
      - :operator: +
        :score: 17.9
      - :operator: "*"
        :score: 15.7
      - :operator: branch
        :score: 11.1
      - :operator: top
        :score: 8.3
      - :operator: max
        :score: 6.2
      - :operator: push
        :score: 5.3
      - :operator: text
        :score: 5.1
      - :operator: font
        :score: 5.1
      - :operator: lit_fixnum
        :score: 4.9
      - :operator: draw_column
        :score: 4.9
      - :operator: party
        :score: 4.4
      - :operator: idToXml
        :score: 4.0
      - :operator: ==
        :score: 3.6
      - :operator: move_down
        :score: 3.4
      - :operator: bounding_box
        :score: 3.0
      - :operator: bounds
        :score: 2.1
      - :operator: bt
        :score: 2.1
      - :operator: et
        :score: 2.1
      - :operator: short_instructions
        :score: 1.9
      - :operator: "[]"
        :score: 1.9
      - :operator: height
        :score: 1.9
      - :operator: get
        :score: 1.9
      - :operator: line
        :score: 1.7
      - :operator: right
        :score: 1.7
      - :operator: width
        :score: 1.7
      - :operator: "-"
        :score: 1.7
      - :operator: draw_writein_column
        :score: 1.7
      - :operator: candidates
        :score: 1.7
      - :operator: times
        :score: 1.6
      - :operator: stroke_line
        :score: 1.5
      - :operator: clone
        :score: 1.5
      - :operator: reset_ballot_marks
        :score: 1.5
      - :operator: each
        :score: 1.5
      :score: 191.9
      :name: NHContest#draw
    - :operators: 
      - :operator: pdf
        :score: 28.2
      - :operator: assignment
        :score: 14.7
      - :operator: branch
        :score: 13.8
      - :operator: move_down
        :score: 8.0
      - :operator: ==
        :score: 6.6
      - :operator: party
        :score: 6.5
      - :operator: "[]"
        :score: 6.3
      - :operator: "-"
        :score: 6.0
      - :operator: bounding_box
        :score: 5.3
      - :operator: et
        :score: 4.8
      - :operator: get
        :score: 4.4
      - :operator: lit_fixnum
        :score: 4.4
      - :operator: width
        :score: 4.3
      - :operator: text
        :score: 4.2
      - :operator: font
        :score: 4.2
      - :operator: length
        :score: 4.0
      - :operator: idToXml
        :score: 3.6
      - :operator: sub
        :score: 2.1
      - :operator: stroke_checkbox
        :score: 2.0
      - :operator: line
        :score: 2.0
      - :operator: bounds
        :score: 1.9
      - :operator: left
        :score: 1.9
      - :operator: each_index
        :score: 1.7
      - :operator: height
        :score: 1.7
      - :operator: top
        :score: 1.7
      - :operator: +
        :score: 1.7
      :score: 119.2
      :name: NHContest#draw_column
    - :operators: 
      - :operator: bounds
        :score: 12.2
      - :operator: height
        :score: 9.4
      - :operator: lit_fixnum
        :score: 8.2
      - :operator: text
        :score: 6.4
      - :operator: bounding_box
        :score: 5.8
      - :operator: branch
        :score: 5.8
      - :operator: "[]"
        :score: 5.4
      - :operator: font
        :score: 4.8
      - :operator: ballot_translation
        :score: 4.0
      - :operator: "-"
        :score: 3.6
      - :operator: assignment
        :score: 3.4
      - :operator: image
        :score: 3.4
      - :operator: bt
        :score: 2.0
      - :operator: +
        :score: 2.0
      - :operator: move_down
        :score: 1.6
      - :operator: width
        :score: 1.6
      :score: 70.7
      :name: BallotConfig#page_complete
    - :operators: 
      - :operator: assignment
        :score: 8.5
      - :operator: fill_color
        :score: 4.8
      - :operator: top
        :score: 3.2
      - :operator: length
        :score: 3.2
      - :operator: stroke_color
        :score: 3.1
      - :operator: left
        :score: 3.0
      - :operator: branch
        :score: 2.9
      - :operator: lit_fixnum
        :score: 2.1
      - :operator: "[]"
        :score: 1.9
      - :operator: -@
        :score: 1.9
      - :operator: "-"
        :score: 1.9
      - :operator: line
        :score: 1.7
      - :operator: rectangle
        :score: 1.7
      - :operator: text_box
        :score: 1.7
      - :operator: fill_and_stroke
        :score: 1.7
      - :operator: col_loc
        :score: 1.7
      - :operator: right
        :score: 1.6
      - :operator: width
        :score: 1.6
      - :operator: bounding_box
        :score: 1.5
      - :operator: /
        :score: 1.4
      - :operator: font
        :score: 1.4
      - :operator: times
        :score: 1.4
      - :operator: stroke_line
        :score: 1.4
      :score: 44.8
      :name: BallotConfig#render_header
    - :operators: 
      - :operator: pdf
        :score: 13.9
      - :operator: move_down
        :score: 3.8
      - :operator: width
        :score: 3.8
      - :operator: assignment
        :score: 3.2
      - :operator: branch
        :score: 3.2
      - :operator: et
        :score: 2.3
      - :operator: get
        :score: 2.1
      - :operator: line
        :score: 1.9
      - :operator: text
        :score: 1.9
      - :operator: bounds
        :score: 1.9
      - :operator: open_seat_count
        :score: 1.9
      - :operator: height
        :score: 1.7
      - :operator: times
        :score: 1.7
      - :operator: left
        :score: 1.7
      - :operator: top
        :score: 1.7
      - :operator: font
        :score: 1.5
      - :operator: bounding_box
        :score: 1.5
      - :operator: lit_fixnum
        :score: 0.5
      :score: 44.1
      :name: NHContest#draw_writein_column
    - :operators: 
      - :operator: /
        :score: 6.8
      - :operator: "[]"
        :score: 3.6
      - :operator: fill_color
        :score: 2.8
      - :operator: lit_fixnum
        :score: 2.4
      - :operator: "-"
        :score: 1.6
      - :operator: +
        :score: 1.6
      - :operator: fill_and_stroke
        :score: 1.4
      - :operator: ellipse_at
        :score: 1.4
      - :operator: stroke_color
        :score: 1.4
      - :operator: assignment
        :score: 1.4
      - :operator: line_width
        :score: 1.4
      :score: 24.4
      :name: BallotConfig#stroke_checkbox
    - :operators: 
      - :operator: branch
        :score: 7.4
      - :operator: is_a?
        :score: 6.4
      - :operator: "[]"
        :score: 1.6
      - :operator: new
        :score: 1.6
      - :operator: raise
        :score: 1.5
      - :operator: lit_fixnum
        :score: 0.5
      :score: 13.7
      :name: BallotConfig#create_flow_item
    - :operators: 
      - :operator: assignment
        :score: 7.0
      - :operator: lit_fixnum
        :score: 0.4
      :score: 7.0
      :name: BallotConfig#initialize
    - :operators: 
      - :operator: require
        :score: 3.3
      :score: 3.3
      :name: main#none
    - :operators: 
      - :operator: "*"
        :score: 1.6
      - :operator: +
        :score: 1.4
      :score: 3.0
      :name: BallotConfig#col_loc
    - :operators: 
      - :operator: include
        :score: 2.4
      :score: 2.4
      :name: NhBallot#none
    - :operators: 
      - :operator: attr_accessor
        :score: 1.3
      :score: 1.3
      :name: BallotConfig#none
    - :operators: 
      - :operator: lit_fixnum
        :score: 1.0
      :score: 1.0
      :name: FlowItem#none
    :score: 526.7
  - :path: /app/ttv/yaml_import.rb
    :highest_score: 111.2
    :average_score: 27.9
    :scanned_methods: 
    - :operators: 
      - :operator: "[]"
        :score: 42.4
      - :operator: assignment
        :score: 22.2
      - :operator: branch
        :score: 18.9
      - :operator: nil?
        :score: 9.1
      - :operator: each
        :score: 6.8
      - :operator: raise
        :score: 6.1
      - :operator: pp
        :score: 6.1
      - :operator: puts
        :score: 6.1
      - :operator: length
        :score: 3.8
      - :operator: new
        :score: 2.9
      - :operator: to_s
        :score: 2.1
      - :operator: load_question
        :score: 2.0
      - :operator: parse
        :score: 1.9
      - :operator: load_contest
        :score: 1.9
      - :operator: now
        :score: 1.9
      - :operator: load_precinct
        :score: 1.9
      - :operator: create_district_set
        :score: 1.8
      - :operator: create
        :score: 1.8
      - :operator: save
        :score: 1.8
      - :operator: "-"
        :score: 1.8
      - :operator: transaction
        :score: 1.6
      - :operator: load
        :score: 1.6
      - :operator: ==
        :score: 1.4
      - :operator: lit_fixnum
        :score: 0.5
      :score: 111.2
      :name: YAMLImport#import_batch
    - :operators: 
      - :operator: "[]"
        :score: 35.1
      - :operator: assignment
        :score: 15.2
      - :operator: branch
        :score: 13.5
      - :operator: nil?
        :score: 7.6
      - :operator: puts
        :score: 5.2
      - :operator: pp
        :score: 5.2
      - :operator: raise
        :score: 5.2
      - :operator: each
        :score: 4.6
      - :operator: to_s
        :score: 1.8
      - :operator: load_question
        :score: 1.7
      - :operator: load_contest
        :score: 1.6
      - :operator: load_precinct
        :score: 1.6
      - :operator: parse
        :score: 1.6
      - :operator: now
        :score: 1.6
      - :operator: save
        :score: 1.5
      - :operator: create_district_set
        :score: 1.5
      - :operator: create
        :score: 1.5
      - :operator: transaction
        :score: 1.3
      - :operator: load
        :score: 1.3
      :score: 82.4
      :name: YAMLImport#import
    - :operators: 
      - :operator: "[]"
        :score: 12.2
      - :operator: assignment
        :score: 9.7
      - :operator: branch
        :score: 6.6
      - :operator: contests
        :score: 3.0
      - :operator: "<<"
        :score: 2.6
      - :operator: raise
        :score: 1.6
      - :operator: pp
        :score: 1.6
      - :operator: puts
        :score: 1.6
      - :operator: find
        :score: 1.5
      - :operator: load_candidate
        :score: 1.4
      - :operator: xmlToId
        :score: 1.4
      - :operator: ballot_config?
        :score: 1.4
      - :operator: save
        :score: 1.3
      - :operator: each
        :score: 1.3
      - :operator: nil?
        :score: 1.3
      - :operator: key?
        :score: 1.3
      - :operator: create
        :score: 1.3
      - :operator: lit_fixnum
        :score: 0.4
      :score: 37.1
      :name: YAMLImport#load_contest
    - :operators: 
      - :operator: "[]"
        :score: 11.8
      - :operator: branch
        :score: 4.3
      - :operator: assignment
        :score: 4.2
      - :operator: nil?
        :score: 3.2
      - :operator: questions
        :score: 3.0
      - :operator: "<<"
        :score: 2.6
      - :operator: yml_cont
        :score: 1.9
      - :operator: pp
        :score: 1.7
      - :operator: puts
        :score: 1.7
      - :operator: raise
        :score: 1.7
      - :operator: find
        :score: 1.4
      - :operator: create
        :score: 1.3
      - :operator: save
        :score: 1.3
      - :operator: ballot_config?
        :score: 1.3
      :score: 33.4
      :name: YAMLImport#load_question
    - :operators: 
      - :operator: assignment
        :score: 7.5
      - :operator: branch
        :score: 4.1
      - :operator: "[]"
        :score: 3.0
      - :operator: "<<"
        :score: 3.0
      - :operator: precincts
        :score: 1.7
      - :operator: districts
        :score: 1.7
      - :operator: yaml_prec
        :score: 1.7
      - :operator: create
        :score: 1.6
      - :operator: pp
        :score: 1.5
      - :operator: find_by_display_name
        :score: 1.5
      - :operator: raise
        :score: 1.5
      - :operator: puts
        :score: 1.5
      - :operator: each
        :score: 1.3
      - :operator: nil?
        :score: 1.3
      - :operator: lit_fixnum
        :score: 0.5
      :score: 23.4
      :name: YAMLImport#load_districts
    - :operators: 
      - :operator: assignment
        :score: 7.9
      - :operator: "[]"
        :score: 4.2
      - :operator: branch
        :score: 2.6
      - :operator: candidates
        :score: 1.5
      - :operator: new
        :score: 1.4
      - :operator: find_by_display_name
        :score: 1.3
      - :operator: "<<"
        :score: 1.3
      - :operator: create
        :score: 1.3
      - :operator: nil?
        :score: 1.3
      :score: 14.8
      :name: YAMLImport#load_candidate
    - :operators: 
      - :operator: assignment
        :score: 4.0
      - :operator: "[]"
        :score: 2.9
      - :operator: branch
        :score: 2.6
      - :operator: find
        :score: 1.8
      - :operator: precincts
        :score: 1.6
      - :operator: "<<"
        :score: 1.4
      - :operator: load_districts
        :score: 1.4
      - :operator: create
        :score: 1.4
      - :operator: key?
        :score: 1.3
      - :operator: find_by_display_name
        :score: 1.3
      :score: 13.9
      :name: YAMLImport#load_precinct
    - :operators: 
      - :operator: "[]"
        :score: 4.9
      - :operator: ==
        :score: 1.4
      - :operator: branch
        :score: 1.3
      - :operator: nil?
        :score: 1.3
      :score: 7.7
      :name: YAMLImport#ballot_config?
    - :operators: 
      - :operator: "[]"
        :score: 3.4
      - :operator: create
        :score: 1.4
      - :operator: find
        :score: 1.4
      - :operator: ballot_config?
        :score: 1.3
      - :operator: branch
        :score: 1.3
      :score: 7.6
      :name: YAMLImport#create_district_set
    - :operators: 
      - :operator: assignment
        :score: 1.3
      :score: 1.3
      :name: YAMLImport#initialize
    - :operators: 
      - :operator: attr_reader
        :score: 1.2
      :score: 1.2
      :name: YAMLImport#none
    - :operators: 
      - :operator: require
        :score: 1.1
      :score: 1.1
      :name: main#none
    :score: 335.2
  - :path: /app/controllers/contests_controller.rb
    :highest_score: 92.9
    :average_score: 28.4
    :scanned_methods: 
    - :operators: 
      - :operator: "[]"
        :score: 17.2
      - :operator: assignment
        :score: 14.4
      - :operator: branch
        :score: 10.2
      - :operator: ==
        :score: 8.2
      - :operator: position
        :score: 8.0
      - :operator: update_attributes
        :score: 7.9
      - :operator: +
        :score: 7.0
      - :operator: params
        :score: 6.8
      - :operator: "-"
        :score: 5.8
      - :operator: election
        :score: 4.6
      - :operator: id
        :score: 3.2
      - :operator: display_name
        :score: 3.2
      - :operator: index
        :score: 2.9
      - :operator: render
        :score: 2.8
      - :operator: flash
        :score: 2.8
      - :operator: lit_fixnum
        :score: 2.8
      - :operator: length
        :score: 1.8
      - :operator: each
        :score: 1.4
      - :operator: <=>
        :score: 1.3
      - :operator: sort!
        :score: 1.2
      - :operator: contests
        :score: 1.2
      - :operator: find
        :score: 1.2
      :score: 92.9
      :name: ContestsController#move
    - :operators: 
      - :operator: assignment
        :score: 9.9
      - :operator: branch
        :score: 6.1
      - :operator: length
        :score: 5.5
      - :operator: dom_id
        :score: 5.0
      - :operator: candidates
        :score: 4.6
      - :operator: replace
        :score: 4.4
      - :operator: params
        :score: 3.2
      - :operator: "[]"
        :score: 2.8
      - :operator: ==
        :score: 2.5
      - :operator: pluralize
        :score: 1.5
      - :operator: to_a
        :score: 1.4
      - :operator: request
        :score: 1.4
      - :operator: raise
        :score: 1.3
      - :operator: invalid?
        :score: 1.3
      - :operator: flash
        :score: 1.3
      - :operator: +
        :score: 1.3
      - :operator: update_attributes
        :score: 1.2
      - :operator: "-"
        :score: 1.2
      - :operator: xhr?
        :score: 1.2
      - :operator: render
        :score: 1.2
      - :operator: find_all
        :score: 1.2
      - :operator: find
        :score: 1.2
      :score: 46.2
      :name: ContestsController#update_attributes
    - :operators: 
      - :operator: branch
        :score: 6.4
      - :operator: district
        :score: 5.8
      - :operator: dom_id
        :score: 5.3
      - :operator: assignment
        :score: 5.1
      - :operator: replace
        :score: 4.7
      - :operator: +
        :score: 2.8
      - :operator: render
        :score: 2.7
      - :operator: election
        :score: 1.8
      - :operator: display_name
        :score: 1.7
      - :operator: params
        :score: 1.6
      - :operator: redirect_to
        :score: 1.4
      - :operator: request
        :score: 1.4
      - :operator: "[]"
        :score: 1.4
      - :operator: flash
        :score: 1.3
      - :operator: save
        :score: 1.2
      - :operator: xhr?
        :score: 1.2
      - :operator: new
        :score: 1.2
      :score: 36.4
      :name: ContestsController#create
    - :operators: 
      - :operator: assignment
        :score: 8.0
      - :operator: branch
        :score: 6.6
      - :operator: replace
        :score: 3.3
      - :operator: params
        :score: 3.2
      - :operator: +
        :score: 2.8
      - :operator: render
        :score: 2.8
      - :operator: dom_id
        :score: 2.8
      - :operator: "[]"
        :score: 2.8
      - :operator: contest
        :score: 1.8
      - :operator: remove
        :score: 1.7
      - :operator: display_name
        :score: 1.7
      - :operator: redirect_to
        :score: 1.4
      - :operator: request
        :score: 1.4
      - :operator: flash
        :score: 1.3
      - :operator: update_attributes
        :score: 1.2
      - :operator: xhr?
        :score: 1.2
      - :operator: find
        :score: 1.2
      :score: 32.3
      :name: ContestsController#update_contest
    - :operators: 
      - :operator: assignment
        :score: 4.1
      - :operator: district
        :score: 3.6
      - :operator: dom_id
        :score: 3.2
      - :operator: params
        :score: 3.2
      - :operator: "<<"
        :score: 3.0
      - :operator: "[]"
        :score: 2.8
      - :operator: branch
        :score: 2.5
      - :operator: insert_html
        :score: 1.5
      - :operator: request
        :score: 1.4
      - :operator: render
        :score: 1.3
      - :operator: xhr?
        :score: 1.2
      - :operator: new
        :score: 1.2
      :score: 22.9
      :name: ContestsController#new
    - :operators: 
      - :operator: assignment
        :score: 7.4
      - :operator: branch
        :score: 2.5
      - :operator: dom_id
        :score: 1.6
      - :operator: params
        :score: 1.6
      - :operator: contests_url
        :score: 1.5
      - :operator: replace
        :score: 1.4
      - :operator: request
        :score: 1.4
      - :operator: "[]"
        :score: 1.4
      - :operator: redirect_to
        :score: 1.3
      - :operator: render
        :score: 1.3
      - :operator: destroy
        :score: 1.2
      - :operator: flash
        :score: 1.2
      - :operator: find
        :score: 1.2
      - :operator: district
        :score: 1.2
      - :operator: display_name
        :score: 1.2
      - :operator: election
        :score: 1.2
      - :operator: xhr?
        :score: 1.2
      :score: 21.4
      :name: ContestsController#destroy
    - :operators: 
      - :operator: assignment
        :score: 3.6
      - :operator: params
        :score: 3.2
      - :operator: "[]"
        :score: 2.8
      - :operator: candidates
        :score: 1.4
      - :operator: find
        :score: 1.2
      - :operator: paginate
        :score: 1.2
      - :operator: current_context
        :score: 1.2
      - :operator: lit_fixnum
        :score: 0.4
      :score: 11.9
      :name: ContestsController#show
    - :operators: 
      - :operator: params
        :score: 1.6
      - :operator: request
        :score: 1.4
      - :operator: "[]"
        :score: 1.4
      - :operator: render
        :score: 1.3
      - :operator: find
        :score: 1.2
      - :operator: branch
        :score: 1.2
      - :operator: xhr?
        :score: 1.2
      - :operator: assignment
        :score: 1.2
      :score: 8.3
      :name: ContestsController#edit
    - :operators: 
      - :operator: "[]"
        :score: 2.6
      - :operator: params
        :score: 1.6
      - :operator: update_contest
        :score: 1.3
      - :operator: update_attributes
        :score: 1.3
      - :operator: branch
        :score: 1.2
      :score: 6.9
      :name: ContestsController#update
    - :operators: 
      - :operator: params
        :score: 1.6
      - :operator: "[]"
        :score: 1.4
      - :operator: paginate
        :score: 1.2
      - :operator: assignment
        :score: 1.2
      - :operator: lit_fixnum
        :score: 0.4
      :score: 4.7
      :name: ContestsController#index
    :score: 283.9
  - :path: /app/ttv/import_export.rb
    :highest_score: 90.3
    :average_score: 21.6
    :scanned_methods: 
    - :operators: 
      - :operator: assignment
        :score: 30.8
      - :operator: branch
        :score: 18.7
      - :operator: "[]"
        :score: 8.0
      - :operator: each
        :score: 7.3
      - :operator: size
        :score: 7.2
      - :operator: display_name
        :score: 6.0
      - :operator: districts
        :score: 5.9
      - :operator: attributes
        :score: 5.4
      - :operator: ==
        :score: 5.2
      - :operator: "<<"
        :score: 4.8
      - :operator: save!
        :score: 4.5
      - :operator: precincts
        :score: 3.9
      - :operator: importId
        :score: 3.5
      - :operator: id
        :score: 3.5
      - :operator: new
        :score: 3.2
      - :operator: get_elements
        :score: 3.2
      - :operator: each_value
        :score: 3.0
      - :operator: detect
        :score: 1.9
      - :operator: importPrecincts
        :score: 1.8
      - :operator: importDistrict
        :score: 1.7
      - :operator: reload
        :score: 1.4
      - :operator: find_all_by_display_name
        :score: 1.4
      :score: 90.3
      :name: Import#importDistrictSet
    - :operators: 
      - :operator: assignment
        :score: 15.6
      - :operator: "[]"
        :score: 10.2
      - :operator: get_elements
        :score: 8.8
      - :operator: branch
        :score: 7.8
      - :operator: ==
        :score: 4.9
      - :operator: new
        :score: 4.8
      - :operator: attributes
        :score: 4.6
      - :operator: length
        :score: 4.2
      - :operator: id
        :score: 2.1
      - :operator: "-"
        :score: 2.0
      - :operator: create
        :score: 1.9
      - :operator: importContests
        :score: 1.9
      - :operator: importDistrictSet
        :score: 1.9
      - :operator: importQuestions
        :score: 1.9
      - :operator: name
        :score: 1.9
      - :operator: raise
        :score: 1.8
      - :operator: class
        :score: 1.8
      - :operator: transaction
        :score: 1.7
      - :operator: root
        :score: 1.7
      - :operator: each
        :score: 1.4
      - :operator: lit_fixnum
        :score: 0.6
      :score: 62.5
      :name: Import#import_batch
    - :operators: 
      - :operator: "[]"
        :score: 11.4
      - :operator: attributes
        :score: 10.6
      - :operator: branch
        :score: 6.8
      - :operator: assignment
        :score: 6.2
      - :operator: each
        :score: 3.0
      - :operator: candidates
        :score: 1.9
      - :operator: importCandidate
        :score: 1.9
      - :operator: xmlToId
        :score: 1.8
      - :operator: get_elements
        :score: 1.8
      - :operator: id
        :score: 1.8
      - :operator: "<<"
        :score: 1.7
      - :operator: push
        :score: 1.6
      - :operator: create
        :score: 1.6
      :score: 40.2
      :name: Import#importContests
    - :operators: 
      - :operator: assignment
        :score: 9.2
      - :operator: get_elements
        :score: 7.6
      - :operator: "[]"
        :score: 7.2
      - :operator: attributes
        :score: 4.0
      - :operator: branch
        :score: 2.8
      - :operator: id
        :score: 1.8
      - :operator: importContests
        :score: 1.6
      - :operator: create
        :score: 1.6
      - :operator: importDistrictSet
        :score: 1.6
      - :operator: importQuestions
        :score: 1.6
      - :operator: name
        :score: 1.6
      - :operator: raise
        :score: 1.5
      - :operator: root
        :score: 1.4
      - :operator: transaction
        :score: 1.4
      - :operator: ==
        :score: 1.4
      - :operator: new
        :score: 1.4
      :score: 37.0
      :name: Import#import
    - :operators: 
      - :operator: assignment
        :score: 9.3
      - :operator: "[]"
        :score: 7.5
      - :operator: attributes
        :score: 4.2
      - :operator: branch
        :score: 3.0
      - :operator: id
        :score: 1.8
      - :operator: rstrip
        :score: 1.8
      - :operator: size
        :score: 1.8
      - :operator: text
        :score: 1.7
      - :operator: push
        :score: 1.6
      - :operator: lstrip
        :score: 1.6
      - :operator: ">"
        :score: 1.6
      - :operator: create
        :score: 1.6
      - :operator: get_elements
        :score: 1.6
      - :operator: each
        :score: 1.4
      :score: 29.8
      :name: Import#importQuestions
    - :operators: 
      - :operator: assignment
        :score: 12.1
      - :operator: "[]"
        :score: 9.7
      - :operator: attributes
        :score: 7.2
      - :operator: branch
        :score: 3.0
      - :operator: createPrecinct
        :score: 1.7
      - :operator: get_elements
        :score: 1.6
      - :operator: xmlToId
        :score: 1.6
      - :operator: new
        :score: 1.4
      - :operator: each
        :score: 1.4
      :score: 27.6
      :name: Import#importDistrict
    - :operators: 
      - :operator: branch
        :score: 6.6
      - :operator: assignment
        :score: 6.6
      - :operator: each
        :score: 3.6
      - :operator: questions
        :score: 2.0
      - :operator: contests
        :score: 2.0
      - :operator: exportQuestion
        :score: 1.9
      - :operator: exportContest
        :score: 1.9
      - :operator: district_set
        :score: 1.8
      - :operator: body
        :score: 1.6
      - :operator: exportDistrictSet
        :score: 1.6
      - :operator: display_name
        :score: 1.6
      - :operator: start_date
        :score: 1.6
      - :operator: target!
        :score: 1.4
      - :operator: election
        :score: 1.4
      - :operator: instruct!
        :score: 1.4
      - :operator: new
        :score: 1.4
      - :operator: lit_fixnum
        :score: 0.8
      :score: 27.6
      :name: Export#export
    - :operators: 
      - :operator: branch
        :score: 6.2
      - :operator: candidates
        :score: 5.4
      - :operator: exportCandidate
        :score: 1.8
      - :operator: assignment
        :score: 1.8
      - :operator: voting_method
        :score: 1.8
      - :operator: each
        :score: 1.7
      - :operator: size
        :score: 1.7
      - :operator: open_seat_count
        :score: 1.6
      - :operator: idToXml
        :score: 1.6
      - :operator: district_id
        :score: 1.6
      - :operator: position
        :score: 1.6
      - :operator: display_name
        :score: 1.6
      - :operator: ==
        :score: 1.5
      - :operator: contest
        :score: 1.4
      :score: 24.2
      :name: Export#exportContest
    - :operators: 
      - :operator: assignment
        :score: 7.1
      - :operator: attributes
        :score: 3.4
      - :operator: "[]"
        :score: 3.0
      - :operator: new
        :score: 2.9
      - :operator: id
        :score: 1.6
      - :operator: find_by_display_name
        :score: 1.4
      - :operator: branch
        :score: 1.4
      - :operator: nil?
        :score: 1.4
      :score: 15.5
      :name: Import#importCandidate
    - :operators: 
      - :operator: branch
        :score: 5.8
      - :operator: assignment
        :score: 3.2
      - :operator: districts
        :score: 3.1
      - :operator: precincts
        :score: 3.1
      - :operator: each
        :score: 3.0
      - :operator: exportPrecinct
        :score: 1.6
      - :operator: exportDistrict
        :score: 1.6
      - :operator: display_name
        :score: 1.6
      :score: 15.5
      :name: Export#exportDistrictSet
    - :operators: 
      - :operator: id
        :score: 3.4
      - :operator: branch
        :score: 2.9
      - :operator: district_type
        :score: 1.8
      - :operator: precincts
        :score: 1.7
      - :operator: precinct
        :score: 1.6
      - :operator: assignment
        :score: 1.6
      - :operator: idToXml
        :score: 1.6
      - :operator: display_name
        :score: 1.6
      - :operator: each
        :score: 1.5
      - :operator: district
        :score: 1.4
      :score: 15.0
      :name: Export#exportDistrict
    - :operators: 
      - :operator: question
        :score: 3.2
      - :operator: branch
        :score: 2.9
      - :operator: "<<"
        :score: 1.6
      - :operator: requesting_district_id
        :score: 1.6
      - :operator: display_name
        :score: 1.6
      - :operator: text
        :score: 1.5
      :score: 9.9
      :name: Export#exportQuestion
    - :operators: 
      - :operator: display_name
        :score: 3.2
      - :operator: party
        :score: 1.8
      - :operator: candidate
        :score: 1.4
      :score: 6.4
      :name: Export#exportCandidate
    - :operators: 
      - :operator: assignment
        :score: 4.2
      - :operator: find
        :score: 1.6
      - :operator: district_set
        :score: 1.6
      - :operator: ==
        :score: 1.4
      :score: 6.2
      :name: Export#initialize
    - :operators: 
      - :operator: assignment
        :score: 5.6
      :score: 5.6
      :name: Import#initialize
    - :operators: 
      - :operator: assignment
        :score: 2.9
      - :operator: import
        :score: 1.5
      - :operator: new
        :score: 1.5
      - :operator: raise
        :score: 1.4
      - :operator: branch
        :score: 1.3
      :score: 5.4
      :name: ImportExport#import
    - :operators: 
      - :operator: display_name
        :score: 1.6
      - :operator: id
        :score: 1.6
      - :operator: precinct
        :score: 1.4
      :score: 4.6
      :name: Export#exportPrecinct
    - :operators: 
      - :operator: assignment
        :score: 4.2
      - :operator: new
        :score: 1.4
      :score: 4.4
      :name: Import#createPrecinct
    - :operators: 
      - :operator: assignment
        :score: 1.3
      - :operator: export
        :score: 1.3
      - :operator: new
        :score: 1.3
      :score: 2.9
      :name: ImportExport#export
    - :operators: 
      - :operator: require
        :score: 1.1
      :score: 1.1
      :name: main#none
    :score: 431.7
  - :path: /app/ttv/abstract_ballot.rb
    :highest_score: 84.6
    :average_score: 11.1
    :scanned_methods: 
    - :operators: 
      - :operator: assignment
        :score: 42.3
      - :operator: branch
        :score: 20.3
      - :operator: ==
        :score: 9.6
      - :operator: fit_width
        :score: 6.2
      - :operator: shift
        :score: 5.8
      - :operator: first
        :score: 5.6
      - :operator: to_s
        :score: 4.9
      - :operator: render_error
        :score: 4.5
      - :operator: scanner
        :score: 4.2
      - :operator: ballot_marks
        :score: 4.2
      - :operator: start_page
        :score: 4.1
      - :operator: next
        :score: 4.0
      - :operator: draw
        :score: 3.8
      - :operator: append_ballot_marks
        :score: 3.8
      - :operator: empty?
        :score: 1.8
      - :operator: full_height?
        :score: 1.7
      - :operator: size
        :score: 1.7
      - :operator: fits
        :score: 1.6
      - :operator: ">"
        :score: 1.5
      - :operator: end_page
        :score: 1.4
      :score: 84.6
      :name: Renderer#render_everything
    - :operators: 
      - :operator: assignment
        :score: 19.0
      - :operator: create_flow_item
        :score: 14.4
      - :operator: branch
        :score: 9.8
      - :operator: push
        :score: 7.4
      - :operator: each
        :score: 4.6
      - :operator: position
        :score: 4.2
      - :operator: et
        :score: 2.0
      - :operator: <=>
        :score: 1.9
      - :operator: questionsForElection
        :score: 1.8
      - :operator: get
        :score: 1.8
      - :operator: sort
        :score: 1.8
      - :operator: district_set
        :score: 1.8
      - :operator: contestsForElection
        :score: 1.6
      - :operator: districts
        :score: 1.6
      :score: 49.7
      :name: Renderer#init_flow_items
    - :operators: 
      - :operator: branch
        :score: 9.0
      - :operator: assignment
        :score: 8.7
      - :operator: min_width
        :score: 7.1
      - :operator: ==
        :score: 5.9
      - :operator: next
        :score: 3.6
      - :operator: make_wide
        :score: 3.4
      - :operator: first
        :score: 1.8
      - :operator: wide_style
        :score: 1.8
      - :operator: width
        :score: 1.7
      - :operator: class
        :score: 1.7
      - :operator: full_height?
        :score: 1.6
      - :operator: ">"
        :score: 1.5
      :score: 32.6
      :name: Renderer#fit_width
    - :operators: 
      - :operator: assignment
        :score: 10.6
      - :operator: +
        :score: 6.4
      - :operator: branch
        :score: 5.7
      - :operator: <
        :score: 3.2
      - :operator: "[]"
        :score: 3.2
      - :operator: width
        :score: 3.2
      - :operator: size
        :score: 1.8
      - :operator: push
        :score: 1.6
      - :operator: index
        :score: 1.6
      - :operator: new
        :score: 1.5
      - :operator: ">="
        :score: 1.4
      - :operator: ==
        :score: 1.4
      - :operator: lit_fixnum
        :score: 1.4
      :score: 29.2
      :name: Columns#make_wide
    - :operators: 
      - :operator: branch
        :score: 8.6
      - :operator: assignment
        :score: 7.2
      - :operator: ==
        :score: 6.2
      - :operator: "[]"
        :score: 4.2
      - :operator: last
        :score: 3.4
      - :operator: height
        :score: 3.2
      - :operator: size
        :score: 2.0
      - :operator: class
        :score: 1.8
      - :operator: index
        :score: 1.6
      - :operator: page_complete
        :score: 1.4
      - :operator: draw
        :score: 1.4
      - :operator: <
        :score: 1.4
      :score: 28.9
      :name: Renderer#end_page
    - :operators: 
      - :operator: assignment
        :score: 6.8
      - :operator: translation_path
        :score: 4.6
      - :operator: branch
        :score: 3.9
      - :operator: new
        :score: 2.8
      - :operator: district_set
        :score: 1.7
      - :operator: render
        :score: 1.5
      - :operator: state_seal
        :score: 1.5
      - :operator: et
        :score: 1.5
      - :operator: precincts
        :score: 1.5
      - :operator: instruction_text
        :score: 1.5
      - :operator: state_signature
        :score: 1.5
      - :operator: exists?
        :score: 1.4
      - :operator: get_ballot_config
        :score: 1.3
      - :operator: translate_file
        :score: 1.3
      - :operator: save
        :score: 1.3
      - :operator: each
        :score: 1.3
      :score: 25.9
      :name: AbstractBallot#translate
    - :operators: 
      - :operator: assignment
        :score: 8.4
      - :operator: last
        :score: 3.0
      - :operator: bounds
        :score: 1.6
      - :operator: end_page
        :score: 1.5
      - :operator: create_continuation_box
        :score: 1.4
      - :operator: branch
        :score: 1.4
      - :operator: next
        :score: 1.4
      - :operator: height
        :score: 1.4
      - :operator: start_new_page
        :score: 1.4
      - :operator: +
        :score: 1.4
      - :operator: render_header
        :score: 1.4
      - :operator: create_bound_box
        :score: 1.4
      - :operator: render_column_instructions
        :score: 1.4
      - :operator: create_columns
        :score: 1.4
      - :operator: render_frame
        :score: 1.4
      - :operator: lit_fixnum
        :score: 0.4
      :score: 22.2
      :name: Renderer#start_page
    - :operators: 
      - :operator: assignment
        :score: 5.7
      - :operator: "*"
        :score: 3.7
      - :operator: left
        :score: 2.1
      - :operator: top
        :score: 1.9
      - :operator: height
        :score: 1.9
      - :operator: +
        :score: 1.9
      - :operator: create_wh
        :score: 1.7
      - :operator: width
        :score: 1.6
      - :operator: push
        :score: 1.5
      - :operator: first
        :score: 1.4
      - :operator: times
        :score: 1.4
      - :operator: /
        :score: 1.4
      - :operator: branch
        :score: 1.4
      :score: 21.3
      :name: Columns#initialize
    - :operators: 
      - :operator: display_name
        :score: 3.2
      - :operator: top_margin
        :score: 1.6
      - :operator: left_margin
        :score: 1.6
      - :operator: bottom_margin
        :score: 1.6
      - :operator: page_size
        :score: 1.6
      - :operator: page_layout
        :score: 1.6
      - :operator: right_margin
        :score: 1.6
      - :operator: render_everything
        :score: 1.4
      - :operator: init_flow_items
        :score: 1.4
      - :operator: setup
        :score: 1.4
      - :operator: new
        :score: 1.4
      - :operator: assignment
        :score: 1.4
      :score: 18.5
      :name: Renderer#render
    - :operators: 
      - :operator: assignment
        :score: 11.7
      - :operator: new
        :score: 2.6
      - :operator: human_language
        :score: 1.6
      - :operator: et
        :score: 1.5
      - :operator: raise
        :score: 1.4
      - :operator: get_ballot_config
        :score: 1.3
      - :operator: render
        :score: 1.3
      - :operator: dirty?
        :score: 1.3
      - :operator: to_s
        :score: 1.3
      - :operator: branch
        :score: 1.3
      :score: 17.0
      :name: AbstractBallot#create
    - :operators: 
      - :operator: assignment
        :score: 4.4
      - :operator: to_s
        :score: 1.7
      - :operator: +
        :score: 1.5
      - :operator: bottom
        :score: 1.4
      - :operator: each
        :score: 1.4
      - :operator: branch
        :score: 1.4
      - :operator: height
        :score: 1.4
      - :operator: left
        :score: 1.4
      - :operator: top
        :score: 1.4
      - :operator: width
        :score: 1.4
      - :operator: right
        :score: 1.4
      :score: 13.8
      :name: WideColumn#to_s
    - :operators: 
      - :operator: lit_fixnum
        :score: 2.1
      - :operator: bounds
        :score: 2.0
      - :operator: top
        :score: 1.8
      - :operator: "-"
        :score: 1.6
      - :operator: text_box
        :score: 1.4
      - :operator: font
        :score: 1.4
      - :operator: fill_color
        :score: 1.4
      :score: 11.7
      :name: Renderer#render_error
    - :operators: 
      - :operator: size
        :score: 3.2
      - :operator: full_height?
        :score: 1.9
      - :operator: assignment
        :score: 1.9
      - :operator: select
        :score: 1.8
      - :operator: branch
        :score: 1.8
      - :operator: ==
        :score: 1.4
      :score: 8.7
      :name: Columns#empty?
    - :operators: 
      - :operator: assignment
        :score: 8.4
      :score: 8.4
      :name: Rect#initialize
    - :operators: 
      - :operator: assignment
        :score: 5.6
      - :operator: +
        :score: 2.8
      - :operator: "-"
        :score: 2.8
      :score: 7.9
      :name: Rect#inset
    - :operators: 
      - :operator: right
        :score: 1.6
      - :operator: bottom
        :score: 1.6
      - :operator: top
        :score: 1.6
      - :operator: left
        :score: 1.6
      - :operator: create
        :score: 1.4
      :score: 7.8
      :name: Rect#create_bound_box
    - :operators: 
      - :operator: assignment
        :score: 2.9
      - :operator: index
        :score: 1.9
      - :operator: +
        :score: 1.7
      - :operator: "[]"
        :score: 1.5
      - :operator: branch
        :score: 1.4
      - :operator: lit_fixnum
        :score: 0.5
      :score: 6.4
      :name: Columns#next
    - :operators: 
      - :operator: assignment
        :score: 5.6
      :score: 5.6
      :name: Renderer#initialize
    - :operators: 
      - :operator: assignment
        :score: 4.4
      - :operator: +
        :score: 1.5
      - :operator: branch
        :score: 1.4
      - :operator: each
        :score: 1.4
      :score: 5.5
      :name: Columns#to_s
    - :operators: 
      - :operator: index
        :score: 1.8
      - :operator: +
        :score: 1.6
      - :operator: assignment
        :score: 1.4
      - :operator: "[]"
        :score: 1.4
      - :operator: lit_fixnum
        :score: 0.5
      :score: 5.4
      :name: Columns#current=
    - :operators: 
      - :operator: assignment
        :score: 1.7
      - :operator: bottom
        :score: 1.7
      - :operator: branch
        :score: 1.6
      - :operator: map
        :score: 1.6
      - :operator: max
        :score: 1.4
      :score: 5.2
      :name: WideColumn#bottom
    - :operators: 
      - :operator: assignment
        :score: 1.7
      - :operator: right
        :score: 1.7
      - :operator: branch
        :score: 1.6
      - :operator: map
        :score: 1.6
      - :operator: max
        :score: 1.4
      :score: 5.2
      :name: WideColumn#right
    - :operators: 
      - :operator: assignment
        :score: 1.7
      - :operator: left
        :score: 1.7
      - :operator: branch
        :score: 1.6
      - :operator: map
        :score: 1.6
      - :operator: min
        :score: 1.4
      :score: 5.2
      :name: WideColumn#left
    - :operators: 
      - :operator: assignment
        :score: 1.7
      - :operator: top
        :score: 1.7
      - :operator: branch
        :score: 1.6
      - :operator: map
        :score: 1.6
      - :operator: min
        :score: 1.4
      :score: 5.2
      :name: WideColumn#top
    - :operators: 
      - :operator: +
        :score: 1.6
      - :operator: "-"
        :score: 1.6
      - :operator: new
        :score: 1.4
      :score: 4.6
      :name: Rect#create_wh
    - :operators: 
      - :operator: bottom
        :score: 1.6
      - :operator: top
        :score: 1.6
      - :operator: "-"
        :score: 1.4
      :score: 4.6
      :name: WideColumn#height
    - :operators: 
      - :operator: right
        :score: 1.6
      - :operator: left
        :score: 1.6
      - :operator: "-"
        :score: 1.4
      :score: 4.6
      :name: WideColumn#width
    - :operators: 
      - :operator: bottom
        :score: 1.6
      - :operator: top
        :score: 1.6
      - :operator: "-"
        :score: 1.4
      :score: 4.6
      :name: Rect#height
    - :operators: 
      - :operator: right
        :score: 1.6
      - :operator: left
        :score: 1.6
      - :operator: "-"
        :score: 1.4
      :score: 4.6
      :name: Rect#width
    - :operators: 
      - :operator: width
        :score: 1.4
      - :operator: full_height?
        :score: 1.4
      - :operator: branch
        :score: 1.4
      - :operator: height
        :score: 1.4
      :score: 4.4
      :name: Rect#to_s
    - :operators: 
      - :operator: assignment
        :score: 2.9
      - :operator: clone
        :score: 1.5
      - :operator: branch
        :score: 1.4
      - :operator: map
        :score: 1.4
      :score: 4.3
      :name: WideColumn#initialize_copy
    - :operators: 
      - :operator: assignment
        :score: 3.0
      - :operator: branch
        :score: 1.4
      - :operator: each
        :score: 1.4
      :score: 3.6
      :name: WideColumn#top=
    - :operators: 
      - :operator: assignment
        :score: 3.0
      - :operator: branch
        :score: 1.4
      - :operator: each
        :score: 1.4
      :score: 3.6
      :name: WideColumn#bottom=
    - :operators: 
      - :operator: assignment
        :score: 2.8
      - :operator: top
        :score: 1.4
      :score: 3.1
      :name: WideColumn#initialize
    - :operators: 
      - :operator: top
        :score: 1.6
      - :operator: ==
        :score: 1.4
      :score: 3.0
      :name: WideColumn#full_height?
    - :operators: 
      - :operator: render
        :score: 1.4
      :score: 1.4
      :name: Renderer#to_s
    - :operators: 
      - :operator: last
        :score: 1.4
      :score: 1.4
      :name: Columns#last
    - :operators: 
      - :operator: first
        :score: 1.4
      :score: 1.4
      :name: Columns#first
    - :operators: 
      - :operator: ==
        :score: 1.4
      :score: 1.4
      :name: Rect#full_height?
    - :operators: 
      - :operator: new
        :score: 1.4
      :score: 1.4
      :name: Rect#create
    - :operators: 
      - :operator: first
        :score: 1.4
      :score: 1.4
      :name: WideColumn#first
    - :operators: 
      - :operator: index
        :score: 1.4
      :score: 1.4
      :name: WideColumn#index
    - :operators: 
      - :operator: attr_accessor
        :score: 1.3
      :score: 1.3
      :name: Rect#none
    - :operators: 
      - :operator: require
        :score: 1.1
      :score: 1.1
      :name: main#none
    :score: 489.4
  - :path: /app/helpers/application_helper.rb
    :highest_score: 58.4
    :average_score: 20.6
    :scanned_methods: 
    - :operators: 
      - :operator: content_tag
        :score: 13.7
      - :operator: branch
        :score: 13.0
      - :operator: +
        :score: 11.4
      - :operator: link_to
        :score: 9.9
      - :operator: current_user
        :score: 6.2
      - :operator: change_jurisdictions_path
        :score: 2.7
      - :operator: email
        :score: 2.2
      - :operator: edit_user_path
        :score: 2.2
      - :operator: login_path
        :score: 2.0
      - :operator: register_user_path
        :score: 2.0
      - :operator: logout_path
        :score: 2.0
      - :operator: current_context
        :score: 1.4
      - :operator: assignment
        :score: 1.2
      - :operator: jurisdiction_name
        :score: 1.2
      :score: 58.4
      :name: ApplicationHelper#user_navigation_helper
    - :operators: 
      - :operator: assignment
        :score: 15.5
      - :operator: +
        :score: 13.3
      - :operator: branch
        :score: 9.9
      - :operator: display_name
        :score: 7.5
      - :operator: link_to
        :score: 6.5
      - :operator: jurisdiction
        :score: 3.4
      - :operator: election
        :score: 3.2
      - :operator: precinct
        :score: 3.2
      - :operator: question
        :score: 3.2
      - :operator: contest
        :score: 3.2
      - :operator: ==
        :score: 2.5
      - :operator: set_jurisdiction_path
        :score: 1.5
      - :operator: content_tag
        :score: 1.2
      - :operator: precinct?
        :score: 1.2
      - :operator: jurisdiction?
        :score: 1.2
      - :operator: contest?
        :score: 1.2
      - :operator: question?
        :score: 1.2
      - :operator: election?
        :score: 1.2
      :score: 57.7
      :name: ApplicationHelper#breadcrumb_helper
    - :operators: 
      - :operator: find
        :score: 3.6
      - :operator: image_tag
        :score: 3.0
      - :operator: link_to
        :score: 2.6
      - :operator: branch
        :score: 2.4
      - :operator: icon
        :score: 1.9
      - :operator: url
        :score: 1.7
      - :operator: current_context
        :score: 1.4
      - :operator: nil?
        :score: 1.3
      - :operator: icon?
        :score: 1.3
      - :operator: jurisdiction
        :score: 1.2
      - :operator: assignment
        :score: 1.2
      :score: 18.2
      :name: ApplicationHelper#icon_helper
    - :operators: 
      - :operator: +
        :score: 5.1
      - :operator: current_context
        :score: 4.3
      - :operator: content_tag
        :score: 2.6
      - :operator: assignment
        :score: 2.4
      - :operator: branch
        :score: 2.4
      - :operator: jurisdiction?
        :score: 1.3
      - :operator: current_user
        :score: 1.3
      - :operator: jurisdiction_name
        :score: 1.2
      - :operator: jurisdiction_secondary_name
        :score: 1.2
      :score: 17.3
      :name: ApplicationHelper#header_helper
    - :operators: 
      - :operator: image_tag
        :score: 2.6
      - :operator: branch
        :score: 2.4
      - :operator: icon?
        :score: 2.4
      - :operator: icon
        :score: 1.7
      - :operator: url
        :score: 1.5
      :score: 8.5
      :name: ApplicationHelper#icon_for
    - :operators: 
      - :operator: assignment
        :score: 3.7
      - :operator: image_tag
        :score: 1.4
      - :operator: merge
        :score: 1.4
      - :operator: t
        :score: 1.3
      - :operator: branch
        :score: 1.2
      - :operator: link_to
        :score: 1.2
      - :operator: ==
        :score: 1.2
      :score: 7.6
      :name: ApplicationHelper#button_link_helper
    - :operators: 
      - :operator: assignment
        :score: 3.6
      - :operator: errors
        :score: 1.4
      - :operator: render
        :score: 1.3
      - :operator: full_messages
        :score: 1.2
      - :operator: branch
        :score: 1.2
      - :operator: empty?
        :score: 1.2
      - :operator: merge
        :score: 1.2
      :score: 7.4
      :name: ApplicationHelper#render_error_messages
    - :operators: 
      - :operator: +
        :score: 2.6
      - :operator: pretty_inspect
        :score: 1.8
      - :operator: h
        :score: 1.6
      :score: 6.0
      :name: ApplicationHelper#pp_debug
    - :operators: 
      - :operator: set_jurisdiction_path
        :score: 1.4
      - :operator: icon_for
        :score: 1.4
      - :operator: link_to
        :score: 1.2
      :score: 4.0
      :name: ApplicationHelper#link_icon_for
    :score: 185.1
  - :path: /app/controllers/maintain_controller.rb
    :highest_score: 58.1
    :average_score: 39.6
    :scanned_methods: 
    - :operators: 
      - :operator: assignment
        :score: 13.8
      - :operator: "[]"
        :score: 10.5
      - :operator: params
        :score: 7.8
      - :operator: +
        :score: 5.0
      - :operator: flash
        :score: 4.6
      - :operator: display_name
        :score: 4.3
      - :operator: gsub
        :score: 3.9
      - :operator: dump
        :score: 3.4
      - :operator: send_data
        :score: 3.1
      - :operator: find
        :score: 3.1
      - :operator: ==
        :score: 2.7
      - :operator: branch
        :score: 2.7
      - :operator: audit_header_dummy
        :score: 1.9
      - :operator: export
        :score: 1.6
      - :operator: do_export
        :score: 1.5
      - :operator: new
        :score: 1.5
      - :operator: election_hash
        :score: 1.5
      :score: 58.1
      :name: MaintainController#export_file
    - :operators: 
      - :operator: assignment
        :score: 14.5
      - :operator: params
        :score: 10.3
      - :operator: "[]"
        :score: 9.3
      - :operator: redirect_to
        :score: 6.1
      - :operator: branch
        :score: 5.9
      - :operator: elections_url
        :score: 5.0
      - :operator: flash
        :score: 4.7
      - :operator: ==
        :score: 4.6
      - :operator: new
        :score: 3.5
      - :operator: import_batch
        :score: 3.5
      - :operator: length
        :score: 1.7
      - :operator: message
        :score: 1.5
      :score: 52.6
      :name: MaintainController#import_batch
    - :operators: 
      - :operator: assignment
        :score: 12.7
      - :operator: params
        :score: 10.0
      - :operator: "[]"
        :score: 9.0
      - :operator: redirect_to
        :score: 6.1
      - :operator: branch
        :score: 5.9
      - :operator: flash
        :score: 4.7
      - :operator: import
        :score: 3.4
      - :operator: elections_url
        :score: 3.3
      - :operator: ==
        :score: 3.1
      - :operator: new
        :score: 1.8
      - :operator: message
        :score: 1.5
      - :operator: nil?
        :score: 1.5
      :score: 46.6
      :name: MaintainController#import_file
    - :operators: 
      - :operator: require
        :score: 1.1
      :score: 1.1
      :name: main#none
    :score: 158.4
  - :path: /app/ttv/scanner.rb
    :highest_score: 53.5
    :average_score: 14.3
    :scanned_methods: 
    - :operators: 
      - :operator: +
        :score: 10.9
      - :operator: assignment
        :score: 10.4
      - :operator: bounds
        :score: 8.9
      - :operator: ceil
        :score: 6.3
      - :operator: "-"
        :score: 5.8
      - :operator: absolute_top
        :score: 5.1
      - :operator: "[]"
        :score: 3.6
      - :operator: "*"
        :score: 3.2
      - :operator: /
        :score: 2.6
      - :operator: top
        :score: 1.5
      - :operator: floor
        :score: 1.4
      - :operator: branch
        :score: 1.3
      - :operator: absolute_left
        :score: 1.3
      - :operator: ==
        :score: 1.3
      - :operator: lit_fixnum
        :score: 0.5
      :score: 53.5
      :name: Scanner#align_checkbox
    - :operators: 
      - :operator: assignment
        :score: 12.9
      - :operator: bounds
        :score: 11.4
      - :operator: +
        :score: 8.0
      - :operator: "-"
        :score: 5.6
      - :operator: branch
        :score: 4.4
      - :operator: top
        :score: 4.1
      - :operator: "*"
        :score: 3.8
      - :operator: /
        :score: 3.4
      - :operator: times
        :score: 3.1
      - :operator: floor
        :score: 3.0
      - :operator: left
        :score: 2.1
      - :operator: bottom
        :score: 2.1
      - :operator: right
        :score: 2.1
      - :operator: fill
        :score: 1.5
      - :operator: canvas
        :score: 1.3
      :score: 53.3
      :name: Scanner#render_grid
    - :operators: 
      - :operator: bounds
        :score: 7.2
      - :operator: rectangle
        :score: 5.2
      - :operator: right
        :score: 3.4
      - :operator: "-"
        :score: 3.0
      - :operator: top
        :score: 1.5
      - :operator: top_left
        :score: 1.5
      - :operator: fill_and_stroke
        :score: 1.3
      - :operator: assignment
        :score: 1.3
      :score: 23.1
      :name: Scanner#render_ballot_marks
    - :operators: 
      - :operator: assignment
        :score: 6.5
      - :operator: /
        :score: 2.6
      - :operator: lit_fixnum
        :score: 2.2
      :score: 8.1
      :name: Scanner#initialize
    - :operators: 
      - :operator: id
        :score: 2.7
      - :operator: branch
        :score: 1.3
      - :operator: assignment
        :score: 1.3
      - :operator: instance_of?
        :score: 1.3
      - :operator: to_json
        :score: 1.3
      :score: 5.6
      :name: BallotMark#to_json
    - :operators: 
      - :operator: assignment
        :score: 5.2
      :score: 5.2
      :name: BallotMark#initialize
    - :operators: 
      - :operator: assignment
        :score: 3.9
      :score: 3.9
      :name: Scanner#set_checkbox
    - :operators: 
      - :operator: concat
        :score: 1.3
      :score: 1.3
      :name: Scanner#append_ballot_marks
    - :operators: 
      - :operator: to_json
        :score: 1.3
      :score: 1.3
      :name: Scanner#to_json
    - :operators: 
      - :operator: new
        :score: 1.3
      :score: 1.3
      :name: Scanner#create_ballot_mark
    - :operators: 
      - :operator: attr_accessor
        :score: 1.2
      :score: 1.2
      :name: Scanner#none
    :score: 157.7
  - :path: /app/controllers/precincts_controller.rb
    :highest_score: 52.1
    :average_score: 14.2
    :scanned_methods: 
    - :operators: 
      - :operator: assignment
        :score: 12.6
      - :operator: "[]"
        :score: 10.9
      - :operator: branch
        :score: 6.3
      - :operator: flash
        :score: 5.2
      - :operator: redirect_to
        :score: 5.2
      - :operator: ==
        :score: 4.8
      - :operator: find
        :score: 4.1
      - :operator: election_path
        :score: 3.9
      - :operator: params
        :score: 3.4
      - :operator: ballot_style_template_id
        :score: 3.2
      - :operator: render
        :score: 1.9
      - :operator: precincts_election_path
        :score: 1.9
      - :operator: send_data
        :score: 1.8
      - :operator: message
        :score: 1.7
      - :operator: render_ballot
        :score: 1.7
      - :operator: lit_fixnum
        :score: 0.5
      :score: 52.1
      :name: PrecinctsController#ballot
    - :operators: 
      - :operator: assignment
        :score: 12.3
      - :operator: flash
        :score: 3.2
      - :operator: redirect_to
        :score: 3.2
      - :operator: ballot_style_template_id
        :score: 3.2
      - :operator: find
        :score: 2.8
      - :operator: branch
        :score: 2.8
      - :operator: precincts_election_path
        :score: 1.9
      - :operator: now
        :score: 1.9
      - :operator: render_ballots
        :score: 1.7
      - :operator: send_file
        :score: 1.7
      - :operator: message
        :score: 1.7
      - :operator: zip_ballots
        :score: 1.7
      - :operator: election_path
        :score: 1.7
      - :operator: params
        :score: 1.7
      - :operator: "[]"
        :score: 1.5
      - :operator: district_set
        :score: 1.5
      - :operator: ==
        :score: 1.3
      - :operator: precincts
        :score: 1.3
      :score: 34.4
      :name: PrecinctsController#ballots
    - :operators: 
      - :operator: params
        :score: 3.4
      - :operator: "[]"
        :score: 3.0
      - :operator: assignment
        :score: 2.8
      - :operator: flash
        :score: 1.5
      - :operator: redirect_to
        :score: 1.5
      - :operator: render
        :score: 1.4
      - :operator: branch
        :score: 1.3
      - :operator: find
        :score: 1.3
      - :operator: update_attributes
        :score: 1.3
      :score: 13.8
      :name: PrecinctsController#update
    - :operators: 
      - :operator: assignment
        :score: 5.8
      - :operator: branch
        :score: 4.2
      - :operator: "[]"
        :score: 3.5
      - :operator: puts
        :score: 1.6
      - :operator: get_output_stream
        :score: 1.5
      - :operator: each
        :score: 1.4
      - :operator: now
        :score: 1.3
      - :operator: open
        :score: 1.3
      :score: 12.8
      :name: PrecinctsController#zip_ballots
    - :operators: 
      - :operator: assignment
        :score: 2.8
      - :operator: params
        :score: 1.7
      - :operator: flash
        :score: 1.5
      - :operator: redirect_to
        :score: 1.5
      - :operator: "[]"
        :score: 1.5
      - :operator: render
        :score: 1.4
      - :operator: branch
        :score: 1.3
      - :operator: save
        :score: 1.3
      - :operator: new
        :score: 1.3
      :score: 10.7
      :name: PrecinctsController#create
    - :operators: 
      - :operator: params
        :score: 1.7
      - :operator: "[]"
        :score: 1.5
      - :operator: precincts_url
        :score: 1.5
      - :operator: redirect_to
        :score: 1.3
      - :operator: find
        :score: 1.3
      - :operator: destroy
        :score: 1.3
      - :operator: assignment
        :score: 1.3
      :score: 8.7
      :name: PrecinctsController#destroy
    - :operators: 
      - :operator: params
        :score: 1.7
      - :operator: current_context
        :score: 1.5
      - :operator: "[]"
        :score: 1.5
      - :operator: assignment
        :score: 1.3
      - :operator: reset
        :score: 1.3
      - :operator: paginate
        :score: 1.3
      - :operator: lit_fixnum
        :score: 0.4
      :score: 7.8
      :name: PrecinctsController#index
    - :operators: 
      - :operator: assignment
        :score: 2.6
      - :operator: params
        :score: 1.7
      - :operator: "[]"
        :score: 1.5
      - :operator: find
        :score: 1.3
      - :operator: current_context
        :score: 1.3
      :score: 6.4
      :name: PrecinctsController#show
    - :operators: 
      - :operator: params
        :score: 1.7
      - :operator: "[]"
        :score: 1.5
      - :operator: find
        :score: 1.3
      - :operator: assignment
        :score: 1.3
      :score: 4.7
      :name: PrecinctsController#edit
    - :operators: 
      - :operator: require
        :score: 3.3
      :score: 3.3
      :name: main#none
    - :operators: 
      - :operator: assignment
        :score: 1.3
      - :operator: new
        :score: 1.3
      :score: 1.8
      :name: PrecinctsController#new
    :score: 156.4
  - :path: /app/models/election.rb
    :highest_score: 47.3
    :average_score: 14.4
    :scanned_methods: 
    - :operators: 
      - :operator: assignment
        :score: 21.4
      - :operator: branch
        :score: 12.7
      - :operator: display_name
        :score: 11.0
      - :operator: each
        :score: 4.5
      - :operator: party
        :score: 4.4
      - :operator: district
        :score: 3.8
      - :operator: candidates
        :score: 3.6
      - :operator: ==
        :score: 3.3
      - :operator: contests
        :score: 3.2
      - :operator: find_all_by_display_name
        :score: 1.7
      - :operator: empty?
        :score: 1.7
      - :operator: find_by_display_name
        :score: 1.5
      - :operator: nil?
        :score: 1.5
      :score: 47.3
      :name: Election#equal_contests?
    - :operators: 
      - :operator: assignment
        :score: 13.7
      - :operator: find
        :score: 3.0
      - :operator: display_name
        :score: 2.1
      - :operator: gsub
        :score: 1.9
      - :operator: camelize
        :score: 1.7
      - :operator: ballot_style
        :score: 1.7
      - :operator: default_language
        :score: 1.7
      - :operator: "<<"
        :score: 1.5
      - :operator: create
        :score: 1.5
      - :operator: +
        :score: 1.5
      - :operator: state_signature_image
        :score: 1.3
      - :operator: branch
        :score: 1.3
      - :operator: instruction_text
        :score: 1.3
      - :operator: code
        :score: 1.3
      - :operator: ballot_style_code
        :score: 1.3
      - :operator: state_graphic
        :score: 1.3
      - :operator: new
        :score: 1.3
      - :operator: each
        :score: 1.3
      :score: 29.2
      :name: Election#render_ballots
    - :operators: 
      - :operator: assignment
        :score: 12.5
      - :operator: branch
        :score: 7.5
      - :operator: display_name
        :score: 3.6
      - :operator: precincts
        :score: 3.6
      - :operator: district_type
        :score: 3.4
      - :operator: find_by_display_name
        :score: 3.2
      - :operator: districts
        :score: 3.2
      - :operator: each
        :score: 2.8
      - :operator: nil?
        :score: 1.7
      - :operator: ==
        :score: 1.5
      :score: 27.2
      :name: Election#equal_districts?
    - :operators: 
      - :operator: assignment
        :score: 13.5
      - :operator: find
        :score: 3.0
      - :operator: display_name
        :score: 1.9
      - :operator: gsub
        :score: 1.7
      - :operator: ballot_style
        :score: 1.7
      - :operator: default_language
        :score: 1.7
      - :operator: create
        :score: 1.5
      - :operator: camelize
        :score: 1.5
      - :operator: ==
        :score: 1.3
      - :operator: branch
        :score: 1.3
      - :operator: +
        :score: 1.3
      - :operator: medium_id
        :score: 1.3
      - :operator: ballot_style_code
        :score: 1.3
      - :operator: code
        :score: 1.3
      - :operator: state_signature_image
        :score: 1.3
      - :operator: state_graphic
        :score: 1.3
      - :operator: instruction_text
        :score: 1.3
      :score: 27.0
      :name: Election#render_ballot
    - :operators: 
      - :operator: assignment
        :score: 9.0
      - :operator: branch
        :score: 5.8
      - :operator: display_name
        :score: 5.1
      - :operator: district
        :score: 3.8
      - :operator: question
        :score: 3.4
      - :operator: questions
        :score: 3.2
      - :operator: ==
        :score: 3.0
      - :operator: find_by_display_name
        :score: 1.5
      - :operator: nil?
        :score: 1.5
      - :operator: each
        :score: 1.3
      :score: 25.2
      :name: Election#equal_questions?
    - :operators: 
      - :operator: assignment
        :score: 6.9
      - :operator: branch
        :score: 5.2
      - :operator: display_name
        :score: 3.0
      - :operator: equal_questions?
        :score: 1.3
      - :operator: equal_districts?
        :score: 1.3
      - :operator: ==
        :score: 1.3
      - :operator: equal_contests?
        :score: 1.3
      :score: 11.9
      :name: Election#comp
    - :operators: 
      - :operator: assignment
        :score: 6.9
      - :operator: attributes
        :score: 1.5
      - :operator: +
        :score: 1.4
      - :operator: branch
        :score: 1.3
      - :operator: each
        :score: 1.3
      :score: 8.2
      :name: Election#to_s
    - :operators: 
      - :operator: has_many
        :score: 2.4
      - :operator: before_destroy
        :score: 1.2
      - :operator: belongs_to
        :score: 1.2
      - :operator: validates_presence_of
        :score: 1.2
      :score: 6.0
      :name: Election#none
    - :operators: 
      - :operator: errors
        :score: 1.6
      - :operator: district_set
        :score: 1.5
      - :operator: add
        :score: 1.4
      - :operator: branch
        :score: 1.3
      - :operator: exists?
        :score: 1.3
      :score: 5.9
      :name: Election#validate
    - :operators: 
      - :operator: branch
        :score: 2.8
      - :operator: id
        :score: 1.5
      - :operator: unlink
        :score: 1.5
      - :operator: assignment
        :score: 1.4
      - :operator: foreach
        :score: 1.3
      :score: 5.3
      :name: Election#destroy_translations
    - :operators: 
      - :operator: district_set
        :score: 1.6
      - :operator: districts
        :score: 1.4
      - :operator: assignment
        :score: 1.4
      - :operator: branch
        :score: 1.3
      :score: 3.6
      :name: Election#districts
    - :operators: 
      - :operator: assignment
        :score: 1.3
      - :operator: export
        :score: 1.3
      :score: 1.8
      :name: Election#to_xml
    - :operators: 
      - :operator: id
        :score: 1.3
      :score: 1.3
      :name: Election#translation_path
    - :operators: 
      - :operator: require
        :score: 1.1
      :score: 1.1
      :name: main#none
    :score: 201.0
  - :path: /app/ttv/translate.rb
    :highest_score: 42.0
    :average_score: 10.5
    :scanned_methods: 
    - :operators: 
      - :operator: assignment
        :score: 14.9
      - :operator: branch
        :score: 7.6
      - :operator: "[]"
        :score: 5.7
      - :operator: +
        :score: 3.2
      - :operator: puts
        :score: 2.8
      - :operator: raise
        :score: 2.6
      - :operator: ==
        :score: 2.4
      - :operator: translate
        :score: 1.9
      - :operator: to_s
        :score: 1.7
      - :operator: length
        :score: 1.6
      - :operator: split
        :score: 1.6
      - :operator: escape
        :score: 1.5
      - :operator: parse
        :score: 1.4
      - :operator: each
        :score: 1.4
      - :operator: body
        :score: 1.4
      - :operator: map
        :score: 1.4
      - :operator: class
        :score: 1.4
      - :operator: count
        :score: 1.4
      - :operator: get_response
        :score: 1.2
      - :operator: join
        :score: 1.2
      - :operator: decode
        :score: 1.2
      - :operator: ">"
        :score: 1.2
      - :operator: lit_fixnum
        :score: 0.4
      :score: 42.0
      :name: Translate#translate
    - :operators: 
      - :operator: assignment
        :score: 16.0
      - :operator: branch
        :score: 5.4
      - :operator: translate
        :score: 2.9
      - :operator: open
        :score: 2.8
      - :operator: write
        :score: 1.5
      - :operator: dump
        :score: 1.5
      - :operator: each
        :score: 1.4
      - :operator: load_file
        :score: 1.4
      - :operator: read
        :score: 1.4
      :score: 21.3
      :name: Translate#translate_file
    - :operators: 
      - :operator: assignment
        :score: 5.8
      - :operator: "[]"
        :score: 4.5
      - :operator: send
        :score: 4.5
      - :operator: branch
        :score: 4.1
      - :operator: has_key?
        :score: 2.8
      - :operator: class
        :score: 1.5
      - :operator: ==
        :score: 1.3
      - :operator: name
        :score: 1.3
      - :operator: id
        :score: 1.3
      :score: 18.6
      :name: ElectionTranslation#get
    - :operators: 
      - :operator: assignment
        :score: 11.0
      - :operator: load_file
        :score: 1.4
      - :operator: branch
        :score: 1.3
      - :operator: translation_path
        :score: 1.3
      :score: 11.4
      :name: ElectionTranslation#initialize
    - :operators: 
      - :operator: assignment
        :score: 9.9
      - :operator: load_file
        :score: 1.4
      - :operator: branch
        :score: 1.3
      :score: 10.1
      :name: YamlTranslation#initialize
    - :operators: 
      - :operator: branch
        :score: 5.1
      :score: 5.1
      :name: Translate#human_language
    - :operators: 
      - :operator: branch
        :score: 2.7
      - :operator: assignment
        :score: 1.5
      - :operator: dump
        :score: 1.5
      - :operator: open
        :score: 1.4
      :score: 4.2
      :name: YamlTranslation#save
    - :operators: 
      - :operator: assignment
        :score: 2.6
      - :operator: "[]"
        :score: 1.4
      - :operator: has_key?
        :score: 1.3
      - :operator: branch
        :score: 1.3
      :score: 4.0
      :name: YamlTranslation#[]
    - :operators: 
      - :operator: branch
        :score: 2.6
      - :operator: translate_file
        :score: 1.4
      - :operator: assignment
        :score: 1.3
      - :operator: foreach
        :score: 1.2
      :score: 3.9
      :name: Translate#translate_directory
    - :operators: 
      - :operator: assignment
        :score: 1.4
      - :operator: dump
        :score: 1.4
      - :operator: open
        :score: 1.3
      - :operator: branch
        :score: 1.3
      :score: 3.3
      :name: ElectionTranslation#save
    - :operators: 
      - :operator: ordinalize
        :score: 1.3
      :score: 1.3
      :name: ElectionTranslation#ordinalize
    - :operators: 
      - :operator: localize
        :score: 1.3
      :score: 1.3
      :name: ElectionTranslation#strftime
    :score: 126.5
  - :path: /app/ttv/yaml_export.rb
    :highest_score: 40.6
    :average_score: 11.3
    :scanned_methods: 
    - :operators: 
      - :operator: assignment
        :score: 26.9
      - :operator: branch
        :score: 8.8
      - :operator: "[]"
        :score: 6.8
      - :operator: each
        :score: 5.7
      - :operator: "<<"
        :score: 5.0
      - :operator: display_name
        :score: 3.2
      - :operator: id
        :score: 3.1
      - :operator: precincts
        :score: 1.8
      - :operator: district_set
        :score: 1.7
      - :operator: districts
        :score: 1.5
      - :operator: lit_fixnum
        :score: 0.4
      :score: 40.6
      :name: YAMLExport#export_district_set
    - :operators: 
      - :operator: party
        :score: 3.6
      - :operator: display_name
        :score: 3.2
      - :operator: id
        :score: 3.2
      - :operator: assignment
        :score: 2.7
      - :operator: candidates
        :score: 1.5
      - :operator: "<<"
        :score: 1.4
      - :operator: branch
        :score: 1.3
      - :operator: each
        :score: 1.3
      :score: 14.5
      :name: YAMLExport#export_candidates
    - :operators: 
      - :operator: assignment
        :score: 4.2
      - :operator: district
        :score: 1.7
      - :operator: position
        :score: 1.5
      - :operator: export_candidates
        :score: 1.5
      - :operator: display_name
        :score: 1.5
      - :operator: "<<"
        :score: 1.5
      - :operator: "[]"
        :score: 1.5
      - :operator: id
        :score: 1.5
      - :operator: contests
        :score: 1.5
      - :operator: each
        :score: 1.3
      - :operator: branch
        :score: 1.3
      :score: 14.2
      :name: YAMLExport#export_contests
    - :operators: 
      - :operator: assignment
        :score: 7.9
      - :operator: display_name
        :score: 2.6
      - :operator: start_date
        :score: 1.3
      - :operator: length
        :score: 1.3
      - :operator: ballot_config?
        :score: 1.3
      - :operator: branch
        :score: 1.3
      - :operator: export_questions
        :score: 1.3
      - :operator: export_district_set
        :score: 1.3
      - :operator: export_contests
        :score: 1.3
      :score: 13.1
      :name: YAMLExport#do_export
    - :operators: 
      - :operator: assignment
        :score: 4.2
      - :operator: requesting_district
        :score: 1.7
      - :operator: question
        :score: 1.5
      - :operator: display_name
        :score: 1.5
      - :operator: "<<"
        :score: 1.5
      - :operator: "[]"
        :score: 1.5
      - :operator: questions
        :score: 1.5
      - :operator: each
        :score: 1.3
      - :operator: branch
        :score: 1.3
      :score: 11.4
      :name: YAMLExport#export_questions
    - :operators: 
      - :operator: find
        :score: 1.5
      - :operator: district_set
        :score: 1.5
      - :operator: ==
        :score: 1.3
      :score: 4.3
      :name: YAMLExport#ballot_config?
    - :operators: 
      - :operator: assignment
        :score: 1.3
      :score: 1.3
      :name: YAMLExport#initialize
    - :operators: 
      - :operator: attr_reader
        :score: 1.2
      :score: 1.2
      :name: YAMLExport#none
    - :operators: 
      - :operator: require
        :score: 1.1
      :score: 1.1
      :name: main#none
    :score: 101.8
  - :path: /app/controllers/questions_controller.rb
    :highest_score: 36.4
    :average_score: 18.7
    :scanned_methods: 
    - :operators: 
      - :operator: branch
        :score: 6.4
      - :operator: district
        :score: 5.8
      - :operator: dom_id
        :score: 5.3
      - :operator: assignment
        :score: 5.1
      - :operator: replace
        :score: 4.7
      - :operator: +
        :score: 2.8
      - :operator: render
        :score: 2.7
      - :operator: election
        :score: 1.8
      - :operator: display_name
        :score: 1.7
      - :operator: params
        :score: 1.6
      - :operator: redirect_to
        :score: 1.4
      - :operator: request
        :score: 1.4
      - :operator: "[]"
        :score: 1.4
      - :operator: flash
        :score: 1.3
      - :operator: xhr?
        :score: 1.2
      - :operator: save
        :score: 1.2
      - :operator: new
        :score: 1.2
      :score: 36.4
      :name: QuestionsController#create
    - :operators: 
      - :operator: assignment
        :score: 8.0
      - :operator: branch
        :score: 6.6
      - :operator: replace
        :score: 3.3
      - :operator: params
        :score: 3.2
      - :operator: dom_id
        :score: 2.8
      - :operator: render
        :score: 2.8
      - :operator: +
        :score: 2.8
      - :operator: "[]"
        :score: 2.8
      - :operator: question
        :score: 1.8
      - :operator: remove
        :score: 1.7
      - :operator: display_name
        :score: 1.7
      - :operator: redirect_to
        :score: 1.4
      - :operator: request
        :score: 1.4
      - :operator: flash
        :score: 1.3
      - :operator: update_attributes
        :score: 1.2
      - :operator: xhr?
        :score: 1.2
      - :operator: find
        :score: 1.2
      :score: 32.3
      :name: QuestionsController#update
    - :operators: 
      - :operator: assignment
        :score: 4.1
      - :operator: district
        :score: 3.6
      - :operator: dom_id
        :score: 3.2
      - :operator: params
        :score: 3.2
      - :operator: "<<"
        :score: 3.0
      - :operator: "[]"
        :score: 2.8
      - :operator: branch
        :score: 2.5
      - :operator: insert_html
        :score: 1.5
      - :operator: request
        :score: 1.4
      - :operator: render
        :score: 1.3
      - :operator: xhr?
        :score: 1.2
      - :operator: new
        :score: 1.2
      :score: 22.9
      :name: QuestionsController#new
    - :operators: 
      - :operator: assignment
        :score: 7.4
      - :operator: branch
        :score: 2.5
      - :operator: dom_id
        :score: 1.6
      - :operator: params
        :score: 1.6
      - :operator: questions_path
        :score: 1.5
      - :operator: replace
        :score: 1.4
      - :operator: "[]"
        :score: 1.4
      - :operator: request
        :score: 1.4
      - :operator: render
        :score: 1.3
      - :operator: redirect_to
        :score: 1.3
      - :operator: display_name
        :score: 1.2
      - :operator: election
        :score: 1.2
      - :operator: find
        :score: 1.2
      - :operator: flash
        :score: 1.2
      - :operator: xhr?
        :score: 1.2
      - :operator: district
        :score: 1.2
      - :operator: destroy
        :score: 1.2
      :score: 21.4
      :name: QuestionsController#destroy
    - :operators: 
      - :operator: params
        :score: 1.6
      - :operator: request
        :score: 1.4
      - :operator: "[]"
        :score: 1.4
      - :operator: render
        :score: 1.3
      - :operator: assignment
        :score: 1.2
      - :operator: branch
        :score: 1.2
      - :operator: xhr?
        :score: 1.2
      - :operator: find
        :score: 1.2
      :score: 8.3
      :name: QuestionsController#edit
    - :operators: 
      - :operator: assignment
        :score: 2.4
      - :operator: params
        :score: 1.6
      - :operator: "[]"
        :score: 1.4
      - :operator: current_context
        :score: 1.2
      - :operator: find
        :score: 1.2
      :score: 5.9
      :name: QuestionsController#show
    - :operators: 
      - :operator: current_context
        :score: 1.4
      - :operator: all
        :score: 1.2
      - :operator: reset
        :score: 1.2
      - :operator: assignment
        :score: 1.2
      :score: 4.0
      :name: QuestionsController#index
    :score: 131.2
  - :path: /app/controllers/users_controller.rb
    :highest_score: 32.2
    :average_score: 8.3
    :scanned_methods: 
    - :operators: 
      - :operator: assignment
        :score: 7.0
      - :operator: flash
        :score: 4.3
      - :operator: redirect_to
        :score: 2.8
      - :operator: branch
        :score: 2.6
      - :operator: new
        :score: 2.6
      - :operator: "<<"
        :score: 2.6
      - :operator: errors
        :score: 2.0
      - :operator: request
        :score: 1.8
      - :operator: full_messages
        :score: 1.8
      - :operator: referer
        :score: 1.6
      - :operator: join
        :score: 1.6
      - :operator: root_url
        :score: 1.6
      - :operator: params
        :score: 1.6
      - :operator: deliver_registration_confirmation
        :score: 1.5
      - :operator: message
        :score: 1.5
      - :operator: roles
        :score: 1.4
      - :operator: "[]"
        :score: 1.4
      - :operator: save
        :score: 1.2
      :score: 32.2
      :name: UsersController#create
    - :operators: 
      - :operator: params
        :score: 3.2
      - :operator: "[]"
        :score: 2.8
      - :operator: assignment
        :score: 2.6
      - :operator: root_url
        :score: 1.6
      - :operator: flash
        :score: 1.4
      - :operator: redirect_to
        :score: 1.4
      - :operator: render
        :score: 1.3
      - :operator: branch
        :score: 1.2
      - :operator: update_attributes
        :score: 1.2
      - :operator: find
        :score: 1.2
      :score: 14.4
      :name: UsersController#update
    - :operators: 
      - :operator: params
        :score: 1.6
      - :operator: users_url
        :score: 1.4
      - :operator: "[]"
        :score: 1.4
      - :operator: find
        :score: 1.2
      - :operator: assignment
        :score: 1.2
      - :operator: destroy
        :score: 1.2
      - :operator: redirect_to
        :score: 1.2
      :score: 8.1
      :name: UsersController#destroy
    - :operators: 
      - :operator: params
        :score: 1.6
      - :operator: "[]"
        :score: 1.4
      - :operator: redirect_to
        :score: 1.3
      - :operator: branch
        :score: 1.2
      - :operator: empty?
        :score: 1.2
      - :operator: paginate
        :score: 1.2
      - :operator: assignment
        :score: 1.2
      - :operator: lit_fixnum
        :score: 0.4
      :score: 7.3
      :name: UsersController#index
    - :operators: 
      - :operator: params
        :score: 1.6
      - :operator: "[]"
        :score: 1.4
      - :operator: find
        :score: 1.2
      - :operator: assignment
        :score: 1.2
      :score: 4.4
      :name: UsersController#edit
    - :operators: 
      - :operator: params
        :score: 1.6
      - :operator: "[]"
        :score: 1.4
      - :operator: find
        :score: 1.2
      - :operator: assignment
        :score: 1.2
      :score: 4.4
      :name: UsersController#show
    - :operators: 
      - :operator: assignment
        :score: 1.2
      - :operator: new
        :score: 1.2
      :score: 1.7
      :name: UsersController#register
    - :operators: 
      - :operator: assignment
        :score: 1.2
      - :operator: new
        :score: 1.2
      :score: 1.7
      :name: UsersController#new
    - :operators: 
      - :operator: authorize_resource
        :score: 1.1
      :score: 1.1
      :name: UsersController#none
    :score: 75.1
  - :path: /app/controllers/elections_controller.rb
    :highest_score: 31.6
    :average_score: 14.5
    :scanned_methods: 
    - :operators: 
      - :operator: params
        :score: 8.0
      - :operator: assignment
        :score: 7.2
      - :operator: "[]"
        :score: 7.0
      - :operator: paginate
        :score: 4.8
      - :operator: district_set
        :score: 1.6
      - :operator: districts
        :score: 1.4
      - :operator: lit_fixnum
        :score: 1.4
      - :operator: precincts
        :score: 1.4
      - :operator: questions
        :score: 1.4
      - :operator: contests
        :score: 1.4
      - :operator: find
        :score: 1.2
      - :operator: current_context
        :score: 1.2
      :score: 31.6
      :name: ElectionsController#show
    - :operators: 
      - :operator: assignment
        :score: 10.0
      - :operator: redirect_to
        :score: 5.7
      - :operator: flash
        :score: 4.4
      - :operator: params
        :score: 3.6
      - :operator: "[]"
        :score: 3.2
      - :operator: elections_url
        :score: 3.1
      - :operator: branch
        :score: 2.5
      - :operator: import
        :score: 1.5
      - :operator: new
        :score: 1.5
      - :operator: raise
        :score: 1.4
      - :operator: message
        :score: 1.4
      - :operator: nil?
        :score: 1.3
      :score: 29.0
      :name: ElectionsController#import_yml
    - :operators: 
      - :operator: assignment
        :score: 9.7
      - :operator: branch
        :score: 6.6
      - :operator: replace
        :score: 3.4
      - :operator: params
        :score: 3.2
      - :operator: find
        :score: 2.9
      - :operator: dom_id
        :score: 2.8
      - :operator: render
        :score: 2.8
      - :operator: "[]"
        :score: 2.8
      - :operator: remove
        :score: 1.7
      - :operator: redirect_to
        :score: 1.4
      - :operator: request
        :score: 1.4
      - :operator: flash
        :score: 1.3
      - :operator: xhr?
        :score: 1.2
      - :operator: update_attributes
        :score: 1.2
      :score: 28.6
      :name: ElectionsController#update
    - :operators: 
      - :operator: assignment
        :score: 8.5
      - :operator: redirect_to
        :score: 5.7
      - :operator: flash
        :score: 4.4
      - :operator: params
        :score: 3.6
      - :operator: "[]"
        :score: 3.2
      - :operator: elections_url
        :score: 3.1
      - :operator: branch
        :score: 2.5
      - :operator: import
        :score: 1.5
      - :operator: message
        :score: 1.4
      - :operator: raise
        :score: 1.4
      - :operator: nil?
        :score: 1.3
      :score: 27.1
      :name: ElectionsController#import
    - :operators: 
      - :operator: find
        :score: 2.7
      - :operator: assignment
        :score: 2.5
      - :operator: branch
        :score: 2.4
      - :operator: params
        :score: 1.6
      - :operator: "[]"
        :score: 1.4
      - :operator: current_context
        :score: 1.4
      - :operator: election
        :score: 1.3
      - :operator: redirect_to
        :score: 1.3
      - :operator: paginate
        :score: 1.2
      - :operator: empty?
        :score: 1.2
      - :operator: reset
        :score: 1.2
      - :operator: lit_fixnum
        :score: 0.4
      :score: 14.1
      :name: ElectionsController#index
    - :operators: 
      - :operator: params
        :score: 3.2
      - :operator: "[]"
        :score: 2.8
      - :operator: assignment
        :score: 2.4
      - :operator: precincts_election_url
        :score: 1.4
      - :operator: flash
        :score: 1.2
      - :operator: find
        :score: 1.2
      - :operator: redirect_to
        :score: 1.2
      - :operator: translate
        :score: 1.2
      :score: 12.4
      :name: ElectionsController#translate
    - :operators: 
      - :operator: assignment
        :score: 3.6
      - :operator: display_name
        :score: 1.6
      - :operator: params
        :score: 1.6
      - :operator: "[]"
        :score: 1.4
      - :operator: gsub
        :score: 1.4
      - :operator: headers
        :score: 1.2
      - :operator: render
        :score: 1.2
      - :operator: camelize
        :score: 1.2
      - :operator: find
        :score: 1.2
      :score: 11.4
      :name: ElectionsController#export
    - :operators: 
      - :operator: assignment
        :score: 2.6
      - :operator: params
        :score: 1.6
      - :operator: redirect_to
        :score: 1.4
      - :operator: flash
        :score: 1.4
      - :operator: "[]"
        :score: 1.4
      - :operator: render
        :score: 1.3
      - :operator: branch
        :score: 1.2
      - :operator: save
        :score: 1.2
      - :operator: new
        :score: 1.2
      :score: 9.9
      :name: ElectionsController#create
    - :operators: 
      - :operator: find
        :score: 2.4
      - :operator: assignment
        :score: 2.4
      - :operator: params
        :score: 1.6
      - :operator: request
        :score: 1.4
      - :operator: "[]"
        :score: 1.4
      - :operator: render
        :score: 1.3
      - :operator: branch
        :score: 1.2
      - :operator: xhr?
        :score: 1.2
      :score: 9.7
      :name: ElectionsController#edit
    - :operators: 
      - :operator: params
        :score: 1.6
      - :operator: "[]"
        :score: 1.4
      - :operator: elections_url
        :score: 1.4
      - :operator: destroy
        :score: 1.2
      - :operator: find
        :score: 1.2
      - :operator: redirect_to
        :score: 1.2
      - :operator: assignment
        :score: 1.2
      :score: 8.1
      :name: ElectionsController#destroy
    - :operators: 
      - :operator: params
        :score: 1.6
      - :operator: "[]"
        :score: 1.4
      - :operator: find
        :score: 1.2
      - :operator: assignment
        :score: 1.2
      :score: 4.4
      :name: ElectionsController#precincts
    - :operators: 
      - :operator: assignment
        :score: 1.2
      - :operator: new
        :score: 1.2
      :score: 1.7
      :name: ElectionsController#new
    - :operators: 
      - :operator: authorize_resource
        :score: 1.1
      :score: 1.1
      :name: ElectionsController#none
    :score: 189.1
  - :path: /app/controllers/candidates_controller.rb
    :highest_score: 30.6
    :average_score: 17.2
    :scanned_methods: 
    - :operators: 
      - :operator: assignment
        :score: 8.0
      - :operator: branch
        :score: 6.6
      - :operator: replace
        :score: 3.3
      - :operator: params
        :score: 3.2
      - :operator: dom_id
        :score: 2.8
      - :operator: render
        :score: 2.8
      - :operator: "[]"
        :score: 2.8
      - :operator: +
        :score: 2.8
      - :operator: remove
        :score: 1.7
      - :operator: display_name
        :score: 1.7
      - :operator: redirect_to
        :score: 1.4
      - :operator: request
        :score: 1.4
      - :operator: flash
        :score: 1.3
      - :operator: find
        :score: 1.2
      - :operator: xhr?
        :score: 1.2
      - :operator: update_attributes
        :score: 1.2
      :score: 30.6
      :name: CandidatesController#update
    - :operators: 
      - :operator: assignment
        :score: 9.8
      - :operator: +
        :score: 4.3
      - :operator: branch
        :score: 4.1
      - :operator: flash
        :score: 2.7
      - :operator: dom_id
        :score: 1.8
      - :operator: params
        :score: 1.8
      - :operator: candidates_url
        :score: 1.7
      - :operator: replace
        :score: 1.6
      - :operator: request
        :score: 1.6
      - :operator: "[]"
        :score: 1.6
      - :operator: redirect_to
        :score: 1.5
      - :operator: render
        :score: 1.5
      - :operator: message
        :score: 1.5
      - :operator: display_name
        :score: 1.4
      - :operator: find
        :score: 1.4
      - :operator: contest
        :score: 1.4
      - :operator: xhr?
        :score: 1.4
      - :operator: destroy
        :score: 1.4
      :score: 30.5
      :name: CandidatesController#destroy
    - :operators: 
      - :operator: assignment
        :score: 5.3
      - :operator: branch
        :score: 3.7
      - :operator: contest
        :score: 3.6
      - :operator: dom_id
        :score: 3.2
      - :operator: params
        :score: 3.0
      - :operator: "[]"
        :score: 2.6
      - :operator: insert_html
        :score: 1.5
      - :operator: request
        :score: 1.4
      - :operator: raise
        :score: 1.3
      - :operator: render
        :score: 1.3
      - :operator: xhr?
        :score: 1.2
      - :operator: nil?
        :score: 1.2
      - :operator: new
        :score: 1.2
      :score: 22.5
      :name: CandidatesController#new
    - :operators: 
      - :operator: params
        :score: 1.6
      - :operator: "[]"
        :score: 1.4
      - :operator: request
        :score: 1.4
      - :operator: render
        :score: 1.3
      - :operator: find
        :score: 1.2
      - :operator: branch
        :score: 1.2
      - :operator: assignment
        :score: 1.2
      - :operator: xhr?
        :score: 1.2
      :score: 8.3
      :name: CandidatesController#edit
    - :operators: 
      - :operator: params
        :score: 1.6
      - :operator: current_context
        :score: 1.4
      - :operator: "[]"
        :score: 1.4
      - :operator: assignment
        :score: 1.2
      - :operator: reset
        :score: 1.2
      - :operator: paginate
        :score: 1.2
      - :operator: lit_fixnum
        :score: 0.4
      :score: 7.3
      :name: CandidatesController#index
    - :operators: 
      - :operator: params
        :score: 1.6
      - :operator: "[]"
        :score: 1.4
      - :operator: find
        :score: 1.2
      - :operator: assignment
        :score: 1.2
      :score: 4.4
      :name: CandidatesController#show
    :score: 103.5
  - :path: /app/models/contest.rb
    :highest_score: 28.2
    :average_score: 12.0
    :scanned_methods: 
    - :operators: 
      - :operator: errors
        :score: 7.5
      - :operator: add
        :score: 6.5
      - :operator: branch
        :score: 6.0
      - :operator: exists?
        :score: 3.6
      - :operator: open_seat_count
        :score: 1.4
      - :operator: district_id
        :score: 1.4
      - :operator: election_id
        :score: 1.4
      - :operator: voting_method_id
        :score: 1.4
      - :operator: ">"
        :score: 1.2
      - :operator: <
        :score: 1.2
      - :operator: to_i
        :score: 1.2
      - :operator: assignment
        :score: 1.2
      - :operator: lit_fixnum
        :score: 0.7
      :score: 28.2
      :name: Contest#validate
    - :operators: 
      - :operator: belongs_to
        :score: 3.3
      - :operator: "[]"
        :score: 1.6
      - :operator: blank?
        :score: 1.4
      - :operator: assignment
        :score: 1.4
      - :operator: branch
        :score: 1.3
      - :operator: proc
        :score: 1.3
      - :operator: has_many
        :score: 1.1
      - :operator: accepts_nested_attributes_for
        :score: 1.1
      - :operator: validates_presence_of
        :score: 1.1
      - :operator: attr_accessible
        :score: 1.1
      - :operator: validates_numericality_of
        :score: 1.1
      :score: 13.2
      :name: Contest#none
    - :operators: 
      - :operator: branch
        :score: 3.3
      - :operator: assignment
        :score: 2.9
      - :operator: district
        :score: 1.9
      - :operator: contests
        :score: 1.8
      - :operator: include?
        :score: 1.7
      - :operator: map
        :score: 1.6
      - :operator: flatten
        :score: 1.4
      - :operator: districts_for_election
        :score: 1.2
      - :operator: compact
        :score: 1.2
      :score: 11.7
      :name: Contest#contests_for_precinct_election
    - :operators: 
      - :operator: write_attribute
        :score: 2.6
      - :operator: branch
        :score: 2.4
      - :operator: open_seat_count
        :score: 1.2
      - :operator: voting_method_id
        :score: 1.2
      - :operator: lit_fixnum
        :score: 0.4
      :score: 5.9
      :name: Contest#after_initialize
    - :operators: 
      - :operator: display_name
        :score: 1.2
      :score: 1.2
      :name: Contest#to_s
    :score: 60.2
  - :path: /app/models/user_context.rb
    :highest_score: 27.5
    :average_score: 6.2
    :scanned_methods: 
    - :operators: 
      - :operator: display_name
        :score: 8.3
      - :operator: "<<"
        :score: 6.5
      - :operator: +
        :score: 6.0
      - :operator: nil?
        :score: 6.0
      - :operator: branch
        :score: 6.0
      - :operator: assignment
        :score: 1.2
      :score: 27.5
      :name: UserContext#to_s
    - :operators: 
      - :operator: assignment
        :score: 13.3
      - :operator: branch
        :score: 2.4
      - :operator: id
        :score: 1.3
      - :operator: district_set
        :score: 1.3
      - :operator: nil?
        :score: 1.2
      :score: 14.0
      :name: UserContext#election=
    - :operators: 
      - :operator: assignment
        :score: 12.0
      :score: 12.0
      :name: UserContext#reset
    - :operators: 
      - :operator: assignment
        :score: 10.8
      - :operator: district_sets
        :score: 1.4
      - :operator: id
        :score: 1.3
      - :operator: "[]"
        :score: 1.2
      - :operator: branch
        :score: 1.2
      :score: 11.5
      :name: UserContext#precinct=
    - :operators: 
      - :operator: assignment
        :score: 9.6
      - :operator: id
        :score: 1.3
      - :operator: branch
        :score: 1.2
      :score: 9.8
      :name: UserContext#question=
    - :operators: 
      - :operator: assignment
        :score: 9.6
      - :operator: id
        :score: 1.3
      - :operator: branch
        :score: 1.2
      :score: 9.8
      :name: UserContext#contest=
    - :operators: 
      - :operator: "[]"
        :score: 3.0
      - :operator: branch
        :score: 2.5
      - :operator: find
        :score: 1.4
      - :operator: assignment
        :score: 1.4
      :score: 5.3
      :name: UserContext#question
    - :operators: 
      - :operator: "[]"
        :score: 3.0
      - :operator: branch
        :score: 2.5
      - :operator: find
        :score: 1.4
      - :operator: assignment
        :score: 1.4
      :score: 5.3
      :name: UserContext#jurisdiction
    - :operators: 
      - :operator: "[]"
        :score: 3.0
      - :operator: branch
        :score: 2.5
      - :operator: find
        :score: 1.4
      - :operator: assignment
        :score: 1.4
      :score: 5.3
      :name: UserContext#precinct
    - :operators: 
      - :operator: "[]"
        :score: 3.0
      - :operator: branch
        :score: 2.5
      - :operator: find
        :score: 1.4
      - :operator: assignment
        :score: 1.4
      :score: 5.3
      :name: UserContext#contest
    - :operators: 
      - :operator: "[]"
        :score: 3.0
      - :operator: branch
        :score: 2.5
      - :operator: find
        :score: 1.4
      - :operator: assignment
        :score: 1.4
      :score: 5.3
      :name: UserContext#election
    - :operators: 
      - :operator: jurisdiction
        :score: 2.7
      - :operator: branch
        :score: 2.4
      - :operator: secondary_name
        :score: 1.3
      - :operator: assignment
        :score: 1.2
      :score: 4.8
      :name: UserContext#jurisdiction_secondary_name
    - :operators: 
      - :operator: jurisdiction
        :score: 2.7
      - :operator: display_name
        :score: 1.3
      - :operator: branch
        :score: 1.2
      :score: 4.2
      :name: UserContext#jurisdiction_name
    - :operators: 
      - :operator: assignment
        :score: 2.4
      - :operator: id
        :score: 1.3
      - :operator: branch
        :score: 1.2
      :score: 3.0
      :name: UserContext#jurisdiction=
    - :operators: 
      - :operator: nil?
        :score: 1.2
      :score: 1.2
      :name: UserContext#election?
    - :operators: 
      - :operator: assignment
        :score: 1.2
      :score: 1.2
      :name: UserContext#initialize
    - :operators: 
      - :operator: nil?
        :score: 1.2
      :score: 1.2
      :name: UserContext#contest?
    - :operators: 
      - :operator: nil?
        :score: 1.2
      :score: 1.2
      :name: UserContext#jurisdiction?
    - :operators: 
      - :operator: nil?
        :score: 1.2
      :score: 1.2
      :name: UserContext#precinct?
    - :operators: 
      - :operator: nil?
        :score: 1.2
      :score: 1.2
      :name: UserContext#question?
    - :operators: 
      - :operator: attr_accessor
        :score: 1.1
      :score: 1.1
      :name: UserContext#none
    :score: 131.1
  - :path: /app/controllers/ballot_style_templates_controller.rb
    :highest_score: 27.3
    :average_score: 12.6
    :scanned_methods: 
    - :operators: 
      - :operator: branch
        :score: 8.5
      - :operator: assignment
        :score: 4.0
      - :operator: params
        :score: 3.3
      - :operator: render
        :score: 3.2
      - :operator: xml
        :score: 3.0
      - :operator: html
        :score: 3.0
      - :operator: "[]"
        :score: 2.9
      - :operator: errors
        :score: 1.8
      - :operator: head
        :score: 1.6
      - :operator: redirect_to
        :score: 1.6
      - :operator: flash
        :score: 1.5
      - :operator: update_attributes
        :score: 1.3
      - :operator: find
        :score: 1.2
      - :operator: respond_to
        :score: 1.2
      :score: 27.3
      :name: BallotStyleTemplatesController#update
    - :operators: 
      - :operator: branch
        :score: 8.5
      - :operator: render
        :score: 4.8
      - :operator: assignment
        :score: 4.0
      - :operator: xml
        :score: 3.0
      - :operator: html
        :score: 3.0
      - :operator: errors
        :score: 1.8
      - :operator: redirect_to
        :score: 1.6
      - :operator: params
        :score: 1.6
      - :operator: flash
        :score: 1.5
      - :operator: "[]"
        :score: 1.4
      - :operator: save
        :score: 1.3
      - :operator: respond_to
        :score: 1.2
      - :operator: new
        :score: 1.2
      :score: 24.3
      :name: BallotStyleTemplatesController#create
    - :operators: 
      - :operator: branch
        :score: 4.0
      - :operator: assignment
        :score: 2.5
      - :operator: ballot_style_templates_url
        :score: 1.7
      - :operator: params
        :score: 1.6
      - :operator: head
        :score: 1.5
      - :operator: redirect_to
        :score: 1.5
      - :operator: html
        :score: 1.4
      - :operator: xml
        :score: 1.4
      - :operator: "[]"
        :score: 1.4
      - :operator: respond_to
        :score: 1.2
      - :operator: destroy
        :score: 1.2
      - :operator: find
        :score: 1.2
      :score: 14.9
      :name: BallotStyleTemplatesController#destroy
    - :operators: 
      - :operator: branch
        :score: 2.6
      - :operator: assignment
        :score: 2.5
      - :operator: params
        :score: 1.6
      - :operator: render
        :score: 1.5
      - :operator: html
        :score: 1.4
      - :operator: xml
        :score: 1.4
      - :operator: "[]"
        :score: 1.4
      - :operator: respond_to
        :score: 1.2
      - :operator: paginate
        :score: 1.2
      - :operator: lit_fixnum
        :score: 0.4
      :score: 10.7
      :name: BallotStyleTemplatesController#index
    - :operators: 
      - :operator: branch
        :score: 2.6
      - :operator: assignment
        :score: 2.5
      - :operator: params
        :score: 1.6
      - :operator: render
        :score: 1.5
      - :operator: html
        :score: 1.4
      - :operator: xml
        :score: 1.4
      - :operator: "[]"
        :score: 1.4
      - :operator: find
        :score: 1.2
      - :operator: respond_to
        :score: 1.2
      :score: 10.3
      :name: BallotStyleTemplatesController#show
    - :operators: 
      - :operator: branch
        :score: 2.6
      - :operator: assignment
        :score: 2.5
      - :operator: render
        :score: 1.5
      - :operator: html
        :score: 1.4
      - :operator: xml
        :score: 1.4
      - :operator: respond_to
        :score: 1.2
      - :operator: new
        :score: 1.2
      :score: 7.6
      :name: BallotStyleTemplatesController#new
    - :operators: 
      - :operator: params
        :score: 1.6
      - :operator: "[]"
        :score: 1.4
      - :operator: find
        :score: 1.2
      - :operator: assignment
        :score: 1.2
      :score: 4.4
      :name: BallotStyleTemplatesController#edit
    - :operators: 
      - :operator: layout
        :score: 1.1
      :score: 1.1
      :name: BallotStyleTemplatesController#none
    :score: 100.5
  - :path: /app/controllers/media_controller.rb
    :highest_score: 27.3
    :average_score: 12.6
    :scanned_methods: 
    - :operators: 
      - :operator: branch
        :score: 8.5
      - :operator: assignment
        :score: 4.0
      - :operator: params
        :score: 3.3
      - :operator: render
        :score: 3.2
      - :operator: xml
        :score: 3.0
      - :operator: html
        :score: 3.0
      - :operator: "[]"
        :score: 2.9
      - :operator: errors
        :score: 1.8
      - :operator: head
        :score: 1.6
      - :operator: redirect_to
        :score: 1.6
      - :operator: flash
        :score: 1.5
      - :operator: update_attributes
        :score: 1.3
      - :operator: find
        :score: 1.2
      - :operator: respond_to
        :score: 1.2
      :score: 27.3
      :name: MediaController#update
    - :operators: 
      - :operator: branch
        :score: 8.5
      - :operator: render
        :score: 4.8
      - :operator: assignment
        :score: 4.0
      - :operator: xml
        :score: 3.0
      - :operator: html
        :score: 3.0
      - :operator: errors
        :score: 1.8
      - :operator: redirect_to
        :score: 1.6
      - :operator: params
        :score: 1.6
      - :operator: flash
        :score: 1.5
      - :operator: "[]"
        :score: 1.4
      - :operator: save
        :score: 1.3
      - :operator: respond_to
        :score: 1.2
      - :operator: new
        :score: 1.2
      :score: 24.3
      :name: MediaController#create
    - :operators: 
      - :operator: branch
        :score: 4.0
      - :operator: assignment
        :score: 2.5
      - :operator: media_url
        :score: 1.7
      - :operator: params
        :score: 1.6
      - :operator: head
        :score: 1.5
      - :operator: redirect_to
        :score: 1.5
      - :operator: html
        :score: 1.4
      - :operator: xml
        :score: 1.4
      - :operator: "[]"
        :score: 1.4
      - :operator: respond_to
        :score: 1.2
      - :operator: destroy
        :score: 1.2
      - :operator: find
        :score: 1.2
      :score: 14.9
      :name: MediaController#destroy
    - :operators: 
      - :operator: branch
        :score: 2.6
      - :operator: assignment
        :score: 2.5
      - :operator: params
        :score: 1.6
      - :operator: render
        :score: 1.5
      - :operator: html
        :score: 1.4
      - :operator: xml
        :score: 1.4
      - :operator: "[]"
        :score: 1.4
      - :operator: respond_to
        :score: 1.2
      - :operator: paginate
        :score: 1.2
      - :operator: lit_fixnum
        :score: 0.4
      :score: 10.7
      :name: MediaController#index
    - :operators: 
      - :operator: branch
        :score: 2.6
      - :operator: assignment
        :score: 2.5
      - :operator: params
        :score: 1.6
      - :operator: render
        :score: 1.5
      - :operator: html
        :score: 1.4
      - :operator: xml
        :score: 1.4
      - :operator: "[]"
        :score: 1.4
      - :operator: find
        :score: 1.2
      - :operator: respond_to
        :score: 1.2
      :score: 10.3
      :name: MediaController#show
    - :operators: 
      - :operator: branch
        :score: 2.6
      - :operator: assignment
        :score: 2.5
      - :operator: render
        :score: 1.5
      - :operator: html
        :score: 1.4
      - :operator: xml
        :score: 1.4
      - :operator: respond_to
        :score: 1.2
      - :operator: new
        :score: 1.2
      :score: 7.6
      :name: MediaController#new
    - :operators: 
      - :operator: params
        :score: 1.6
      - :operator: "[]"
        :score: 1.4
      - :operator: find
        :score: 1.2
      - :operator: assignment
        :score: 1.2
      :score: 4.4
      :name: MediaController#edit
    - :operators: 
      - :operator: layout
        :score: 1.1
      :score: 1.1
      :name: MediaController#none
    :score: 100.5
  - :path: /app/controllers/languages_controller.rb
    :highest_score: 27.3
    :average_score: 12.6
    :scanned_methods: 
    - :operators: 
      - :operator: branch
        :score: 8.5
      - :operator: assignment
        :score: 4.0
      - :operator: params
        :score: 3.3
      - :operator: render
        :score: 3.2
      - :operator: xml
        :score: 3.0
      - :operator: html
        :score: 3.0
      - :operator: "[]"
        :score: 2.9
      - :operator: errors
        :score: 1.8
      - :operator: head
        :score: 1.6
      - :operator: redirect_to
        :score: 1.6
      - :operator: flash
        :score: 1.5
      - :operator: update_attributes
        :score: 1.3
      - :operator: find
        :score: 1.2
      - :operator: respond_to
        :score: 1.2
      :score: 27.3
      :name: LanguagesController#update
    - :operators: 
      - :operator: branch
        :score: 8.5
      - :operator: render
        :score: 4.8
      - :operator: assignment
        :score: 4.0
      - :operator: xml
        :score: 3.0
      - :operator: html
        :score: 3.0
      - :operator: errors
        :score: 1.8
      - :operator: redirect_to
        :score: 1.6
      - :operator: params
        :score: 1.6
      - :operator: flash
        :score: 1.5
      - :operator: "[]"
        :score: 1.4
      - :operator: save
        :score: 1.3
      - :operator: respond_to
        :score: 1.2
      - :operator: new
        :score: 1.2
      :score: 24.3
      :name: LanguagesController#create
    - :operators: 
      - :operator: branch
        :score: 4.0
      - :operator: assignment
        :score: 2.5
      - :operator: languages_url
        :score: 1.7
      - :operator: params
        :score: 1.6
      - :operator: head
        :score: 1.5
      - :operator: redirect_to
        :score: 1.5
      - :operator: html
        :score: 1.4
      - :operator: xml
        :score: 1.4
      - :operator: "[]"
        :score: 1.4
      - :operator: respond_to
        :score: 1.2
      - :operator: destroy
        :score: 1.2
      - :operator: find
        :score: 1.2
      :score: 14.9
      :name: LanguagesController#destroy
    - :operators: 
      - :operator: branch
        :score: 2.6
      - :operator: assignment
        :score: 2.5
      - :operator: params
        :score: 1.6
      - :operator: render
        :score: 1.5
      - :operator: html
        :score: 1.4
      - :operator: xml
        :score: 1.4
      - :operator: "[]"
        :score: 1.4
      - :operator: respond_to
        :score: 1.2
      - :operator: paginate
        :score: 1.2
      - :operator: lit_fixnum
        :score: 0.4
      :score: 10.7
      :name: LanguagesController#index
    - :operators: 
      - :operator: branch
        :score: 2.6
      - :operator: assignment
        :score: 2.5
      - :operator: params
        :score: 1.6
      - :operator: render
        :score: 1.5
      - :operator: html
        :score: 1.4
      - :operator: xml
        :score: 1.4
      - :operator: "[]"
        :score: 1.4
      - :operator: find
        :score: 1.2
      - :operator: respond_to
        :score: 1.2
      :score: 10.3
      :name: LanguagesController#show
    - :operators: 
      - :operator: branch
        :score: 2.6
      - :operator: assignment
        :score: 2.5
      - :operator: render
        :score: 1.5
      - :operator: html
        :score: 1.4
      - :operator: xml
        :score: 1.4
      - :operator: respond_to
        :score: 1.2
      - :operator: new
        :score: 1.2
      :score: 7.6
      :name: LanguagesController#new
    - :operators: 
      - :operator: params
        :score: 1.6
      - :operator: "[]"
        :score: 1.4
      - :operator: find
        :score: 1.2
      - :operator: assignment
        :score: 1.2
      :score: 4.4
      :name: LanguagesController#edit
    - :operators: 
      - :operator: layout
        :score: 1.1
      :score: 1.1
      :name: LanguagesController#none
    :score: 100.5
  - :path: /app/controllers/district_sets_controller.rb
    :highest_score: 27.3
    :average_score: 14.2
    :scanned_methods: 
    - :operators: 
      - :operator: branch
        :score: 8.5
      - :operator: assignment
        :score: 4.0
      - :operator: params
        :score: 3.3
      - :operator: render
        :score: 3.2
      - :operator: xml
        :score: 3.0
      - :operator: html
        :score: 3.0
      - :operator: "[]"
        :score: 2.9
      - :operator: errors
        :score: 1.8
      - :operator: head
        :score: 1.6
      - :operator: redirect_to
        :score: 1.6
      - :operator: flash
        :score: 1.5
      - :operator: update_attributes
        :score: 1.3
      - :operator: respond_to
        :score: 1.2
      - :operator: find
        :score: 1.2
      :score: 27.3
      :name: DistrictSetsController#update
    - :operators: 
      - :operator: branch
        :score: 8.5
      - :operator: render
        :score: 4.8
      - :operator: assignment
        :score: 4.0
      - :operator: html
        :score: 3.0
      - :operator: xml
        :score: 3.0
      - :operator: errors
        :score: 1.8
      - :operator: redirect_to
        :score: 1.6
      - :operator: params
        :score: 1.6
      - :operator: flash
        :score: 1.5
      - :operator: "[]"
        :score: 1.4
      - :operator: save
        :score: 1.3
      - :operator: respond_to
        :score: 1.2
      - :operator: new
        :score: 1.2
      :score: 24.3
      :name: DistrictSetsController#create
    - :operators: 
      - :operator: branch
        :score: 4.0
      - :operator: assignment
        :score: 2.5
      - :operator: district_sets_url
        :score: 1.7
      - :operator: params
        :score: 1.6
      - :operator: head
        :score: 1.5
      - :operator: redirect_to
        :score: 1.5
      - :operator: xml
        :score: 1.4
      - :operator: html
        :score: 1.4
      - :operator: "[]"
        :score: 1.4
      - :operator: respond_to
        :score: 1.2
      - :operator: destroy
        :score: 1.2
      - :operator: find
        :score: 1.2
      :score: 14.9
      :name: DistrictSetsController#destroy
    - :operators: 
      - :operator: branch
        :score: 2.6
      - :operator: assignment
        :score: 2.5
      - :operator: params
        :score: 1.6
      - :operator: render
        :score: 1.5
      - :operator: html
        :score: 1.4
      - :operator: xml
        :score: 1.4
      - :operator: "[]"
        :score: 1.4
      - :operator: paginate
        :score: 1.2
      - :operator: respond_to
        :score: 1.2
      - :operator: lit_fixnum
        :score: 0.4
      :score: 10.7
      :name: DistrictSetsController#index
    - :operators: 
      - :operator: branch
        :score: 2.6
      - :operator: assignment
        :score: 2.5
      - :operator: params
        :score: 1.6
      - :operator: render
        :score: 1.5
      - :operator: html
        :score: 1.4
      - :operator: xml
        :score: 1.4
      - :operator: "[]"
        :score: 1.4
      - :operator: respond_to
        :score: 1.2
      - :operator: find
        :score: 1.2
      :score: 10.3
      :name: DistrictSetsController#show
    - :operators: 
      - :operator: branch
        :score: 2.6
      - :operator: assignment
        :score: 2.5
      - :operator: render
        :score: 1.5
      - :operator: html
        :score: 1.4
      - :operator: xml
        :score: 1.4
      - :operator: respond_to
        :score: 1.2
      - :operator: new
        :score: 1.2
      :score: 7.6
      :name: DistrictSetsController#new
    - :operators: 
      - :operator: params
        :score: 1.6
      - :operator: "[]"
        :score: 1.4
      - :operator: find
        :score: 1.2
      - :operator: assignment
        :score: 1.2
      :score: 4.4
      :name: DistrictSetsController#edit
    :score: 99.4
  - :path: /app/controllers/ballot_styles_controller.rb
    :highest_score: 27.3
    :average_score: 12.6
    :scanned_methods: 
    - :operators: 
      - :operator: branch
        :score: 8.5
      - :operator: assignment
        :score: 4.0
      - :operator: params
        :score: 3.3
      - :operator: render
        :score: 3.2
      - :operator: xml
        :score: 3.0
      - :operator: html
        :score: 3.0
      - :operator: "[]"
        :score: 2.9
      - :operator: errors
        :score: 1.8
      - :operator: head
        :score: 1.6
      - :operator: redirect_to
        :score: 1.6
      - :operator: flash
        :score: 1.5
      - :operator: update_attributes
        :score: 1.3
      - :operator: find
        :score: 1.2
      - :operator: respond_to
        :score: 1.2
      :score: 27.3
      :name: BallotStylesController#update
    - :operators: 
      - :operator: branch
        :score: 8.5
      - :operator: render
        :score: 4.8
      - :operator: assignment
        :score: 4.0
      - :operator: xml
        :score: 3.0
      - :operator: html
        :score: 3.0
      - :operator: errors
        :score: 1.8
      - :operator: redirect_to
        :score: 1.6
      - :operator: params
        :score: 1.6
      - :operator: flash
        :score: 1.5
      - :operator: "[]"
        :score: 1.4
      - :operator: save
        :score: 1.3
      - :operator: respond_to
        :score: 1.2
      - :operator: new
        :score: 1.2
      :score: 24.3
      :name: BallotStylesController#create
    - :operators: 
      - :operator: branch
        :score: 4.0
      - :operator: assignment
        :score: 2.5
      - :operator: ballot_styles_url
        :score: 1.7
      - :operator: params
        :score: 1.6
      - :operator: head
        :score: 1.5
      - :operator: redirect_to
        :score: 1.5
      - :operator: html
        :score: 1.4
      - :operator: xml
        :score: 1.4
      - :operator: "[]"
        :score: 1.4
      - :operator: respond_to
        :score: 1.2
      - :operator: destroy
        :score: 1.2
      - :operator: find
        :score: 1.2
      :score: 14.9
      :name: BallotStylesController#destroy
    - :operators: 
      - :operator: branch
        :score: 2.6
      - :operator: assignment
        :score: 2.5
      - :operator: params
        :score: 1.6
      - :operator: render
        :score: 1.5
      - :operator: html
        :score: 1.4
      - :operator: xml
        :score: 1.4
      - :operator: "[]"
        :score: 1.4
      - :operator: respond_to
        :score: 1.2
      - :operator: paginate
        :score: 1.2
      - :operator: lit_fixnum
        :score: 0.4
      :score: 10.7
      :name: BallotStylesController#index
    - :operators: 
      - :operator: branch
        :score: 2.6
      - :operator: assignment
        :score: 2.5
      - :operator: params
        :score: 1.6
      - :operator: render
        :score: 1.5
      - :operator: html
        :score: 1.4
      - :operator: xml
        :score: 1.4
      - :operator: "[]"
        :score: 1.4
      - :operator: find
        :score: 1.2
      - :operator: respond_to
        :score: 1.2
      :score: 10.3
      :name: BallotStylesController#show
    - :operators: 
      - :operator: branch
        :score: 2.6
      - :operator: assignment
        :score: 2.5
      - :operator: render
        :score: 1.5
      - :operator: html
        :score: 1.4
      - :operator: xml
        :score: 1.4
      - :operator: respond_to
        :score: 1.2
      - :operator: new
        :score: 1.2
      :score: 7.6
      :name: BallotStylesController#new
    - :operators: 
      - :operator: params
        :score: 1.6
      - :operator: "[]"
        :score: 1.4
      - :operator: find
        :score: 1.2
      - :operator: assignment
        :score: 1.2
      :score: 4.4
      :name: BallotStylesController#edit
    - :operators: 
      - :operator: layout
        :score: 1.1
      :score: 1.1
      :name: BallotStylesController#none
    :score: 100.5
  - :path: /app/models/user.rb
    :highest_score: 20.4
    :average_score: 10.2
    :scanned_methods: 
    - :operators: 
      - :operator: to_proc_normal
        :score: 9.0
      - :operator: roles
        :score: 3.4
      - :operator: branch
        :score: 2.5
      - :operator: block_pass
        :score: 1.8
      - :operator: map
        :score: 1.6
      - :operator: to_s
        :score: 1.6
      - :operator: include?
        :score: 1.4
      - :operator: blank?
        :score: 1.4
      :score: 20.4
      :name: User#role?
    - :operators: 
      - :operator: assignment
        :score: 3.8
      - :operator: merge_validates_length_of_password_field_options
        :score: 1.3
      - :operator: hours
        :score: 1.3
      - :operator: branch
        :score: 1.1
      - :operator: acts_as_authentic
        :score: 1.1
      - :operator: attr_accessible
        :score: 1.1
      - :operator: has_many
        :score: 1.1
      - :operator: lit_fixnum
        :score: 0.8
      :score: 7.7
      :name: User#none
    - :operators: 
      - :operator: deliver_password_reset_instructions
        :score: 1.2
      - :operator: reset_perishable_token!
        :score: 1.2
      :score: 2.4
      :name: User#deliver_password_reset_instructions!
    :score: 30.5
  - :path: /app/controllers/password_resets_controller.rb
    :highest_score: 17.9
    :average_score: 8.9
    :scanned_methods: 
    - :operators: 
      - :operator: assignment
        :score: 7.2
      - :operator: flash
        :score: 4.5
      - :operator: branch
        :score: 2.6
      - :operator: deliver_password_reset_instructions!
        :score: 1.6
      - :operator: root_url
        :score: 1.6
      - :operator: params
        :score: 1.6
      - :operator: message
        :score: 1.5
      - :operator: render
        :score: 1.4
      - :operator: redirect_to
        :score: 1.4
      - :operator: "[]"
        :score: 1.4
      - :operator: find_by_email
        :score: 1.2
      :score: 17.9
      :name: PasswordResetsController#create
    - :operators: 
      - :operator: "[]"
        :score: 5.2
      - :operator: assignment
        :score: 3.8
      - :operator: params
        :score: 3.2
      - :operator: root_url
        :score: 1.6
      - :operator: redirect_to
        :score: 1.4
      - :operator: flash
        :score: 1.4
      - :operator: render
        :score: 1.3
      - :operator: save
        :score: 1.2
      - :operator: branch
        :score: 1.2
      :score: 15.8
      :name: PasswordResetsController#update
    - :operators: 
      - :operator: +
        :score: 4.8
      - :operator: assignment
        :score: 2.6
      - :operator: root_url
        :score: 1.6
      - :operator: params
        :score: 1.6
      - :operator: redirect_to
        :score: 1.4
      - :operator: flash
        :score: 1.4
      - :operator: "[]"
        :score: 1.4
      - :operator: branch
        :score: 1.2
      - :operator: find_using_perishable_token
        :score: 1.2
      :score: 13.7
      :name: PasswordResetsController#load_user_using_perishable_token
    - :operators: 
      - :operator: before_filter
        :score: 2.2
      - :operator: private
        :score: 1.1
      :score: 3.3
      :name: PasswordResetsController#none
    - :operators: 
      - :operator: render
        :score: 1.2
      :score: 1.2
      :name: PasswordResetsController#new
    - :operators: 
      - :operator: render
        :score: 1.2
      :score: 1.2
      :name: PasswordResetsController#edit
    :score: 53.1
  - :path: /app/controllers/jurisdictions_controller.rb
    :highest_score: 17.6
    :average_score: 9.9
    :scanned_methods: 
    - :operators: 
      - :operator: current_context
        :score: 4.8
      - :operator: assignment
        :score: 2.8
      - :operator: params
        :score: 1.8
      - :operator: jurisdiction
        :score: 1.8
      - :operator: elections
        :score: 1.6
      - :operator: "[]"
        :score: 1.6
      - :operator: paginate
        :score: 1.4
      - :operator: render
        :score: 1.4
      - :operator: redirect_to
        :score: 1.3
      - :operator: branch
        :score: 1.2
      - :operator: jurisdiction?
        :score: 1.2
      - :operator: lit_fixnum
        :score: 0.4
      :score: 17.6
      :name: JurisdictionsController#current
    - :operators: 
      - :operator: current_context
        :score: 3.0
      - :operator: assignment
        :score: 2.4
      - :operator: params
        :score: 1.6
      - :operator: jurisdiction
        :score: 1.6
      - :operator: "[]"
        :score: 1.4
      - :operator: elections
        :score: 1.4
      - :operator: paginate
        :score: 1.2
      - :operator: lit_fixnum
        :score: 0.4
      :score: 10.8
      :name: JurisdictionsController#elections
    - :operators: 
      - :operator: params
        :score: 1.6
      - :operator: "[]"
        :score: 1.4
      - :operator: find
        :score: 1.2
      - :operator: redirect_to
        :score: 1.2
      - :operator: current_context
        :score: 1.2
      - :operator: assignment
        :score: 1.2
      :score: 6.7
      :name: JurisdictionsController#set
    - :operators: 
      - :operator: params
        :score: 1.6
      - :operator: "[]"
        :score: 1.4
      - :operator: paginate
        :score: 1.2
      - :operator: assignment
        :score: 1.2
      - :operator: lit_fixnum
        :score: 0.4
      :score: 4.7
      :name: JurisdictionsController#change
    :score: 39.8
  - :path: /app/models/ability.rb
    :highest_score: 16.7
    :average_score: 9.4
    :scanned_methods: 
    - :operators: 
      - :operator: can
        :score: 5.9
      - :operator: branch
        :score: 5.1
      - :operator: role?
        :score: 3.9
      - :operator: new
        :score: 3.0
      - :operator: roles
        :score: 1.6
      - :operator: "<<"
        :score: 1.4
      - :operator: assignment
        :score: 1.4
      :score: 16.7
      :name: Ability#initialize
    - :operators: 
      - :operator: include
        :score: 2.2
      :score: 2.2
      :name: Ability#none
    :score: 18.9
  - :path: /app/controllers/application_controller.rb
    :highest_score: 15.8
    :average_score: 6.7
    :scanned_methods: 
    - :operators: 
      - :operator: flash
        :score: 2.8
      - :operator: branch
        :score: 2.4
      - :operator: response
        :score: 1.9
      - :operator: content_type
        :score: 1.7
      - :operator: lookup
        :score: 1.5
      - :operator: request
        :score: 1.5
      - :operator: ==
        :score: 1.3
      - :operator: xhr?
        :score: 1.3
      - :operator: assignment
        :score: 1.2
      - :operator: headers
        :score: 1.2
      - :operator: discard
        :score: 1.2
      - :operator: to_json
        :score: 1.2
      :score: 15.8
      :name: ApplicationController#flash_xhr
    - :operators: 
      - :operator: assignment
        :score: 2.5
      - :operator: root_url
        :score: 1.5
      - :operator: flash
        :score: 1.3
      - :operator: redirect_to
        :score: 1.3
      - :operator: branch
        :score: 1.1
      - :operator: filter_parameter_logging
        :score: 1.1
      - :operator: rescue_from
        :score: 1.1
      - :operator: before_filter
        :score: 1.1
      - :operator: private
        :score: 1.1
      - :operator: helper_method
        :score: 1.1
      - :operator: protect_from_forgery
        :score: 1.1
      - :operator: after_filter
        :score: 1.1
      - :operator: helper
        :score: 1.1
      :score: 13.2
      :name: ApplicationController#none
    - :operators: 
      - :operator: branch
        :score: 5.7
      - :operator: ==
        :score: 3.0
      - :operator: pluralize
        :score: 1.6
      - :operator: assignment
        :score: 1.2
      - :operator: +
        :score: 1.2
      - :operator: lit_fixnum
        :score: 0.4
      :score: 8.5
      :name: ApplicationController#pluralize
    - :operators: 
      - :operator: new_user_session_url
        :score: 1.6
      - :operator: store_location
        :score: 1.4
      - :operator: assignment
        :score: 1.4
      - :operator: flash
        :score: 1.4
      - :operator: redirect_to
        :score: 1.4
      - :operator: branch
        :score: 1.2
      - :operator: current_user
        :score: 1.2
      :score: 7.2
      :name: ApplicationController#require_user
    - :operators: 
      - :operator: account_url
        :score: 1.6
      - :operator: redirect_to
        :score: 1.4
      - :operator: assignment
        :score: 1.4
      - :operator: flash
        :score: 1.4
      - :operator: store_location
        :score: 1.4
      - :operator: branch
        :score: 1.2
      - :operator: current_user
        :score: 1.2
      :score: 7.2
      :name: ApplicationController#require_no_user
    - :operators: 
      - :operator: session
        :score: 2.9
      - :operator: "[]"
        :score: 1.5
      - :operator: branch
        :score: 1.4
      - :operator: redirect_to
        :score: 1.2
      - :operator: assignment
        :score: 1.2
      :score: 5.9
      :name: ApplicationController#redirect_back_or_default
    - :operators: 
      - :operator: branch
        :score: 2.4
      - :operator: strftime
        :score: 1.3
      - :operator: to_s
        :score: 1.3
      - :operator: respond_to?
        :score: 1.2
      - :operator: nil?
        :score: 1.2
      :score: 5.5
      :name: ApplicationController#pretty_date
    - :operators: 
      - :operator: current_user_session
        :score: 2.8
      - :operator: branch
        :score: 2.4
      - :operator: record
        :score: 1.3
      - :operator: assignment
        :score: 1.2
      :score: 4.9
      :name: ApplicationController#current_user
    - :operators: 
      - :operator: request
        :score: 1.4
      - :operator: assignment
        :score: 1.2
      - :operator: session
        :score: 1.2
      - :operator: request_uri
        :score: 1.2
      :score: 4.0
      :name: ApplicationController#store_location
    - :operators: 
      - :operator: session
        :score: 1.4
      - :operator: assignment
        :score: 1.2
      - :operator: new
        :score: 1.2
      :score: 2.9
      :name: ApplicationController#current_context
    - :operators: 
      - :operator: rand
        :score: 1.4
      - :operator: fresh_when
        :score: 1.2
      :score: 2.6
      :name: ApplicationController#disable_etags
    - :operators: 
      - :operator: assignment
        :score: 1.2
      - :operator: branch
        :score: 1.2
      - :operator: find
        :score: 1.2
      :score: 2.1
      :name: ApplicationController#current_user_session
    :score: 79.9
  - :path: /app/controllers/districts_controller.rb
    :highest_score: 15.6
    :average_score: 8.3
    :scanned_methods: 
    - :operators: 
      - :operator: params
        :score: 3.2
      - :operator: "[]"
        :score: 2.8
      - :operator: assignment
        :score: 2.6
      - :operator: districts_url
        :score: 1.6
      - :operator: redirect_to
        :score: 1.4
      - :operator: flash
        :score: 1.4
      - :operator: render
        :score: 1.3
      - :operator: find
        :score: 1.2
      - :operator: handle_district_sets
        :score: 1.2
      - :operator: branch
        :score: 1.2
      - :operator: update_attributes
        :score: 1.2
      :score: 15.6
      :name: DistrictsController#update
    - :operators: 
      - :operator: district_sets
        :score: 3.2
      - :operator: params
        :score: 3.2
      - :operator: assignment
        :score: 2.9
      - :operator: "[]"
        :score: 2.8
      - :operator: branch
        :score: 2.6
      - :operator: find
        :score: 1.5
      - :operator: "<<"
        :score: 1.4
      - :operator: map
        :score: 1.4
      - :operator: clear
        :score: 1.4
      :score: 15.4
      :name: DistrictsController#handle_district_sets
    - :operators: 
      - :operator: assignment
        :score: 3.8
      - :operator: params
        :score: 3.0
      - :operator: "[]"
        :score: 2.6
      - :operator: flash
        :score: 1.4
      - :operator: redirect_to
        :score: 1.4
      - :operator: render
        :score: 1.3
      - :operator: save
        :score: 1.2
      - :operator: branch
        :score: 1.2
      - :operator: new
        :score: 1.2
      :score: 12.7
      :name: DistrictsController#create
    - :operators: 
      - :operator: assignment
        :score: 5.0
      - :operator: find
        :score: 2.6
      - :operator: params
        :score: 1.6
      - :operator: "[]"
        :score: 1.4
      - :operator: id
        :score: 1.3
      - :operator: display_name
        :score: 1.3
      - :operator: branch
        :score: 1.2
      - :operator: collect
        :score: 1.2
      :score: 10.7
      :name: DistrictsController#edit
    - :operators: 
      - :operator: params
        :score: 1.6
      - :operator: districts_url
        :score: 1.4
      - :operator: "[]"
        :score: 1.4
      - :operator: destroy
        :score: 1.2
      - :operator: find
        :score: 1.2
      - :operator: redirect_to
        :score: 1.2
      - :operator: assignment
        :score: 1.2
      :score: 8.1
      :name: DistrictsController#destroy
    - :operators: 
      - :operator: params
        :score: 1.6
      - :operator: "[]"
        :score: 1.4
      - :operator: paginate
        :score: 1.2
      - :operator: assignment
        :score: 1.2
      - :operator: lit_fixnum
        :score: 0.4
      :score: 4.7
      :name: DistrictsController#index
    - :operators: 
      - :operator: params
        :score: 1.6
      - :operator: "[]"
        :score: 1.4
      - :operator: find
        :score: 1.2
      - :operator: assignment
        :score: 1.2
      :score: 4.4
      :name: DistrictsController#show
    - :operators: 
      - :operator: assignment
        :score: 1.2
      - :operator: new
        :score: 1.2
      :score: 1.7
      :name: DistrictsController#new
    - :operators: 
      - :operator: private
        :score: 1.1
      :score: 1.1
      :name: DistrictsController#none
    :score: 74.4
  - :path: /app/models/notifier.rb
    :highest_score: 14.4
    :average_score: 10.3
    :scanned_methods: 
    - :operators: 
      - :operator: perishable_token
        :score: 1.6
      - :operator: email
        :score: 1.4
      - :operator: now
        :score: 1.4
      - :operator: edit_password_reset_url
        :score: 1.4
      - :operator: logger
        :score: 1.4
      - :operator: body
        :score: 1.2
      - :operator: sent_on
        :score: 1.2
      - :operator: info
        :score: 1.2
      - :operator: from
        :score: 1.2
      - :operator: subject
        :score: 1.2
      - :operator: recipients
        :score: 1.2
      :score: 14.4
      :name: Notifier#password_reset_instructions
    - :operators: 
      - :operator: email
        :score: 1.4
      - :operator: from
        :score: 1.2
      - :operator: body
        :score: 1.2
      - :operator: subject
        :score: 1.2
      - :operator: recipients
        :score: 1.2
      :score: 6.2
      :name: Notifier#registration_confirmation
    :score: 20.6
  - :path: /app/controllers/voting_methods_controller.rb
    :highest_score: 12.8
    :average_score: 6.1
    :scanned_methods: 
    - :operators: 
      - :operator: params
        :score: 3.2
      - :operator: "[]"
        :score: 2.8
      - :operator: assignment
        :score: 2.6
      - :operator: redirect_to
        :score: 1.4
      - :operator: flash
        :score: 1.4
      - :operator: render
        :score: 1.3
      - :operator: branch
        :score: 1.2
      - :operator: update_attributes
        :score: 1.2
      - :operator: find
        :score: 1.2
      :score: 12.8
      :name: VotingMethodsController#update
    - :operators: 
      - :operator: assignment
        :score: 2.6
      - :operator: params
        :score: 1.6
      - :operator: flash
        :score: 1.4
      - :operator: redirect_to
        :score: 1.4
      - :operator: "[]"
        :score: 1.4
      - :operator: render
        :score: 1.3
      - :operator: save
        :score: 1.2
      - :operator: branch
        :score: 1.2
      - :operator: new
        :score: 1.2
      :score: 9.9
      :name: VotingMethodsController#create
    - :operators: 
      - :operator: params
        :score: 1.6
      - :operator: "[]"
        :score: 1.4
      - :operator: voting_methods_url
        :score: 1.4
      - :operator: find
        :score: 1.2
      - :operator: destroy
        :score: 1.2
      - :operator: redirect_to
        :score: 1.2
      - :operator: assignment
        :score: 1.2
      :score: 8.1
      :name: VotingMethodsController#destroy
    - :operators: 
      - :operator: params
        :score: 1.6
      - :operator: "[]"
        :score: 1.4
      - :operator: find
        :score: 1.2
      - :operator: assignment
        :score: 1.2
      :score: 4.4
      :name: VotingMethodsController#show
    - :operators: 
      - :operator: params
        :score: 1.6
      - :operator: "[]"
        :score: 1.4
      - :operator: find
        :score: 1.2
      - :operator: assignment
        :score: 1.2
      :score: 4.4
      :name: VotingMethodsController#edit
    - :operators: 
      - :operator: assignment
        :score: 1.2
      - :operator: new
        :score: 1.2
      :score: 1.7
      :name: VotingMethodsController#new
    - :operators: 
      - :operator: assignment
        :score: 1.2
      - :operator: all
        :score: 1.2
      :score: 1.7
      :name: VotingMethodsController#index
    :score: 43.0
  - :path: /app/controllers/district_types_controller.rb
    :highest_score: 12.8
    :average_score: 6.6
    :scanned_methods: 
    - :operators: 
      - :operator: params
        :score: 3.2
      - :operator: "[]"
        :score: 2.8
      - :operator: assignment
        :score: 2.6
      - :operator: redirect_to
        :score: 1.4
      - :operator: flash
        :score: 1.4
      - :operator: render
        :score: 1.3
      - :operator: update_attributes
        :score: 1.2
      - :operator: branch
        :score: 1.2
      - :operator: find
        :score: 1.2
      :score: 12.8
      :name: DistrictTypesController#update
    - :operators: 
      - :operator: assignment
        :score: 2.6
      - :operator: params
        :score: 1.6
      - :operator: flash
        :score: 1.4
      - :operator: redirect_to
        :score: 1.4
      - :operator: "[]"
        :score: 1.4
      - :operator: render
        :score: 1.3
      - :operator: save
        :score: 1.2
      - :operator: branch
        :score: 1.2
      - :operator: new
        :score: 1.2
      :score: 9.9
      :name: DistrictTypesController#create
    - :operators: 
      - :operator: params
        :score: 1.6
      - :operator: district_types_url
        :score: 1.4
      - :operator: "[]"
        :score: 1.4
      - :operator: redirect_to
        :score: 1.2
      - :operator: assignment
        :score: 1.2
      - :operator: destroy
        :score: 1.2
      - :operator: find
        :score: 1.2
      :score: 8.1
      :name: DistrictTypesController#destroy
    - :operators: 
      - :operator: params
        :score: 1.6
      - :operator: "[]"
        :score: 1.4
      - :operator: paginate
        :score: 1.2
      - :operator: assignment
        :score: 1.2
      - :operator: lit_fixnum
        :score: 0.4
      :score: 4.7
      :name: DistrictTypesController#index
    - :operators: 
      - :operator: params
        :score: 1.6
      - :operator: "[]"
        :score: 1.4
      - :operator: find
        :score: 1.2
      - :operator: assignment
        :score: 1.2
      :score: 4.4
      :name: DistrictTypesController#show
    - :operators: 
      - :operator: params
        :score: 1.6
      - :operator: "[]"
        :score: 1.4
      - :operator: find
        :score: 1.2
      - :operator: assignment
        :score: 1.2
      :score: 4.4
      :name: DistrictTypesController#edit
    - :operators: 
      - :operator: assignment
        :score: 1.2
      - :operator: new
        :score: 1.2
      :score: 1.7
      :name: DistrictTypesController#new
    :score: 46.0
  - :path: /app/models/precinct.rb
    :highest_score: 12.8
    :average_score: 7.6
    :scanned_methods: 
    - :operators: 
      - :operator: assignment
        :score: 3.9
      - :operator: district_sets
        :score: 3.5
      - :operator: "[]"
        :score: 3.1
      - :operator: branch
        :score: 2.5
      - :operator: "<<"
        :score: 1.4
      - :operator: districts
        :score: 1.4
      - :operator: include?
        :score: 1.3
      - :operator: reduce
        :score: 1.2
      :score: 12.8
      :name: Precinct#district_sets
    - :operators: 
      - :operator: blank?
        :score: 2.6
      - :operator: branch
        :score: 2.4
      - :operator: ident
        :score: 1.5
      - :operator: save!
        :score: 1.4
      - :operator: hex
        :score: 1.4
      - :operator: assignment
        :score: 1.4
      :score: 7.4
      :name: Precinct#before_validation
    - :operators: 
      - :operator: districts
        :score: 2.8
      - :operator: district_set
        :score: 1.6
      - :operator: "&"
        :score: 1.2
      :score: 5.6
      :name: Precinct#districts_for_election
    - :operators: 
      - :operator: validates_presence_of
        :score: 1.1
      - :operator: attr_accessor
        :score: 1.1
      - :operator: validates_uniqueness_of
        :score: 1.1
      - :operator: has_and_belongs_to_many
        :score: 1.1
      :score: 4.4
      :name: Precinct#none
    :score: 30.2
  - :path: /app/controllers/parties_controller.rb
    :highest_score: 12.8
    :average_score: 6.6
    :scanned_methods: 
    - :operators: 
      - :operator: params
        :score: 3.2
      - :operator: "[]"
        :score: 2.8
      - :operator: assignment
        :score: 2.6
      - :operator: redirect_to
        :score: 1.4
      - :operator: flash
        :score: 1.4
      - :operator: render
        :score: 1.3
      - :operator: update_attributes
        :score: 1.2
      - :operator: branch
        :score: 1.2
      - :operator: find
        :score: 1.2
      :score: 12.8
      :name: PartiesController#update
    - :operators: 
      - :operator: assignment
        :score: 2.6
      - :operator: params
        :score: 1.6
      - :operator: flash
        :score: 1.4
      - :operator: redirect_to
        :score: 1.4
      - :operator: "[]"
        :score: 1.4
      - :operator: render
        :score: 1.3
      - :operator: save
        :score: 1.2
      - :operator: branch
        :score: 1.2
      - :operator: new
        :score: 1.2
      :score: 9.9
      :name: PartiesController#create
    - :operators: 
      - :operator: params
        :score: 1.6
      - :operator: parties_url
        :score: 1.4
      - :operator: "[]"
        :score: 1.4
      - :operator: redirect_to
        :score: 1.2
      - :operator: assignment
        :score: 1.2
      - :operator: destroy
        :score: 1.2
      - :operator: find
        :score: 1.2
      :score: 8.1
      :name: PartiesController#destroy
    - :operators: 
      - :operator: params
        :score: 1.6
      - :operator: "[]"
        :score: 1.4
      - :operator: paginate
        :score: 1.2
      - :operator: assignment
        :score: 1.2
      - :operator: lit_fixnum
        :score: 0.4
      :score: 4.7
      :name: PartiesController#index
    - :operators: 
      - :operator: params
        :score: 1.6
      - :operator: "[]"
        :score: 1.4
      - :operator: find
        :score: 1.2
      - :operator: assignment
        :score: 1.2
      :score: 4.4
      :name: PartiesController#edit
    - :operators: 
      - :operator: params
        :score: 1.6
      - :operator: "[]"
        :score: 1.4
      - :operator: find
        :score: 1.2
      - :operator: assignment
        :score: 1.2
      :score: 4.4
      :name: PartiesController#show
    - :operators: 
      - :operator: assignment
        :score: 1.2
      - :operator: new
        :score: 1.2
      :score: 1.7
      :name: PartiesController#new
    :score: 46.0
  - :path: /app/controllers/user_sessions_controller.rb
    :highest_score: 12.1
    :average_score: 8.0
    :scanned_methods: 
    - :operators: 
      - :operator: branch
        :score: 3.9
      - :operator: assignment
        :score: 2.7
      - :operator: params
        :score: 1.6
      - :operator: page
        :score: 1.5
      - :operator: request
        :score: 1.5
      - :operator: render
        :score: 1.4
      - :operator: "[]"
        :score: 1.4
      - :operator: xhr?
        :score: 1.3
      - :operator: find
        :score: 1.2
      - :operator: update_attributes
        :score: 1.2
      :score: 12.1
      :name: UserSessionsController#update
    - :operators: 
      - :operator: assignment
        :score: 2.6
      - :operator: root_url
        :score: 1.6
      - :operator: params
        :score: 1.6
      - :operator: redirect_to
        :score: 1.4
      - :operator: flash
        :score: 1.4
      - :operator: "[]"
        :score: 1.4
      - :operator: render
        :score: 1.3
      - :operator: branch
        :score: 1.2
      - :operator: save
        :score: 1.2
      - :operator: new
        :score: 1.2
      :score: 11.5
      :name: UserSessionsController#create
    - :operators: 
      - :operator: assignment
        :score: 2.4
      - :operator: root_url
        :score: 1.4
      - :operator: find
        :score: 1.2
      - :operator: redirect_to
        :score: 1.2
      - :operator: flash
        :score: 1.2
      - :operator: destroy
        :score: 1.2
      :score: 6.6
      :name: UserSessionsController#destroy
    - :operators: 
      - :operator: assignment
        :score: 1.2
      - :operator: new
        :score: 1.2
      :score: 1.7
      :name: UserSessionsController#new
    :score: 31.9
  - :path: /app/ttv/pdf_ballot_style.rb
    :highest_score: 11.8
    :average_score: 5.5
    :scanned_methods: 
    - :operators: 
      - :operator: assignment
        :score: 4.4
      - :operator: camelize
        :score: 1.7
      - :operator: logger
        :score: 1.7
      - :operator: +
        :score: 1.5
      - :operator: constantize
        :score: 1.5
      - :operator: error
        :score: 1.5
      - :operator: raise
        :score: 1.5
      - :operator: new
        :score: 1.5
      - :operator: branch
        :score: 1.3
      :score: 11.8
      :name: PDFBallotStyle#get_ballot_config
    - :operators: 
      - :operator: branch
        :score: 5.9
      - :operator: assignment
        :score: 4.0
      - :operator: directory?
        :score: 1.7
      - :operator: ==
        :score: 1.7
      - :operator: push
        :score: 1.5
      - :operator: open
        :score: 1.3
      - :operator: each
        :score: 1.3
      :score: 10.3
      :name: PDFBallotStyle#list
    - :operators: 
      - :operator: logger
        :score: 1.7
      - :operator: warn
        :score: 1.5
      - :operator: read
        :score: 1.4
      - :operator: branch
        :score: 1.3
      - :operator: assignment
        :score: 1.3
      :score: 5.0
      :name: PDFBallotStyle#get_file
    - :operators: 
      - :operator: require
        :score: 3.3
      :score: 3.3
      :name: main#none
    - :operators: 
      - :operator: new
        :score: 1.3
      :score: 1.3
      :name: PDFBallotStyle#get_election_translation
    - :operators: 
      - :operator: new
        :score: 1.3
      :score: 1.3
      :name: PDFBallotStyle#get_ballot_translation
    :score: 33.0
  - :path: /app/models/question.rb
    :highest_score: 11.7
    :average_score: 6.1
    :scanned_methods: 
    - :operators: 
      - :operator: branch
        :score: 3.3
      - :operator: assignment
        :score: 2.9
      - :operator: requesting_district
        :score: 1.9
      - :operator: questions
        :score: 1.8
      - :operator: include?
        :score: 1.7
      - :operator: map
        :score: 1.6
      - :operator: flatten
        :score: 1.4
      - :operator: districts_for_election
        :score: 1.2
      - :operator: compact
        :score: 1.2
      :score: 11.7
      :name: Question#questions_for_precinct_election
    - :operators: 
      - :operator: belongs_to
        :score: 2.2
      - :operator: validates_numericality_of
        :score: 1.1
      - :operator: attr_accessible
        :score: 1.1
      - :operator: validates_presence_of
        :score: 1.1
      :score: 5.5
      :name: Question#none
    - :operators: 
      - :operator: display_name
        :score: 1.2
      :score: 1.2
      :name: Question#to_s
    :score: 18.4
  - :path: /app/models/district.rb
    :highest_score: 11.0
    :average_score: 8.2
    :scanned_methods: 
    - :operators: 
      - :operator: has_and_belongs_to_many
        :score: 2.2
      - :operator: validates_presence_of
        :score: 2.2
      - :operator: has_many
        :score: 2.2
      - :operator: attr_accessible
        :score: 1.1
      - :operator: validates_uniqueness_of
        :score: 1.1
      - :operator: attr_accessor
        :score: 1.1
      - :operator: belongs_to
        :score: 1.1
      :score: 11.0
      :name: District#none
    - :operators: 
      - :operator: blank?
        :score: 2.6
      - :operator: branch
        :score: 2.4
      - :operator: ident
        :score: 1.5
      - :operator: hex
        :score: 1.4
      - :operator: save!
        :score: 1.4
      - :operator: assignment
        :score: 1.4
      :score: 7.4
      :name: District#before_validation
    - :operators: 
      - :operator: id
        :score: 1.5
      - :operator: district_id
        :score: 1.5
      - :operator: contests
        :score: 1.4
      - :operator: ==
        :score: 1.3
      - :operator: assignment
        :score: 1.3
      - :operator: select
        :score: 1.2
      - :operator: branch
        :score: 1.2
      :score: 7.1
      :name: District#contestsForElection
    - :operators: 
      - :operator: id
        :score: 1.5
      - :operator: district_id
        :score: 1.5
      - :operator: questions
        :score: 1.4
      - :operator: ==
        :score: 1.3
      - :operator: assignment
        :score: 1.3
      - :operator: branch
        :score: 1.2
      - :operator: select
        :score: 1.2
      :score: 7.1
      :name: District#questionsForElection
    :score: 32.7
  - :path: /app/models/party.rb
    :highest_score: 8.2
    :average_score: 5.9
    :scanned_methods: 
    - :operators: 
      - :operator: constant_name
        :score: 3.0
      - :operator: const_get
        :score: 2.6
      - :operator: raise
        :score: 1.3
      - :operator: id
        :score: 1.2
      - :operator: branch
        :score: 1.2
      :score: 8.2
      :name: Party#xmlToId
    - :operators: 
      - :operator: blank?
        :score: 2.6
      - :operator: branch
        :score: 2.4
      - :operator: ident
        :score: 1.5
      - :operator: hex
        :score: 1.4
      - :operator: save!
        :score: 1.4
      - :operator: assignment
        :score: 1.4
      :score: 7.4
      :name: Party#before_validation
    - :operators: 
      - :operator: include
        :score: 2.2
      - :operator: validates_uniqueness_of
        :score: 1.1
      - :operator: cache_constants
        :score: 1.1
      - :operator: validates_presence_of
        :score: 1.1
      :score: 5.5
      :name: Party#none
    - :operators: 
      - :operator: display_name
        :score: 1.4
      - :operator: downcase
        :score: 1.2
      :score: 2.6
      :name: Party#idToXml
    :score: 23.7
  - :path: /app/models/district_type.rb
    :highest_score: 8.2
    :average_score: 4.7
    :scanned_methods: 
    - :operators: 
      - :operator: constant_name
        :score: 3.0
      - :operator: const_get
        :score: 2.6
      - :operator: raise
        :score: 1.3
      - :operator: id
        :score: 1.2
      - :operator: branch
        :score: 1.2
      :score: 8.2
      :name: DistrictType#xmlToId
    - :operators: 
      - :operator: include
        :score: 2.2
      - :operator: cache_constants
        :score: 1.1
      :score: 3.3
      :name: DistrictType#none
    - :operators: 
      - :operator: title
        :score: 1.4
      - :operator: downcase
        :score: 1.2
      :score: 2.6
      :name: DistrictType#idToXml
    :score: 14.1
  - :path: /app/models/voting_method.rb
    :highest_score: 8.2
    :average_score: 3.9
    :scanned_methods: 
    - :operators: 
      - :operator: constant_name
        :score: 3.0
      - :operator: const_get
        :score: 2.6
      - :operator: raise
        :score: 1.3
      - :operator: id
        :score: 1.2
      - :operator: branch
        :score: 1.2
      :score: 8.2
      :name: VotingMethod#xmlToId
    - :operators: 
      - :operator: election
        :score: 1.6
      - :operator: default_voting_method_id
        :score: 1.4
      - :operator: find
        :score: 1.2
      :score: 4.2
      :name: VotingMethod#determine_default_voting_method
    - :operators: 
      - :operator: include
        :score: 2.2
      - :operator: cache_constants
        :score: 1.1
      :score: 3.3
      :name: VotingMethod#none
    - :operators: 
      - :operator: display_name
        :score: 1.4
      - :operator: downcase
        :score: 1.2
      :score: 2.6
      :name: VotingMethod#idToXml
    - :operators: 
      - :operator: id
        :score: 1.2
      :score: 1.2
      :name: VotingMethod#to_i
    :score: 19.5
  - :path: /app/models/candidate.rb
    :highest_score: 7.7
    :average_score: 7.6
    :scanned_methods: 
    - :operators: 
      - :operator: belongs_to
        :score: 2.2
      - :operator: attr_accessible
        :score: 2.2
      - :operator: validates_presence_of
        :score: 2.2
      - :operator: validates_uniqueness_of
        :score: 1.1
      :score: 7.7
      :name: Candidate#none
    - :operators: 
      - :operator: blank?
        :score: 2.6
      - :operator: branch
        :score: 2.4
      - :operator: ident
        :score: 1.5
      - :operator: hex
        :score: 1.4
      - :operator: save!
        :score: 1.4
      - :operator: assignment
        :score: 1.4
      :score: 7.4
      :name: Candidate#before_validation
    :score: 15.1
  - :path: /app/models/user_session.rb
    :highest_score: 7.3
    :average_score: 3.6
    :scanned_methods: 
    - :operators: 
      - :operator: assignment
        :score: 3.8
      - :operator: find
        :score: 3.8
      - :operator: branch
        :score: 3.6
      - :operator: id
        :score: 1.3
      :score: 7.3
      :name: UserSession#election
    - :operators: 
      - :operator: generalize_credentials_error_messages
        :score: 1.1
      - :operator: find_by_login_method
        :score: 1.1
      :score: 2.2
      :name: UserSession#none
    - :operators: 
      - :operator: assignment
        :score: 1.2
      :score: 1.2
      :name: UserSession#election_id=
    :score: 10.7
  - :path: /app/helpers/precincts_helper.rb
    :highest_score: 6.9
    :average_score: 5.5
    :scanned_methods: 
    - :operators: 
      - :operator: length
        :score: 2.6
      - :operator: contests_for_precinct_election
        :score: 1.5
      - :operator: all
        :score: 1.5
      - :operator: branch
        :score: 1.2
      - :operator: nil?
        :score: 1.2
      :score: 6.9
      :name: PrecinctsHelper#precinct_contest_count_helper
    - :operators: 
      - :operator: questions_for_precinct_election
        :score: 1.5
      - :operator: length
        :score: 1.3
      - :operator: branch
        :score: 1.2
      - :operator: nil?
        :score: 1.2
      :score: 4.2
      :name: PrecinctsHelper#precinct_question_count_helper
    :score: 11.1
  - :path: /app/models/district_set.rb
    :highest_score: 5.3
    :average_score: 4.3
    :scanned_methods: 
    - :operators: 
      - :operator: connection
        :score: 1.4
      - :operator: id
        :score: 1.4
      - :operator: find
        :score: 1.2
      - :operator: select_values
        :score: 1.2
      - :operator: assignment
        :score: 1.2
      :score: 5.3
      :name: DistrictSet#precincts
    - :operators: 
      - :operator: has_many
        :score: 1.1
      - :operator: has_attached_file
        :score: 1.1
      - :operator: has_and_belongs_to_many
        :score: 1.1
      :score: 3.3
      :name: DistrictSet#none
    :score: 8.6
  - :path: /app/models/user_role.rb
    :highest_score: 2.2
    :average_score: 2.2
    :scanned_methods: 
    - :operators: 
      - :operator: validates_inclusion_of
        :score: 1.1
      - :operator: belongs_to
        :score: 1.1
      :score: 2.2
      :name: UserRole#none
    :score: 2.2
  - :path: /app/ballots/aiga/ballot_config.rb
    :highest_score: 2.2
    :average_score: 2.2
    :scanned_methods: 
    - :operators: 
      - :operator: include
        :score: 2.2
      :score: 2.2
      :name: AigaBallot#none
    - :operators: 
      - :operator: require
        :score: 2.2
      :score: 2.2
      :name: main#none
    :score: 4.4
  - :path: /app/ttv/data_layer.rb
    :highest_score: 1.6
    :average_score: 1.6
    :scanned_methods: 
    - :operators: 
      - :operator: assignment
        :score: 1.1
      - :operator: now
        :score: 1.1
      :score: 1.6
      :name: DataLayer#audit_header_dummy
    :score: 1.6
  - :path: /app/models/ballot_style_template.rb
    :highest_score: 1.0
    :average_score: 1.0
    :scanned_methods: 
    - :operators: 
      - :operator: validates_presence_of
        :score: 1.0
      :score: 1.0
      :name: BallotStyleTemplate#none
    :score: 1.0
  :total: 6356.0
  :average: 15.1
:flay: 
  :total_score: "2518"
  :matches: 
  - :reason: 1) Similar code found in :scope (mass = 1136)
    :matches: 
    - :line: "88"
      :name: app/controllers/ballot_style_templates_controller.rb
    - :line: "88"
      :name: app/controllers/ballot_styles_controller.rb
    - :line: "88"
      :name: app/controllers/languages_controller.rb
    - :line: "87"
      :name: app/controllers/media_controller.rb
  - :reason: 2) IDENTICAL code found in :iter (mass*2 = 676)
    :matches: 
    - :line: "28"
      :name: app/ttv/yaml_import.rb
    - :line: "67"
      :name: app/ttv/yaml_import.rb
  - :reason: 3) Similar code found in :scope (mass = 284)
    :matches: 
    - :line: "46"
      :name: app/controllers/district_types_controller.rb
    - :line: "47"
      :name: app/controllers/parties_controller.rb
  - :reason: 4) Similar code found in :defn (mass = 216)
    :matches: 
    - :line: "28"
      :name: app/controllers/contests_controller.rb
    - :line: "28"
      :name: app/controllers/questions_controller.rb
  - :reason: 5) Similar code found in :defn (mass = 206)
    :matches: 
    - :line: "60"
      :name: app/controllers/contests_controller.rb
    - :line: "50"
      :name: app/controllers/questions_controller.rb
:reek: 
  :matches: 
  - :file_path: app/ballots/aiga/ballot_config.rb
    :code_smells: []

  - :file_path: app/ballots/default/ballot_config.rb
    :code_smells: 
    - :type: LargeClass
      :message: has at least 23 instance variables
      :method: DefaultBallot::BallotConfig
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: DefaultBallot::BallotConfig
    - :type: UncommunicativeName
      :message: has the variable name '@pleaseVoteHeight'
      :method: DefaultBallot::BallotConfig
    - :type: LowCohesion
      :message: refers to item more than self
      :method: DefaultBallot::BallotConfig#create_flow_item
    - :type: UncommunicativeName
      :message: has the parameter name 'r'
      :method: DefaultBallot::BallotConfig#debug_rect
    - :type: LowCohesion
      :message: refers to r more than self
      :method: DefaultBallot::BallotConfig#debug_rect
    - :type: Duplication
      :message: calls @pdf.bounds 5 times
      :method: DefaultBallot::BallotConfig#debug_stroke_bounds
    - :type: Duplication
      :message: calls @pdf.bounds.height twice
      :method: DefaultBallot::BallotConfig#debug_stroke_bounds
    - :type: Duplication
      :message: calls @pdf.stroke_color twice
      :method: DefaultBallot::BallotConfig#debug_stroke_bounds
    - :type: LongMethod
      :message: has approx 9 statements
      :method: DefaultBallot::BallotConfig#debug_stroke_bounds
    - :type: Duplication
      :message: calls rect.left 3 times
      :method: DefaultBallot::BallotConfig#draw_checkbox
    - :type: Duplication
      :message: calls rect.top 3 times
      :method: DefaultBallot::BallotConfig#draw_checkbox
    - :type: LongMethod
      :message: has approx 9 statements
      :method: DefaultBallot::BallotConfig#draw_checkbox
    - :type: Duplication
      :message: calls rect.left 3 times
      :method: DefaultBallot::BallotConfig#frame_item
    - :type: Duplication
      :message: calls rect.right 3 times
      :method: DefaultBallot::BallotConfig#frame_item
    - :type: Duplication
      :message: calls rect.top 4 times
      :method: DefaultBallot::BallotConfig#frame_item
    - :type: LowCohesion
      :message: refers to rect more than self
      :method: DefaultBallot::BallotConfig#frame_item
    - :type: LongParameterList
      :message: has 7 parameters
      :method: DefaultBallot::BallotConfig#initialize
    - :type: Duplication
      :message: calls IO.read(image_path(filename)) twice
      :method: DefaultBallot::BallotConfig#load_image
    - :type: Duplication
      :message: calls image_path(filename) twice
      :method: DefaultBallot::BallotConfig#load_image
    - :type: Duplication
      :message: calls @pdf.bounds 3 times
      :method: DefaultBallot::BallotConfig#page_complete
    - :type: Duplication
      :message: calls @pdf.bounds.width twice
      :method: DefaultBallot::BallotConfig#page_complete
    - :type: Duplication
      :message: calls @pdf.text(bt[:Vote_Both_Sides], :align => :center) twice
      :method: DefaultBallot::BallotConfig#page_complete
    - :type: Duplication
      :message: calls bt twice
      :method: DefaultBallot::BallotConfig#page_complete
    - :type: Duplication
      :message: calls bt[:Vote_Both_Sides] twice
      :method: DefaultBallot::BallotConfig#page_complete
    - :type: ControlCouple
      :message: is controlled by argument last_page
      :method: DefaultBallot::BallotConfig#page_complete
    - :type: Duplication
      :message: calls rect.left twice
      :method: DefaultBallot::BallotConfig#render_column_instructions
    - :type: Duplication
      :message: calls rect.right 3 times
      :method: DefaultBallot::BallotConfig#render_column_instructions
    - :type: Duplication
      :message: calls rect.top 5 times
      :method: DefaultBallot::BallotConfig#render_column_instructions
    - :type: LongMethod
      :message: has approx 11 statements
      :method: DefaultBallot::BallotConfig#render_column_instructions
    - :type: LowCohesion
      :message: refers to rect more than self
      :method: DefaultBallot::BallotConfig#render_column_instructions
    - :type: Duplication
      :message: calls (@pdf.bounds.right - 2) twice
      :method: DefaultBallot::BallotConfig#render_frame
    - :type: Duplication
      :message: calls (bar_width + @padding) 3 times
      :method: DefaultBallot::BallotConfig#render_frame
    - :type: Duplication
      :message: calls @pdf.bounds 8 times
      :method: DefaultBallot::BallotConfig#render_frame
    - :type: Duplication
      :message: calls @pdf.bounds.height 4 times
      :method: DefaultBallot::BallotConfig#render_frame
    - :type: Duplication
      :message: calls @pdf.bounds.right twice
      :method: DefaultBallot::BallotConfig#render_frame
    - :type: Duplication
      :message: calls @pdf.bounds.width twice
      :method: DefaultBallot::BallotConfig#render_frame
    - :type: Duplication
      :message: calls bt twice
      :method: DefaultBallot::BallotConfig#render_frame
    - :type: Duplication
      :message: calls bt[:Sample_Ballot] twice
      :method: DefaultBallot::BallotConfig#render_frame
    - :type: LongMethod
      :message: has approx 12 statements
      :method: DefaultBallot::BallotConfig#render_frame
    - :type: Duplication
      :message: calls @pdf.bounds 4 times
      :method: DefaultBallot::BallotConfig#render_header
    - :type: Duplication
      :message: calls @pdf.bounds.height twice
      :method: DefaultBallot::BallotConfig#render_header
    - :type: Duplication
      :message: calls @pdf.bounds.width twice
      :method: DefaultBallot::BallotConfig#render_header
    - :type: Duplication
      :message: calls @pdf.move_down(3) twice
      :method: DefaultBallot::BallotConfig#render_header
    - :type: Duplication
      :message: calls et 3 times
      :method: DefaultBallot::BallotConfig#render_header
    - :type: Duplication
      :message: calls flow_rect.left twice
      :method: DefaultBallot::BallotConfig#render_header
    - :type: Duplication
      :message: calls flow_rect.top 3 times
      :method: DefaultBallot::BallotConfig#render_header
    - :type: NestedIterators
      :message: contains iterators nested 2 deep
      :method: DefaultBallot::BallotConfig#render_header
    - :type: LongMethod
      :message: has approx 13 statements
      :method: DefaultBallot::BallotConfig#render_header
    - :type: Duplication
      :message: calls Rails.root 6 times
      :method: DefaultBallot::BallotConfig#setup
    - :type: Duplication
      :message: calls pdf.font_families twice
      :method: DefaultBallot::BallotConfig#setup
    - :type: LongMethod
      :message: has approx 6 statements
      :method: DefaultBallot::BallotConfig#setup
    - :type: Duplication
      :message: calls bt 4 times
      :method: DefaultBallot::BallotConfig#short_instructions
    - :type: Duplication
      :message: calls item.open_seat_count twice
      :method: DefaultBallot::BallotConfig#short_instructions
    - :type: LowCohesion
      :message: refers to item more than self
      :method: DefaultBallot::BallotConfig#short_instructions
    - :type: LongMethod
      :message: has approx 6 statements
      :method: DefaultBallot::BallotConfig#stroke_checkbox
    - :type: Duplication
      :message: calls (circle_width - inset) 3 times
      :method: DefaultBallot::ContinuationBox#draw
    - :type: Duplication
      :message: calls (circle_width / 2) 8 times
      :method: DefaultBallot::ContinuationBox#draw
    - :type: Duplication
      :message: calls (rect.left + FlowItem::HPAD) twice
      :method: DefaultBallot::ContinuationBox#draw
    - :type: Duplication
      :message: calls @pdf.bounds twice
      :method: DefaultBallot::ContinuationBox#draw
    - :type: Duplication
      :message: calls @pdf.bounds.height twice
      :method: DefaultBallot::ContinuationBox#draw
    - :type: Duplication
      :message: calls @pdf.move_down(FlowItem::VPAD) 4 times
      :method: DefaultBallot::ContinuationBox#draw
    - :type: Duplication
      :message: calls config.bt twice
      :method: DefaultBallot::ContinuationBox#draw
    - :type: Duplication
      :message: calls rect.left 6 times
      :method: DefaultBallot::ContinuationBox#draw
    - :type: Duplication
      :message: calls rect.right 3 times
      :method: DefaultBallot::ContinuationBox#draw
    - :type: Duplication
      :message: calls rect.top 8 times
      :method: DefaultBallot::ContinuationBox#draw
    - :type: Duplication
      :message: calls rect.width 3 times
      :method: DefaultBallot::ContinuationBox#draw
    - :type: LongMethod
      :message: has approx 35 statements
      :method: DefaultBallot::ContinuationBox#draw
    - :type: ControlCouple
      :message: is controlled by argument last_page
      :method: DefaultBallot::ContinuationBox#draw
    - :type: ControlCouple
      :message: has boolean parameter 'last_page'
      :method: DefaultBallot::ContinuationBox#height
    - :type: UncommunicativeName
      :message: has the variable name 'r'
      :method: DefaultBallot::ContinuationBox#height
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: DefaultBallot::FlowItem
    - :type: LongParameterList
      :message: has 4 parameters
      :method: DefaultBallot::FlowItem#add_ballot_mark
    - :type: Duplication
      :message: calls config.pdf 7 times
      :method: DefaultBallot::FlowItem#draw
    - :type: Duplication
      :message: calls rect.left twice
      :method: DefaultBallot::FlowItem#draw
    - :type: Duplication
      :message: calls rect.right 3 times
      :method: DefaultBallot::FlowItem#draw
    - :type: Duplication
      :message: calls rect.top 5 times
      :method: DefaultBallot::FlowItem#draw
    - :type: LowCohesion
      :message: doesn't depend on instance state
      :method: DefaultBallot::FlowItem#draw
    - :type: LongMethod
      :message: has approx 8 statements
      :method: DefaultBallot::FlowItem#draw
    - :type: LowCohesion
      :message: refers to rect more than self
      :method: DefaultBallot::FlowItem#draw
    - :type: Duplication
      :message: calls config.pdf twice
      :method: DefaultBallot::FlowItem#fits
    - :type: UncommunicativeName
      :message: has the variable name 'r'
      :method: DefaultBallot::FlowItem#fits
    - :type: LowCohesion
      :message: refers to config more than self
      :method: DefaultBallot::FlowItem#fits
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: DefaultBallot::FlowItem::Combo
    - :type: UncommunicativeName
      :message: has the variable name 'f'
      :method: DefaultBallot::FlowItem::Combo#ballot_marks
    - :type: UncommunicativeName
      :message: has the variable name 'f'
      :method: DefaultBallot::FlowItem::Combo#draw
    - :type: Duplication
      :message: calls (r.height > 0) twice
      :method: DefaultBallot::FlowItem::Combo#fits
    - :type: Duplication
      :message: calls config.pdf twice
      :method: DefaultBallot::FlowItem::Combo#fits
    - :type: Duplication
      :message: calls r.height twice
      :method: DefaultBallot::FlowItem::Combo#fits
    - :type: NestedIterators
      :message: contains iterators nested 2 deep
      :method: DefaultBallot::FlowItem::Combo#fits
    - :type: UncommunicativeName
      :message: has the variable name 'f'
      :method: DefaultBallot::FlowItem::Combo#fits
    - :type: UncommunicativeName
      :message: has the variable name 'r'
      :method: DefaultBallot::FlowItem::Combo#fits
    - :type: LowCohesion
      :message: refers to config more than self
      :method: DefaultBallot::FlowItem::Combo#fits
    - :type: LowCohesion
      :message: refers to r more than self
      :method: DefaultBallot::FlowItem::Combo#fits
    - :type: UncommunicativeName
      :message: has the variable name 'r'
      :method: DefaultBallot::FlowItem::Combo#min_width
    - :type: UncommunicativeName
      :message: has the variable name 'f'
      :method: DefaultBallot::FlowItem::Combo#reset_ballot_marks
    - :type: UncommunicativeName
      :message: has the variable name 'f'
      :method: DefaultBallot::FlowItem::Combo#to_s
    - :type: UncommunicativeName
      :message: has the variable name 's'
      :method: DefaultBallot::FlowItem::Combo#to_s
    - :type: DataClump
      :message: takes parameters [config, rect] to 3 methods
      :method: DefaultBallot::FlowItem::Contest
    - :type: SimulatedPolymorphism
      :message: tests (bloc and (rect.height < NEXT_COL_BOUNCE)) at least 3 times
      :method: DefaultBallot::FlowItem::Contest
    - :type: Duplication
      :message: calls (BallotConfig::CHECKBOX_WIDTH + hpad4) 3 times
      :method: DefaultBallot::FlowItem::Contest#draw_ranked
    - :type: Duplication
      :message: calls (VPAD * 2) 3 times
      :method: DefaultBallot::FlowItem::Contest#draw_ranked
    - :type: Duplication
      :message: calls (checkbox_count - 1) twice
      :method: DefaultBallot::FlowItem::Contest#draw_ranked
    - :type: Duplication
      :message: calls (rect.left + HPAD2) twice
      :method: DefaultBallot::FlowItem::Contest#draw_ranked
    - :type: Duplication
      :message: calls (rect.width - spacer) twice
      :method: DefaultBallot::FlowItem::Contest#draw_ranked
    - :type: Duplication
      :message: calls 0.upto((checkbox_count - 1)) twice
      :method: DefaultBallot::FlowItem::Contest#draw_ranked
    - :type: Duplication
      :message: calls @item.candidates 4 times
      :method: DefaultBallot::FlowItem::Contest#draw_ranked
    - :type: Duplication
      :message: calls @item.candidates.count twice
      :method: DefaultBallot::FlowItem::Contest#draw_ranked
    - :type: Duplication
      :message: calls @item.candidates[i] twice
      :method: DefaultBallot::FlowItem::Contest#draw_ranked
    - :type: Duplication
      :message: calls config.et 4 times
      :method: DefaultBallot::FlowItem::Contest#draw_ranked
    - :type: Duplication
      :message: calls config.frame_item(rect, top) twice
      :method: DefaultBallot::FlowItem::Contest#draw_ranked
    - :type: Duplication
      :message: calls config.pdf 4 times
      :method: DefaultBallot::FlowItem::Contest#draw_ranked
    - :type: Duplication
      :message: calls pdf.bounding_box([x, y], :width => (BallotConfig::CHECKBOX_WIDTH)) twice
      :method: DefaultBallot::FlowItem::Contest#draw_ranked
    - :type: Duplication
      :message: calls pdf.bounds 3 times
      :method: DefaultBallot::FlowItem::Contest#draw_ranked
    - :type: Duplication
      :message: calls pdf.bounds.height 3 times
      :method: DefaultBallot::FlowItem::Contest#draw_ranked
    - :type: Duplication
      :message: calls pdf.move_down(VPAD) twice
      :method: DefaultBallot::FlowItem::Contest#draw_ranked
    - :type: Duplication
      :message: calls rect.left 4 times
      :method: DefaultBallot::FlowItem::Contest#draw_ranked
    - :type: Duplication
      :message: calls rect.top 5 times
      :method: DefaultBallot::FlowItem::Contest#draw_ranked
    - :type: Duplication
      :message: calls rect.width 3 times
      :method: DefaultBallot::FlowItem::Contest#draw_ranked
    - :type: NestedIterators
      :message: contains iterators nested 2 deep
      :method: DefaultBallot::FlowItem::Contest#draw_ranked
    - :type: NestedIterators
      :message: contains iterators nested 3 deep
      :method: DefaultBallot::FlowItem::Contest#draw_ranked
    - :type: LongMethod
      :message: has approx 49 statements
      :method: DefaultBallot::FlowItem::Contest#draw_ranked
    - :type: UncommunicativeName
      :message: has the variable name 'f'
      :method: DefaultBallot::FlowItem::Contest#draw_ranked
    - :type: UncommunicativeName
      :message: has the variable name 'hpad4'
      :method: DefaultBallot::FlowItem::Contest#draw_ranked
    - :type: UncommunicativeName
      :message: has the variable name 'i'
      :method: DefaultBallot::FlowItem::Contest#draw_ranked
    - :type: UncommunicativeName
      :message: has the variable name 'j'
      :method: DefaultBallot::FlowItem::Contest#draw_ranked
    - :type: UncommunicativeName
      :message: has the variable name 'x'
      :method: DefaultBallot::FlowItem::Contest#draw_ranked
    - :type: UncommunicativeName
      :message: has the variable name 'y'
      :method: DefaultBallot::FlowItem::Contest#draw_ranked
    - :type: LowCohesion
      :message: refers to pdf more than self
      :method: DefaultBallot::FlowItem::Contest#draw_ranked
    - :type: Duplication
      :message: calls (VPAD * 2) twice
      :method: DefaultBallot::FlowItem::Contest#draw_winner
    - :type: Duplication
      :message: calls (rect.height < NEXT_COL_BOUNCE) twice
      :method: DefaultBallot::FlowItem::Contest#draw_winner
    - :type: Duplication
      :message: calls (rect.top - v) twice
      :method: DefaultBallot::FlowItem::Contest#draw_winner
    - :type: Duplication
      :message: calls @item.open_seat_count twice
      :method: DefaultBallot::FlowItem::Contest#draw_winner
    - :type: Duplication
      :message: calls config.et 3 times
      :method: DefaultBallot::FlowItem::Contest#draw_winner
    - :type: Duplication
      :message: calls config.frame_item(rect, top) 3 times
      :method: DefaultBallot::FlowItem::Contest#draw_winner
    - :type: Duplication
      :message: calls config.pdf 12 times
      :method: DefaultBallot::FlowItem::Contest#draw_winner
    - :type: Duplication
      :message: calls config.pdf.move_down(VPAD) twice
      :method: DefaultBallot::FlowItem::Contest#draw_winner
    - :type: Duplication
      :message: calls config.pdf.page_number twice
      :method: DefaultBallot::FlowItem::Contest#draw_winner
    - :type: Duplication
      :message: calls rect.height twice
      :method: DefaultBallot::FlowItem::Contest#draw_winner
    - :type: Duplication
      :message: calls rect.left twice
      :method: DefaultBallot::FlowItem::Contest#draw_winner
    - :type: Duplication
      :message: calls rect.top 4 times
      :method: DefaultBallot::FlowItem::Contest#draw_winner
    - :type: LongMethod
      :message: has approx 28 statements
      :method: DefaultBallot::FlowItem::Contest#draw_winner
    - :type: UncommunicativeName
      :message: has the variable name 'a'
      :method: DefaultBallot::FlowItem::Contest#draw_winner
    - :type: UncommunicativeName
      :message: has the variable name 'b'
      :method: DefaultBallot::FlowItem::Contest#draw_winner
    - :type: UncommunicativeName
      :message: has the variable name 'v'
      :method: DefaultBallot::FlowItem::Contest#draw_winner
    - :type: LowCohesion
      :message: refers to config more than self
      :method: DefaultBallot::FlowItem::Contest#draw_winner
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: DefaultBallot::FlowItem::Header
    - :type: Duplication
      :message: calls config.pdf 5 times
      :method: DefaultBallot::FlowItem::Header#draw
    - :type: Duplication
      :message: calls rect.top twice
      :method: DefaultBallot::FlowItem::Header#draw
    - :type: LongMethod
      :message: has approx 7 statements
      :method: DefaultBallot::FlowItem::Header#draw
    - :type: LowCohesion
      :message: refers to config more than self
      :method: DefaultBallot::FlowItem::Header#draw
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: DefaultBallot::FlowItem::Question
    - :type: Duplication
      :message: calls config.bt twice
      :method: DefaultBallot::FlowItem::Question#draw
    - :type: Duplication
      :message: calls config.et twice
      :method: DefaultBallot::FlowItem::Question#draw
    - :type: Duplication
      :message: calls config.pdf 13 times
      :method: DefaultBallot::FlowItem::Question#draw
    - :type: Duplication
      :message: calls config.pdf.move_down(VPAD) twice
      :method: DefaultBallot::FlowItem::Question#draw
    - :type: Duplication
      :message: calls config.pdf.page_number twice
      :method: DefaultBallot::FlowItem::Question#draw
    - :type: Duplication
      :message: calls rect.top twice
      :method: DefaultBallot::FlowItem::Question#draw
    - :type: LongMethod
      :message: has approx 21 statements
      :method: DefaultBallot::FlowItem::Question#draw
    - :type: LowCohesion
      :message: refers to config more than self
      :method: DefaultBallot::FlowItem::Question#draw
  - :file_path: app/ballots/nh/ballot_config.rb
    :code_smells: 
    - :type: UncommunicativeName
      :message: has the parameter name 'i'
      :method: NhBallot::BallotConfig#col_loc
    - :type: LowCohesion
      :message: refers to item more than self
      :method: NhBallot::BallotConfig#create_flow_item
    - :type: LongParameterList
      :message: has 7 parameters
      :method: NhBallot::BallotConfig#initialize
    - :type: Duplication
      :message: calls @pdf.bounds 6 times
      :method: NhBallot::BallotConfig#page_complete
    - :type: Duplication
      :message: calls @pdf.bounds.height 5 times
      :method: NhBallot::BallotConfig#page_complete
    - :type: Duplication
      :message: calls ballot_translation twice
      :method: NhBallot::BallotConfig#page_complete
    - :type: NestedIterators
      :message: contains iterators nested 2 deep
      :method: NhBallot::BallotConfig#page_complete
    - :type: LongMethod
      :message: has approx 16 statements
      :method: NhBallot::BallotConfig#page_complete
    - :type: Duplication
      :message: calls @col_headers.length twice
      :method: NhBallot::BallotConfig#render_header
    - :type: Duplication
      :message: calls @pdf.fill_color("000000") twice
      :method: NhBallot::BallotConfig#render_header
    - :type: Duplication
      :message: calls flow_rect.left twice
      :method: NhBallot::BallotConfig#render_header
    - :type: Duplication
      :message: calls flow_rect.top twice
      :method: NhBallot::BallotConfig#render_header
    - :type: NestedIterators
      :message: contains iterators nested 2 deep
      :method: NhBallot::BallotConfig#render_header
    - :type: LongMethod
      :message: has approx 17 statements
      :method: NhBallot::BallotConfig#render_header
    - :type: UncommunicativeName
      :message: has the variable name 'i'
      :method: NhBallot::BallotConfig#render_header
    - :type: Duplication
      :message: calls (CHECKBOX_HEIGHT / 2) twice
      :method: NhBallot::BallotConfig#stroke_checkbox
    - :type: Duplication
      :message: calls (CHECKBOX_WIDTH / 2) twice
      :method: NhBallot::BallotConfig#stroke_checkbox
    - :type: LongMethod
      :message: has approx 6 statements
      :method: NhBallot::BallotConfig#stroke_checkbox
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: NhBallot::FlowItem
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: NhBallot::FlowItem::NHContest
    - :type: DataClump
      :message: takes parameters [config, rect] to 3 methods
      :method: NhBallot::FlowItem::NHContest
    - :type: Duplication
      :message: calls (config.col_width * (i + 1)) twice
      :method: NhBallot::FlowItem::NHContest#draw
    - :type: Duplication
      :message: calls (config.col_width * 2) twice
      :method: NhBallot::FlowItem::NHContest#draw
    - :type: Duplication
      :message: calls (config.col_width * 3) twice
      :method: NhBallot::FlowItem::NHContest#draw
    - :type: Duplication
      :message: calls (config.col_width * 4) twice
      :method: NhBallot::FlowItem::NHContest#draw
    - :type: Duplication
      :message: calls (i + 1) twice
      :method: NhBallot::FlowItem::NHContest#draw
    - :type: Duplication
      :message: calls (rect.left + (config.col_width * 2)) twice
      :method: NhBallot::FlowItem::NHContest#draw
    - :type: Duplication
      :message: calls (rect.left + (config.col_width * 3)) twice
      :method: NhBallot::FlowItem::NHContest#draw
    - :type: Duplication
      :message: calls (rect.left + (config.col_width * 4)) twice
      :method: NhBallot::FlowItem::NHContest#draw
    - :type: Duplication
      :message: calls candidate.party twice
      :method: NhBallot::FlowItem::NHContest#draw
    - :type: Duplication
      :message: calls candidate.party.idToXml twice
      :method: NhBallot::FlowItem::NHContest#draw
    - :type: Duplication
      :message: calls config.col_width 11 times
      :method: NhBallot::FlowItem::NHContest#draw
    - :type: Duplication
      :message: calls config.pdf 13 times
      :method: NhBallot::FlowItem::NHContest#draw
    - :type: Duplication
      :message: calls config.pdf.font("Helvetica", :size => (TINY_FONT)) twice
      :method: NhBallot::FlowItem::NHContest#draw
    - :type: Duplication
      :message: calls rect.left 11 times
      :method: NhBallot::FlowItem::NHContest#draw
    - :type: Duplication
      :message: calls rect.top 5 times
      :method: NhBallot::FlowItem::NHContest#draw
    - :type: NestedIterators
      :message: contains iterators nested 2 deep
      :method: NhBallot::FlowItem::NHContest#draw
    - :type: LongMethod
      :message: has approx 29 statements
      :method: NhBallot::FlowItem::NHContest#draw
    - :type: UncommunicativeName
      :message: has the variable name 'i'
      :method: NhBallot::FlowItem::NHContest#draw
    - :type: UncommunicativeName
      :message: has the variable name 'r'
      :method: NhBallot::FlowItem::NHContest#draw
    - :type: LowCohesion
      :message: refers to config more than self
      :method: NhBallot::FlowItem::NHContest#draw
    - :type: Duplication
      :message: calls (rect.width - HPAD2) twice
      :method: NhBallot::FlowItem::NHContest#draw_column
    - :type: Duplication
      :message: calls candidates.length twice
      :method: NhBallot::FlowItem::NHContest#draw_column
    - :type: Duplication
      :message: calls candidates[0] twice
      :method: NhBallot::FlowItem::NHContest#draw_column
    - :type: Duplication
      :message: calls candidates[0].party twice
      :method: NhBallot::FlowItem::NHContest#draw_column
    - :type: Duplication
      :message: calls candidates[0].party.idToXml twice
      :method: NhBallot::FlowItem::NHContest#draw_column
    - :type: Duplication
      :message: calls config.et twice
      :method: NhBallot::FlowItem::NHContest#draw_column
    - :type: Duplication
      :message: calls config.pdf 13 times
      :method: NhBallot::FlowItem::NHContest#draw_column
    - :type: Duplication
      :message: calls config.pdf.move_down(10) twice
      :method: NhBallot::FlowItem::NHContest#draw_column
    - :type: Duplication
      :message: calls rect.width twice
      :method: NhBallot::FlowItem::NHContest#draw_column
    - :type: NestedIterators
      :message: contains iterators nested 3 deep
      :method: NhBallot::FlowItem::NHContest#draw_column
    - :type: LowCohesion
      :message: doesn't depend on instance state
      :method: NhBallot::FlowItem::NHContest#draw_column
    - :type: LongMethod
      :message: has approx 22 statements
      :method: NhBallot::FlowItem::NHContest#draw_column
    - :type: UncommunicativeName
      :message: has the variable name 'i'
      :method: NhBallot::FlowItem::NHContest#draw_column
    - :type: LowCohesion
      :message: refers to config more than self
      :method: NhBallot::FlowItem::NHContest#draw_column
    - :type: Duplication
      :message: calls config.pdf 7 times
      :method: NhBallot::FlowItem::NHContest#draw_writein_column
    - :type: Duplication
      :message: calls rect.width twice
      :method: NhBallot::FlowItem::NHContest#draw_writein_column
    - :type: NestedIterators
      :message: contains iterators nested 2 deep
      :method: NhBallot::FlowItem::NHContest#draw_writein_column
    - :type: LongMethod
      :message: has approx 10 statements
      :method: NhBallot::FlowItem::NHContest#draw_writein_column
    - :type: LowCohesion
      :message: refers to config more than self
      :method: NhBallot::FlowItem::NHContest#draw_writein_column
  - :file_path: app/controllers/application_controller.rb
    :code_smells: 
    - :type: Duplication
      :message: calls current_user_session twice
      :method: ApplicationController#current_user
    - :type: Duplication
      :message: calls flash twice
      :method: ApplicationController#flash_xhr
    - :type: LowCohesion
      :message: doesn't depend on instance state
      :method: ApplicationController#pluralize
    - :type: LowCohesion
      :message: refers to count more than self
      :method: ApplicationController#pluralize
    - :type: LowCohesion
      :message: doesn't depend on instance state
      :method: ApplicationController#pretty_date
    - :type: UncommunicativeName
      :message: has the parameter name 'd'
      :method: ApplicationController#pretty_date
    - :type: LowCohesion
      :message: refers to d more than self
      :method: ApplicationController#pretty_date
    - :type: Duplication
      :message: calls session twice
      :method: ApplicationController#redirect_back_or_default
  - :file_path: app/controllers/ballot_style_templates_controller.rb
    :code_smells: 
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: BallotStyleTemplatesController
    - :type: Duplication
      :message: calls format.html twice
      :method: BallotStyleTemplatesController#create
    - :type: Duplication
      :message: calls format.xml twice
      :method: BallotStyleTemplatesController#create
    - :type: NestedIterators
      :message: contains iterators nested 2 deep
      :method: BallotStyleTemplatesController#create
    - :type: LongMethod
      :message: has approx 6 statements
      :method: BallotStyleTemplatesController#create
    - :type: NestedIterators
      :message: contains iterators nested 2 deep
      :method: BallotStyleTemplatesController#destroy
    - :type: NestedIterators
      :message: contains iterators nested 2 deep
      :method: BallotStyleTemplatesController#index
    - :type: NestedIterators
      :message: contains iterators nested 2 deep
      :method: BallotStyleTemplatesController#new
    - :type: NestedIterators
      :message: contains iterators nested 2 deep
      :method: BallotStyleTemplatesController#show
    - :type: Duplication
      :message: calls format.html twice
      :method: BallotStyleTemplatesController#update
    - :type: Duplication
      :message: calls format.xml twice
      :method: BallotStyleTemplatesController#update
    - :type: Duplication
      :message: calls params twice
      :method: BallotStyleTemplatesController#update
    - :type: NestedIterators
      :message: contains iterators nested 2 deep
      :method: BallotStyleTemplatesController#update
    - :type: LongMethod
      :message: has approx 6 statements
      :method: BallotStyleTemplatesController#update
  - :file_path: app/controllers/ballot_styles_controller.rb
    :code_smells: 
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: BallotStylesController
    - :type: Duplication
      :message: calls format.html twice
      :method: BallotStylesController#create
    - :type: Duplication
      :message: calls format.xml twice
      :method: BallotStylesController#create
    - :type: NestedIterators
      :message: contains iterators nested 2 deep
      :method: BallotStylesController#create
    - :type: LongMethod
      :message: has approx 6 statements
      :method: BallotStylesController#create
    - :type: NestedIterators
      :message: contains iterators nested 2 deep
      :method: BallotStylesController#destroy
    - :type: NestedIterators
      :message: contains iterators nested 2 deep
      :method: BallotStylesController#index
    - :type: NestedIterators
      :message: contains iterators nested 2 deep
      :method: BallotStylesController#new
    - :type: NestedIterators
      :message: contains iterators nested 2 deep
      :method: BallotStylesController#show
    - :type: Duplication
      :message: calls format.html twice
      :method: BallotStylesController#update
    - :type: Duplication
      :message: calls format.xml twice
      :method: BallotStylesController#update
    - :type: Duplication
      :message: calls params twice
      :method: BallotStylesController#update
    - :type: NestedIterators
      :message: contains iterators nested 2 deep
      :method: BallotStylesController#update
    - :type: LongMethod
      :message: has approx 6 statements
      :method: BallotStylesController#update
  - :file_path: app/controllers/candidates_controller.rb
    :code_smells: 
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: CandidatesController
    - :type: SimulatedPolymorphism
      :message: tests request.xhr? at least 4 times
      :method: CandidatesController
    - :type: SimulatedPolymorphism
      :message: tests success at least 3 times
      :method: CandidatesController
    - :type: Duplication
      :message: calls flash twice
      :method: CandidatesController#destroy
    - :type: LongMethod
      :message: has approx 8 statements
      :method: CandidatesController#destroy
    - :type: Duplication
      :message: calls @candidate.contest twice
      :method: CandidatesController#new
    - :type: Duplication
      :message: calls dom_id(@candidate.contest) twice
      :method: CandidatesController#new
    - :type: Duplication
      :message: calls params twice
      :method: CandidatesController#new
    - :type: Duplication
      :message: calls params[:contest_id] twice
      :method: CandidatesController#new
    - :type: LongMethod
      :message: has approx 6 statements
      :method: CandidatesController#new
    - :type: Duplication
      :message: calls dom_id(@candidate) twice
      :method: CandidatesController#update
    - :type: Duplication
      :message: calls params twice
      :method: CandidatesController#update
    - :type: LongMethod
      :message: has approx 10 statements
      :method: CandidatesController#update
  - :file_path: app/controllers/contests_controller.rb
    :code_smells: 
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: ContestsController
    - :type: SimulatedPolymorphism
      :message: tests request.xhr? at least 6 times
      :method: ContestsController
    - :type: SimulatedPolymorphism
      :message: tests success at least 6 times
      :method: ContestsController
    - :type: Duplication
      :message: calls @contest.district 3 times
      :method: ContestsController#create
    - :type: Duplication
      :message: calls dom_id(@contest.district) twice
      :method: ContestsController#create
    - :type: LongMethod
      :message: has approx 8 statements
      :method: ContestsController#create
    - :type: LongMethod
      :message: has approx 8 statements
      :method: ContestsController#destroy
    - :type: Duplication
      :message: calls (contest_index + 1) twice
      :method: ContestsController#move
    - :type: Duplication
      :message: calls (contest_index - 1) twice
      :method: ContestsController#move
    - :type: Duplication
      :message: calls (direction == "up") twice
      :method: ContestsController#move
    - :type: Duplication
      :message: calls @contest.display_name twice
      :method: ContestsController#move
    - :type: Duplication
      :message: calls @contest.election 3 times
      :method: ContestsController#move
    - :type: Duplication
      :message: calls @contest.id twice
      :method: ContestsController#move
    - :type: Duplication
      :message: calls contests[(contest_index + 1)] twice
      :method: ContestsController#move
    - :type: Duplication
      :message: calls contests[(contest_index - 1)] twice
      :method: ContestsController#move
    - :type: Duplication
      :message: calls contests[contest_index] twice
      :method: ContestsController#move
    - :type: Duplication
      :message: calls flash twice
      :method: ContestsController#move
    - :type: Duplication
      :message: calls params 4 times
      :method: ContestsController#move
    - :type: Duplication
      :message: calls params[:page] twice
      :method: ContestsController#move
    - :type: Duplication
      :message: calls render(:partial => "contests/contest_list", :locals => ({ :election => (@contest.election), :page => (params[:page]) })) twice
      :method: ContestsController#move
    - :type: LongMethod
      :message: has approx 16 statements
      :method: ContestsController#move
    - :type: UncommunicativeName
      :message: has the variable name 'c1'
      :method: ContestsController#move
    - :type: UncommunicativeName
      :message: has the variable name 'c2'
      :method: ContestsController#move
    - :type: Duplication
      :message: calls @contest.district twice
      :method: ContestsController#new
    - :type: Duplication
      :message: calls dom_id(@contest.district) twice
      :method: ContestsController#new
    - :type: Duplication
      :message: calls params twice
      :method: ContestsController#new
    - :type: LongMethod
      :message: has approx 6 statements
      :method: ContestsController#new
    - :type: Duplication
      :message: calls params twice
      :method: ContestsController#show
    - :type: Duplication
      :message: calls (error_candidates.length == 0) twice
      :method: ContestsController#update_attributes
    - :type: Duplication
      :message: calls @contest.candidates 3 times
      :method: ContestsController#update_attributes
    - :type: Duplication
      :message: calls @contest.candidates.length twice
      :method: ContestsController#update_attributes
    - :type: Duplication
      :message: calls dom_id(@contest) 3 times
      :method: ContestsController#update_attributes
    - :type: Duplication
      :message: calls error_candidates.length twice
      :method: ContestsController#update_attributes
    - :type: Duplication
      :message: calls params twice
      :method: ContestsController#update_attributes
    - :type: LongMethod
      :message: has approx 10 statements
      :method: ContestsController#update_attributes
    - :type: UncommunicativeName
      :message: has the variable name 'c'
      :method: ContestsController#update_attributes
    - :type: UncommunicativeName
      :message: has the variable name 'howMany'
      :method: ContestsController#update_attributes
    - :type: Duplication
      :message: calls dom_id(@contest) twice
      :method: ContestsController#update_contest
    - :type: Duplication
      :message: calls params twice
      :method: ContestsController#update_contest
    - :type: LongMethod
      :message: has approx 10 statements
      :method: ContestsController#update_contest
  - :file_path: app/controllers/district_sets_controller.rb
    :code_smells: 
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: DistrictSetsController
    - :type: Duplication
      :message: calls format.html twice
      :method: DistrictSetsController#create
    - :type: Duplication
      :message: calls format.xml twice
      :method: DistrictSetsController#create
    - :type: NestedIterators
      :message: contains iterators nested 2 deep
      :method: DistrictSetsController#create
    - :type: LongMethod
      :message: has approx 6 statements
      :method: DistrictSetsController#create
    - :type: NestedIterators
      :message: contains iterators nested 2 deep
      :method: DistrictSetsController#destroy
    - :type: NestedIterators
      :message: contains iterators nested 2 deep
      :method: DistrictSetsController#index
    - :type: NestedIterators
      :message: contains iterators nested 2 deep
      :method: DistrictSetsController#new
    - :type: NestedIterators
      :message: contains iterators nested 2 deep
      :method: DistrictSetsController#show
    - :type: Duplication
      :message: calls format.html twice
      :method: DistrictSetsController#update
    - :type: Duplication
      :message: calls format.xml twice
      :method: DistrictSetsController#update
    - :type: Duplication
      :message: calls params twice
      :method: DistrictSetsController#update
    - :type: NestedIterators
      :message: contains iterators nested 2 deep
      :method: DistrictSetsController#update
    - :type: LongMethod
      :message: has approx 6 statements
      :method: DistrictSetsController#update
  - :file_path: app/controllers/district_types_controller.rb
    :code_smells: 
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: DistrictTypesController
    - :type: Duplication
      :message: calls params twice
      :method: DistrictTypesController#update
  - :file_path: app/controllers/districts_controller.rb
    :code_smells: 
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: DistrictsController
    - :type: Duplication
      :message: calls params twice
      :method: DistrictsController#create
    - :type: Duplication
      :message: calls @district.district_sets twice
      :method: DistrictsController#handle_district_sets
    - :type: Duplication
      :message: calls params twice
      :method: DistrictsController#handle_district_sets
    - :type: Duplication
      :message: calls params twice
      :method: DistrictsController#update
  - :file_path: app/controllers/elections_controller.rb
    :code_smells: 
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: ElectionsController
    - :type: SimulatedPolymorphism
      :message: tests success at least 3 times
      :method: ElectionsController
    - :type: Duplication
      :message: calls elections_url twice
      :method: ElectionsController#import
    - :type: Duplication
      :message: calls flash 3 times
      :method: ElectionsController#import
    - :type: Duplication
      :message: calls params twice
      :method: ElectionsController#import
    - :type: Duplication
      :message: calls params[:importFile] twice
      :method: ElectionsController#import
    - :type: Duplication
      :message: calls redirect_to(elections_url) twice
      :method: ElectionsController#import
    - :type: LongMethod
      :message: has approx 9 statements
      :method: ElectionsController#import
    - :type: Duplication
      :message: calls elections_url twice
      :method: ElectionsController#import_yml
    - :type: Duplication
      :message: calls flash 3 times
      :method: ElectionsController#import_yml
    - :type: Duplication
      :message: calls params twice
      :method: ElectionsController#import_yml
    - :type: Duplication
      :message: calls params[:importFile] twice
      :method: ElectionsController#import_yml
    - :type: Duplication
      :message: calls redirect_to(elections_url) twice
      :method: ElectionsController#import_yml
    - :type: LongMethod
      :message: has approx 10 statements
      :method: ElectionsController#import_yml
    - :type: Duplication
      :message: calls UserSession.find twice
      :method: ElectionsController#index
    - :type: Duplication
      :message: calls params 5 times
      :method: ElectionsController#show
    - :type: Duplication
      :message: calls params[:page] 4 times
      :method: ElectionsController#show
    - :type: LongMethod
      :message: has approx 6 statements
      :method: ElectionsController#show
    - :type: Duplication
      :message: calls params twice
      :method: ElectionsController#translate
    - :type: Duplication
      :message: calls dom_id(@election) twice
      :method: ElectionsController#update
    - :type: Duplication
      :message: calls params twice
      :method: ElectionsController#update
    - :type: LongMethod
      :message: has approx 11 statements
      :method: ElectionsController#update
  - :file_path: app/controllers/jurisdictions_controller.rb
    :code_smells: 
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: JurisdictionsController
    - :type: Duplication
      :message: calls current_context 3 times
      :method: JurisdictionsController#current
    - :type: Duplication
      :message: calls current_context twice
      :method: JurisdictionsController#elections
  - :file_path: app/controllers/languages_controller.rb
    :code_smells: 
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: LanguagesController
    - :type: Duplication
      :message: calls format.html twice
      :method: LanguagesController#create
    - :type: Duplication
      :message: calls format.xml twice
      :method: LanguagesController#create
    - :type: NestedIterators
      :message: contains iterators nested 2 deep
      :method: LanguagesController#create
    - :type: LongMethod
      :message: has approx 6 statements
      :method: LanguagesController#create
    - :type: NestedIterators
      :message: contains iterators nested 2 deep
      :method: LanguagesController#destroy
    - :type: NestedIterators
      :message: contains iterators nested 2 deep
      :method: LanguagesController#index
    - :type: NestedIterators
      :message: contains iterators nested 2 deep
      :method: LanguagesController#new
    - :type: NestedIterators
      :message: contains iterators nested 2 deep
      :method: LanguagesController#show
    - :type: Duplication
      :message: calls format.html twice
      :method: LanguagesController#update
    - :type: Duplication
      :message: calls format.xml twice
      :method: LanguagesController#update
    - :type: Duplication
      :message: calls params twice
      :method: LanguagesController#update
    - :type: NestedIterators
      :message: contains iterators nested 2 deep
      :method: LanguagesController#update
    - :type: LongMethod
      :message: has approx 6 statements
      :method: LanguagesController#update
  - :file_path: app/controllers/maintain_controller.rb
    :code_smells: 
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: MaintainController
    - :type: Duplication
      :message: calls Election.find(params[:election_to_export][:id]) twice
      :method: MaintainController#export_file
    - :type: Duplication
      :message: calls election.display_name twice
      :method: MaintainController#export_file
    - :type: Duplication
      :message: calls election.display_name.gsub(" ", "_") twice
      :method: MaintainController#export_file
    - :type: Duplication
      :message: calls flash 3 times
      :method: MaintainController#export_file
    - :type: Duplication
      :message: calls flash[:notice] = "Export succeeded." twice
      :method: MaintainController#export_file
    - :type: Duplication
      :message: calls params 4 times
      :method: MaintainController#export_file
    - :type: Duplication
      :message: calls params[:commit] twice
      :method: MaintainController#export_file
    - :type: Duplication
      :message: calls params[:election_to_export] twice
      :method: MaintainController#export_file
    - :type: Duplication
      :message: calls params[:election_to_export][:id] twice
      :method: MaintainController#export_file
    - :type: LongMethod
      :message: has approx 12 statements
      :method: MaintainController#export_file
    - :type: Duplication
      :message: calls elections_url 3 times
      :method: MaintainController#import_batch
    - :type: Duplication
      :message: calls flash 3 times
      :method: MaintainController#import_batch
    - :type: Duplication
      :message: calls import_handler.import_batch twice
      :method: MaintainController#import_batch
    - :type: Duplication
      :message: calls params 5 times
      :method: MaintainController#import_batch
    - :type: Duplication
      :message: calls params[:commit] twice
      :method: MaintainController#import_batch
    - :type: Duplication
      :message: calls params[:import_folder_path] 3 times
      :method: MaintainController#import_batch
    - :type: Duplication
      :message: calls redirect_to(elections_url) 3 times
      :method: MaintainController#import_batch
    - :type: LongMethod
      :message: has approx 12 statements
      :method: MaintainController#import_batch
    - :type: Duplication
      :message: calls elections_url twice
      :method: MaintainController#import_file
    - :type: Duplication
      :message: calls flash 3 times
      :method: MaintainController#import_file
    - :type: Duplication
      :message: calls params 5 times
      :method: MaintainController#import_file
    - :type: Duplication
      :message: calls params[:commit] twice
      :method: MaintainController#import_file
    - :type: Duplication
      :message: calls params[:importFile] 3 times
      :method: MaintainController#import_file
    - :type: Duplication
      :message: calls redirect_to(elections_url) twice
      :method: MaintainController#import_file
    - :type: LongMethod
      :message: has approx 11 statements
      :method: MaintainController#import_file
  - :file_path: app/controllers/media_controller.rb
    :code_smells: 
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: MediaController
    - :type: Duplication
      :message: calls format.html twice
      :method: MediaController#create
    - :type: Duplication
      :message: calls format.xml twice
      :method: MediaController#create
    - :type: NestedIterators
      :message: contains iterators nested 2 deep
      :method: MediaController#create
    - :type: LongMethod
      :message: has approx 6 statements
      :method: MediaController#create
    - :type: NestedIterators
      :message: contains iterators nested 2 deep
      :method: MediaController#destroy
    - :type: NestedIterators
      :message: contains iterators nested 2 deep
      :method: MediaController#index
    - :type: NestedIterators
      :message: contains iterators nested 2 deep
      :method: MediaController#new
    - :type: NestedIterators
      :message: contains iterators nested 2 deep
      :method: MediaController#show
    - :type: Duplication
      :message: calls format.html twice
      :method: MediaController#update
    - :type: Duplication
      :message: calls format.xml twice
      :method: MediaController#update
    - :type: Duplication
      :message: calls params twice
      :method: MediaController#update
    - :type: NestedIterators
      :message: contains iterators nested 2 deep
      :method: MediaController#update
    - :type: LongMethod
      :message: has approx 6 statements
      :method: MediaController#update
  - :file_path: app/controllers/parties_controller.rb
    :code_smells: 
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: PartiesController
    - :type: Duplication
      :message: calls params twice
      :method: PartiesController#update
  - :file_path: app/controllers/password_resets_controller.rb
    :code_smells: 
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: PasswordResetsController
    - :type: Duplication
      :message: calls flash 3 times
      :method: PasswordResetsController#create
    - :type: LongMethod
      :message: has approx 7 statements
      :method: PasswordResetsController#create
    - :type: Duplication
      :message: calls params twice
      :method: PasswordResetsController#update
    - :type: Duplication
      :message: calls params[:user] twice
      :method: PasswordResetsController#update
  - :file_path: app/controllers/precincts_controller.rb
    :code_smells: 
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: PrecinctsController
    - :type: Duplication
      :message: calls election.ballot_style_template_id twice
      :method: PrecinctsController#ballot
    - :type: Duplication
      :message: calls election_path(election) twice
      :method: PrecinctsController#ballot
    - :type: Duplication
      :message: calls flash 3 times
      :method: PrecinctsController#ballot
    - :type: Duplication
      :message: calls new_ballot[:medium_id] twice
      :method: PrecinctsController#ballot
    - :type: Duplication
      :message: calls params twice
      :method: PrecinctsController#ballot
    - :type: Duplication
      :message: calls redirect_to(election_path(election)) twice
      :method: PrecinctsController#ballot
    - :type: LongMethod
      :message: has approx 12 statements
      :method: PrecinctsController#ballot
    - :type: Duplication
      :message: calls election.ballot_style_template_id twice
      :method: PrecinctsController#ballots
    - :type: Duplication
      :message: calls flash twice
      :method: PrecinctsController#ballots
    - :type: LongMethod
      :message: has approx 10 statements
      :method: PrecinctsController#ballots
    - :type: Duplication
      :message: calls params twice
      :method: PrecinctsController#update
    - :type: NestedIterators
      :message: contains iterators nested 3 deep
      :method: PrecinctsController#zip_ballots
    - :type: LowCohesion
      :message: doesn't depend on instance state
      :method: PrecinctsController#zip_ballots
    - :type: UncommunicativeName
      :message: has the variable name 'f'
      :method: PrecinctsController#zip_ballots
    - :type: LowCohesion
      :message: refers to new_ballot more than self
      :method: PrecinctsController#zip_ballots
  - :file_path: app/controllers/questions_controller.rb
    :code_smells: 
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: QuestionsController
    - :type: SimulatedPolymorphism
      :message: tests request.xhr? at least 5 times
      :method: QuestionsController
    - :type: SimulatedPolymorphism
      :message: tests success at least 6 times
      :method: QuestionsController
    - :type: Duplication
      :message: calls @question.district 3 times
      :method: QuestionsController#create
    - :type: Duplication
      :message: calls dom_id(@question.district) twice
      :method: QuestionsController#create
    - :type: LongMethod
      :message: has approx 8 statements
      :method: QuestionsController#create
    - :type: LongMethod
      :message: has approx 8 statements
      :method: QuestionsController#destroy
    - :type: Duplication
      :message: calls @question.district twice
      :method: QuestionsController#new
    - :type: Duplication
      :message: calls dom_id(@question.district) twice
      :method: QuestionsController#new
    - :type: Duplication
      :message: calls params twice
      :method: QuestionsController#new
    - :type: LongMethod
      :message: has approx 6 statements
      :method: QuestionsController#new
    - :type: Duplication
      :message: calls dom_id(@question) twice
      :method: QuestionsController#update
    - :type: Duplication
      :message: calls params twice
      :method: QuestionsController#update
    - :type: LongMethod
      :message: has approx 10 statements
      :method: QuestionsController#update
  - :file_path: app/controllers/user_sessions_controller.rb
    :code_smells: []

  - :file_path: app/controllers/users_controller.rb
    :code_smells: 
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: UsersController
    - :type: Duplication
      :message: calls flash 3 times
      :method: UsersController#create
    - :type: LongMethod
      :message: has approx 8 statements
      :method: UsersController#create
    - :type: Duplication
      :message: calls params twice
      :method: UsersController#update
  - :file_path: app/controllers/voting_methods_controller.rb
    :code_smells: 
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: VotingMethodsController
    - :type: Duplication
      :message: calls params twice
      :method: VotingMethodsController#update
  - :file_path: app/helpers/application_helper.rb
    :code_smells: 
    - :type: Duplication
      :message: calls cc.contest twice
      :method: ApplicationHelper#breadcrumb_helper
    - :type: Duplication
      :message: calls cc.election twice
      :method: ApplicationHelper#breadcrumb_helper
    - :type: Duplication
      :message: calls cc.jurisdiction twice
      :method: ApplicationHelper#breadcrumb_helper
    - :type: Duplication
      :message: calls cc.precinct twice
      :method: ApplicationHelper#breadcrumb_helper
    - :type: Duplication
      :message: calls cc.question twice
      :method: ApplicationHelper#breadcrumb_helper
    - :type: LongMethod
      :message: has approx 13 statements
      :method: ApplicationHelper#breadcrumb_helper
    - :type: LowCohesion
      :message: refers to cc more than self
      :method: ApplicationHelper#breadcrumb_helper
    - :type: LongParameterList
      :message: has 5 parameters
      :method: ApplicationHelper#button_link_helper
    - :type: Duplication
      :message: calls current_context 3 times
      :method: ApplicationHelper#header_helper
    - :type: Duplication
      :message: calls district_set.icon? twice
      :method: ApplicationHelper#icon_for
    - :type: LowCohesion
      :message: refers to district_set more than self
      :method: ApplicationHelper#icon_for
    - :type: Duplication
      :message: calls DistrictSet.find(curr_jurisd) twice
      :method: ApplicationHelper#icon_helper
    - :type: Duplication
      :message: calls content_tag(:li) 5 times
      :method: ApplicationHelper#user_navigation_helper
    - :type: Duplication
      :message: calls current_user 3 times
      :method: ApplicationHelper#user_navigation_helper
    - :type: NestedIterators
      :message: contains iterators nested 3 deep
      :method: ApplicationHelper#user_navigation_helper
  - :file_path: app/helpers/ballot_style_templates_helper.rb
    :code_smells: []

  - :file_path: app/helpers/ballot_styles_helper.rb
    :code_smells: []

  - :file_path: app/helpers/candidates_helper.rb
    :code_smells: []

  - :file_path: app/helpers/contests_helper.rb
    :code_smells: []

  - :file_path: app/helpers/district_sets_helper.rb
    :code_smells: []

  - :file_path: app/helpers/district_types_helper.rb
    :code_smells: []

  - :file_path: app/helpers/districts_helper.rb
    :code_smells: []

  - :file_path: app/helpers/elections_helper.rb
    :code_smells: []

  - :file_path: app/helpers/jurisdiction_helper.rb
    :code_smells: []

  - :file_path: app/helpers/languages_helper.rb
    :code_smells: []

  - :file_path: app/helpers/maintain_helper.rb
    :code_smells: []

  - :file_path: app/helpers/media_helper.rb
    :code_smells: []

  - :file_path: app/helpers/parties_helper.rb
    :code_smells: []

  - :file_path: app/helpers/precincts_helper.rb
    :code_smells: 
    - :type: LowCohesion
      :message: doesn't depend on instance state
      :method: PrecinctsHelper#precinct_contest_count_helper
    - :type: LowCohesion
      :message: refers to elect more than self
      :method: PrecinctsHelper#precinct_contest_count_helper
    - :type: LowCohesion
      :message: doesn't depend on instance state
      :method: PrecinctsHelper#precinct_question_count_helper
    - :type: LowCohesion
      :message: refers to elect more than self
      :method: PrecinctsHelper#precinct_question_count_helper
  - :file_path: app/helpers/questions_helper.rb
    :code_smells: []

  - :file_path: app/helpers/user_sessions_helper.rb
    :code_smells: []

  - :file_path: app/helpers/users_helper.rb
    :code_smells: []

  - :file_path: app/helpers/voting_methods_helper.rb
    :code_smells: []

  - :file_path: app/models/ability.rb
    :code_smells: 
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: Ability
    - :type: ControlCouple
      :message: is controlled by argument user
      :method: Ability#initialize
  - :file_path: app/models/ballot_style.rb
    :code_smells: 
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: BallotStyle
  - :file_path: app/models/ballot_style_template.rb
    :code_smells: 
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: BallotStyleTemplate
  - :file_path: app/models/candidate.rb
    :code_smells: []

  - :file_path: app/models/contest.rb
    :code_smells: 
    - :type: UncommunicativeName
      :message: has the parameter name 'e'
      :method: Contest#self.contests_for_precinct_election
    - :type: UncommunicativeName
      :message: has the parameter name 'p'
      :method: Contest#self.contests_for_precinct_election
    - :type: UncommunicativeName
      :message: has the variable name 'c'
      :method: Contest#self.contests_for_precinct_election
    - :type: UncommunicativeName
      :message: has the variable name 'd'
      :method: Contest#self.contests_for_precinct_election
    - :type: Duplication
      :message: calls errors 5 times
      :method: Contest#validate
    - :type: LongMethod
      :message: has approx 6 statements
      :method: Contest#validate
  - :file_path: app/models/district.rb
    :code_smells: 
    - :type: UncommunicativeName
      :message: has the name 'contestsForElection'
      :method: District#contestsForElection
    - :type: UncommunicativeName
      :message: has the variable name 'c'
      :method: District#contestsForElection
    - :type: UncommunicativeName
      :message: has the name 'questionsForElection'
      :method: District#questionsForElection
    - :type: UncommunicativeName
      :message: has the variable name 'q'
      :method: District#questionsForElection
  - :file_path: app/models/district_set.rb
    :code_smells: []

  - :file_path: app/models/district_type.rb
    :code_smells: 
    - :type: Duplication
      :message: calls const_get(xml.constant_name) twice
      :method: DistrictType#DistrictType.xmlToId
    - :type: Duplication
      :message: calls xml.constant_name twice
      :method: DistrictType#DistrictType.xmlToId
    - :type: UncommunicativeName
      :message: has the name 'xmlToId'
      :method: DistrictType#DistrictType.xmlToId
    - :type: UncommunicativeName
      :message: has the name 'idToXml'
      :method: DistrictType#idToXml
  - :file_path: app/models/election.rb
    :code_smells: 
    - :type: LongMethod
      :message: has approx 6 statements
      :method: Election#comp
    - :type: UncommunicativeName
      :message: has the variable name 'f'
      :method: Election#destroy_translations
    - :type: NestedIterators
      :message: contains iterators nested 3 deep
      :method: Election#equal_contests?
    - :type: LongMethod
      :message: has approx 12 statements
      :method: Election#equal_contests?
    - :type: UncommunicativeName
      :message: has the parameter name 'election2'
      :method: Election#equal_contests?
    - :type: LowCohesion
      :message: refers to e1_contest more than self
      :method: Election#equal_contests?
    - :type: LowCohesion
      :message: refers to e2_contest more than self
      :method: Election#equal_contests?
    - :type: NestedIterators
      :message: contains iterators nested 2 deep
      :method: Election#equal_districts?
    - :type: LongMethod
      :message: has approx 9 statements
      :method: Election#equal_districts?
    - :type: UncommunicativeName
      :message: has the parameter name 'election2'
      :method: Election#equal_districts?
    - :type: LowCohesion
      :message: refers to e1_district more than self
      :method: Election#equal_districts?
    - :type: LongMethod
      :message: has approx 7 statements
      :method: Election#equal_questions?
    - :type: UncommunicativeName
      :message: has the parameter name 'election2'
      :method: Election#equal_questions?
    - :type: LowCohesion
      :message: refers to e1_question more than self
      :method: Election#equal_questions?
    - :type: LowCohesion
      :message: refers to e2_question more than self
      :method: Election#equal_questions?
    - :type: LowCohesion
      :message: doesn't depend on instance state
      :method: Election#render_ballot
    - :type: LongMethod
      :message: has approx 11 statements
      :method: Election#render_ballot
    - :type: UncommunicativeName
      :message: has the variable name 'pdfBallot'
      :method: Election#render_ballot
    - :type: LowCohesion
      :message: refers to ballot_style_template more than self
      :method: Election#render_ballot
    - :type: LowCohesion
      :message: doesn't depend on instance state
      :method: Election#render_ballots
    - :type: LongMethod
      :message: has approx 12 statements
      :method: Election#render_ballots
    - :type: UncommunicativeName
      :message: has the variable name 'pdfBallot'
      :method: Election#render_ballots
    - :type: LowCohesion
      :message: refers to ballot_style_template more than self
      :method: Election#render_ballots
    - :type: UncommunicativeName
      :message: has the variable name 's'
      :method: Election#to_s
  - :file_path: app/models/language.rb
    :code_smells: 
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: Language
  - :file_path: app/models/medium.rb
    :code_smells: 
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: Medium
  - :file_path: app/models/notifier.rb
    :code_smells: 
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: Notifier
    - :type: LongMethod
      :message: has approx 6 statements
      :method: Notifier#password_reset_instructions
  - :file_path: app/models/party.rb
    :code_smells: 
    - :type: Duplication
      :message: calls const_get(xml.constant_name) twice
      :method: Party#Party.xmlToId
    - :type: Duplication
      :message: calls xml.constant_name twice
      :method: Party#Party.xmlToId
    - :type: UncommunicativeName
      :message: has the name 'xmlToId'
      :method: Party#Party.xmlToId
    - :type: UncommunicativeName
      :message: has the name 'idToXml'
      :method: Party#idToXml
  - :file_path: app/models/precinct.rb
    :code_smells: 
    - :type: Duplication
      :message: calls dist.district_sets twice
      :method: Precinct#district_sets
    - :type: Duplication
      :message: calls dist.district_sets[0] twice
      :method: Precinct#district_sets
    - :type: LowCohesion
      :message: refers to dist more than self
      :method: Precinct#district_sets
    - :type: LowCohesion
      :message: refers to res more than self
      :method: Precinct#district_sets
  - :file_path: app/models/question.rb
    :code_smells: 
    - :type: UncommunicativeName
      :message: has the parameter name 'e'
      :method: Question#self.questions_for_precinct_election
    - :type: UncommunicativeName
      :message: has the parameter name 'p'
      :method: Question#self.questions_for_precinct_election
    - :type: UncommunicativeName
      :message: has the variable name 'd'
      :method: Question#self.questions_for_precinct_election
    - :type: UncommunicativeName
      :message: has the variable name 'q'
      :method: Question#self.questions_for_precinct_election
  - :file_path: app/models/user.rb
    :code_smells: 
    - :type: UncommunicativeName
      :message: has the variable name 'c'
      :method: User
    - :type: Duplication
      :message: calls roles twice
      :method: User#role?
  - :file_path: app/models/user_context.rb
    :code_smells: 
    - :type: Duplication
      :message: calls @session[:contest_id] twice
      :method: UserContext#contest
    - :type: ControlCouple
      :message: is controlled by argument a_contest
      :method: UserContext#contest=
    - :type: Duplication
      :message: calls @session[:election_id] twice
      :method: UserContext#election
    - :type: LongMethod
      :message: has approx 6 statements
      :method: UserContext#election=
    - :type: ControlCouple
      :message: is controlled by argument an_election
      :method: UserContext#election=
    - :type: Duplication
      :message: calls @session[:jurisdiction_id] twice
      :method: UserContext#jurisdiction
    - :type: ControlCouple
      :message: is controlled by argument a_jurisdiction
      :method: UserContext#jurisdiction=
    - :type: Duplication
      :message: calls jurisdiction twice
      :method: UserContext#jurisdiction_name
    - :type: Duplication
      :message: calls jurisdiction twice
      :method: UserContext#jurisdiction_secondary_name
    - :type: LongMethod
      :message: has approx 6 statements
      :method: UserContext#precinct=
    - :type: ControlCouple
      :message: is controlled by argument a_precinct
      :method: UserContext#precinct=
    - :type: Duplication
      :message: calls @session[:question_id] twice
      :method: UserContext#question
    - :type: ControlCouple
      :message: is controlled by argument a_question
      :method: UserContext#question=
    - :type: LongMethod
      :message: has approx 7 statements
      :method: UserContext#to_s
    - :type: UncommunicativeName
      :message: has the variable name 's'
      :method: UserContext#to_s
  - :file_path: app/models/user_role.rb
    :code_smells: 
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: UserRole
  - :file_path: app/models/user_session.rb
    :code_smells: 
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: UserSession
    - :type: Duplication
      :message: calls Election.find(@election_id) twice
      :method: UserSession#election
  - :file_path: app/models/voting_method.rb
    :code_smells: 
    - :type: Duplication
      :message: calls const_get(xml.constant_name) twice
      :method: VotingMethod#VotingMethod.xmlToId
    - :type: Duplication
      :message: calls xml.constant_name twice
      :method: VotingMethod#VotingMethod.xmlToId
    - :type: UncommunicativeName
      :message: has the name 'xmlToId'
      :method: VotingMethod#VotingMethod.xmlToId
    - :type: UncommunicativeName
      :message: has the name 'idToXml'
      :method: VotingMethod#idToXml
  - :file_path: app/ttv/abstract_ballot.rb
    :code_smells: 
    - :type: LongParameterList
      :message: has 8 parameters
      :method: AbstractBallot#self.create
    - :type: LongMethod
      :message: has approx 6 statements
      :method: AbstractBallot#self.create
    - :type: Duplication
      :message: calls election.translation_path(lang) twice
      :method: AbstractBallot#self.translate
    - :type: LongMethod
      :message: has approx 8 statements
      :method: AbstractBallot#self.translate
    - :type: ControlCouple
      :message: has boolean parameter 'no_rebuild'
      :method: AbstractBallot#self.translate
    - :type: UncommunicativeName
      :message: has the parameter name 'r'
      :method: AbstractBallot::Columns#current=
    - :type: UncommunicativeName
      :message: has the variable name 'r'
      :method: AbstractBallot::Columns#empty?
    - :type: UncommunicativeName
      :message: has the variable name 'x'
      :method: AbstractBallot::Columns#initialize
    - :type: Duplication
      :message: calls (i + 1) twice
      :method: AbstractBallot::Columns#make_wide
    - :type: LongMethod
      :message: has approx 11 statements
      :method: AbstractBallot::Columns#make_wide
    - :type: UncommunicativeName
      :message: has the variable name 'i'
      :method: AbstractBallot::Columns#make_wide
    - :type: UncommunicativeName
      :message: has the variable name 'c'
      :method: AbstractBallot::Columns#to_s
    - :type: UncommunicativeName
      :message: has the variable name 's'
      :method: AbstractBallot::Columns#to_s
    - :type: LongParameterList
      :message: has 4 parameters
      :method: AbstractBallot::Rect#self.create
    - :type: LongParameterList
      :message: has 4 parameters
      :method: AbstractBallot::Rect#self.create_wh
    - :type: UncommunicativeName
      :message: has the variable name '@c'
      :method: AbstractBallot::Renderer
    - :type: SimulatedPolymorphism
      :message: tests (curr_column == nil) at least 5 times
      :method: AbstractBallot::Renderer
    - :type: Duplication
      :message: calls columns.last twice
      :method: AbstractBallot::Renderer#end_page
    - :type: LongMethod
      :message: has approx 9 statements
      :method: AbstractBallot::Renderer#end_page
    - :type: ControlCouple
      :message: is controlled by argument last_page
      :method: AbstractBallot::Renderer#end_page
    - :type: Duplication
      :message: calls columns.next twice
      :method: AbstractBallot::Renderer#fit_width
    - :type: Duplication
      :message: calls item.min_width 4 times
      :method: AbstractBallot::Renderer#fit_width
    - :type: LongParameterList
      :message: has 4 parameters
      :method: AbstractBallot::Renderer#fit_width
    - :type: LongMethod
      :message: has approx 7 statements
      :method: AbstractBallot::Renderer#fit_width
    - :type: LowCohesion
      :message: refers to columns more than self
      :method: AbstractBallot::Renderer#fit_width
    - :type: LowCohesion
      :message: refers to curr_column more than self
      :method: AbstractBallot::Renderer#fit_width
    - :type: Duplication
      :message: calls @c.create_flow_item(contest) twice
      :method: AbstractBallot::Renderer#init_flow_items
    - :type: Duplication
      :message: calls @c.create_flow_item(question) twice
      :method: AbstractBallot::Renderer#init_flow_items
    - :type: NestedIterators
      :message: contains iterators nested 2 deep
      :method: AbstractBallot::Renderer#init_flow_items
    - :type: LongMethod
      :message: has approx 10 statements
      :method: AbstractBallot::Renderer#init_flow_items
    - :type: UncommunicativeName
      :message: has the variable name 'a'
      :method: AbstractBallot::Renderer#init_flow_items
    - :type: UncommunicativeName
      :message: has the variable name 'b'
      :method: AbstractBallot::Renderer#init_flow_items
    - :type: Duplication
      :message: calls (curr_column == nil) 4 times
      :method: AbstractBallot::Renderer#render_everything
    - :type: Duplication
      :message: calls @c.scanner twice
      :method: AbstractBallot::Renderer#render_everything
    - :type: Duplication
      :message: calls @c.scanner.append_ballot_marks(item.ballot_marks) twice
      :method: AbstractBallot::Renderer#render_everything
    - :type: Duplication
      :message: calls @flow_items.shift 3 times
      :method: AbstractBallot::Renderer#render_everything
    - :type: Duplication
      :message: calls @page[:last_column] = curr_column 3 times
      :method: AbstractBallot::Renderer#render_everything
    - :type: Duplication
      :message: calls columns.next twice
      :method: AbstractBallot::Renderer#render_everything
    - :type: Duplication
      :message: calls fit_width(item, flow_rect, curr_column, columns) 3 times
      :method: AbstractBallot::Renderer#render_everything
    - :type: Duplication
      :message: calls item.ballot_marks twice
      :method: AbstractBallot::Renderer#render_everything
    - :type: Duplication
      :message: calls item.draw(@c, curr_column) twice
      :method: AbstractBallot::Renderer#render_everything
    - :type: Duplication
      :message: calls item.to_s twice
      :method: AbstractBallot::Renderer#render_everything
    - :type: Duplication
      :message: calls start_page twice
      :method: AbstractBallot::Renderer#render_everything
    - :type: LongMethod
      :message: has approx 28 statements
      :method: AbstractBallot::Renderer#render_everything
    - :type: Duplication
      :message: calls columns.last twice
      :method: AbstractBallot::Renderer#start_page
    - :type: LongMethod
      :message: has approx 13 statements
      :method: AbstractBallot::Renderer#start_page
    - :type: UncommunicativeName
      :message: has the variable name 'r'
      :method: AbstractBallot::WideColumn#bottom
    - :type: UncommunicativeName
      :message: has the parameter name 'x'
      :method: AbstractBallot::WideColumn#bottom=
    - :type: UncommunicativeName
      :message: has the variable name 'r'
      :method: AbstractBallot::WideColumn#bottom=
    - :type: UncommunicativeName
      :message: has the parameter name 'r'
      :method: AbstractBallot::WideColumn#index
    - :type: UncommunicativeName
      :message: has the variable name 'r'
      :method: AbstractBallot::WideColumn#initialize_copy
    - :type: UncommunicativeName
      :message: has the variable name 'r'
      :method: AbstractBallot::WideColumn#left
    - :type: UncommunicativeName
      :message: has the variable name 'r'
      :method: AbstractBallot::WideColumn#right
    - :type: UncommunicativeName
      :message: has the variable name 'r'
      :method: AbstractBallot::WideColumn#to_s
    - :type: UncommunicativeName
      :message: has the variable name 's'
      :method: AbstractBallot::WideColumn#to_s
    - :type: UncommunicativeName
      :message: has the variable name 'r'
      :method: AbstractBallot::WideColumn#top
    - :type: UncommunicativeName
      :message: has the parameter name 'x'
      :method: AbstractBallot::WideColumn#top=
    - :type: UncommunicativeName
      :message: has the variable name 'r'
      :method: AbstractBallot::WideColumn#top=
  - :file_path: app/ttv/data_layer.rb
    :code_smells: 
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: TTV::DataLayer
  - :file_path: app/ttv/import_export.rb
    :code_smells: 
    - :type: NestedIterators
      :message: contains iterators nested 3 deep
      :method: TTV::ImportExport::Export#export
    - :type: LongMethod
      :message: has approx 9 statements
      :method: TTV::ImportExport::Export#export
    - :type: UncommunicativeName
      :message: has the name 'exportCandidate'
      :method: TTV::ImportExport::Export#exportCandidate
    - :type: LowCohesion
      :message: refers to candidate more than self
      :method: TTV::ImportExport::Export#exportCandidate
    - :type: Duplication
      :message: calls contest.candidates twice
      :method: TTV::ImportExport::Export#exportContest
    - :type: NestedIterators
      :message: contains iterators nested 3 deep
      :method: TTV::ImportExport::Export#exportContest
    - :type: UncommunicativeName
      :message: has the name 'exportContest'
      :method: TTV::ImportExport::Export#exportContest
    - :type: LowCohesion
      :message: refers to contest more than self
      :method: TTV::ImportExport::Export#exportContest
    - :type: NestedIterators
      :message: contains iterators nested 2 deep
      :method: TTV::ImportExport::Export#exportDistrict
    - :type: UncommunicativeName
      :message: has the name 'exportDistrict'
      :method: TTV::ImportExport::Export#exportDistrict
    - :type: LowCohesion
      :message: refers to district more than self
      :method: TTV::ImportExport::Export#exportDistrict
    - :type: NestedIterators
      :message: contains iterators nested 2 deep
      :method: TTV::ImportExport::Export#exportDistrictSet
    - :type: UncommunicativeName
      :message: has the name 'exportDistrictSet'
      :method: TTV::ImportExport::Export#exportDistrictSet
    - :type: UncommunicativeName
      :message: has the name 'exportPrecinct'
      :method: TTV::ImportExport::Export#exportPrecinct
    - :type: LowCohesion
      :message: refers to precinct more than self
      :method: TTV::ImportExport::Export#exportPrecinct
    - :type: NestedIterators
      :message: contains iterators nested 2 deep
      :method: TTV::ImportExport::Export#exportQuestion
    - :type: UncommunicativeName
      :message: has the name 'exportQuestion'
      :method: TTV::ImportExport::Export#exportQuestion
    - :type: UncommunicativeName
      :message: has the variable name '@importIdDistrictMap'
      :method: TTV::ImportExport::Import
    - :type: UncommunicativeName
      :message: has the variable name '@precinctsMasterList'
      :method: TTV::ImportExport::Import
    - :type: UncommunicativeName
      :message: has the name 'createPrecinct'
      :method: TTV::ImportExport::Import#createPrecinct
    - :type: UncommunicativeName
      :message: has the parameter name 'precinctsMasterList'
      :method: TTV::ImportExport::Import#createPrecinct
    - :type: UncommunicativeName
      :message: has the variable name 'newPrecinct'
      :method: TTV::ImportExport::Import#createPrecinct
    - :type: LowCohesion
      :message: refers to newPrecinct more than self
      :method: TTV::ImportExport::Import#createPrecinct
    - :type: LowCohesion
      :message: refers to precinctsMasterList more than self
      :method: TTV::ImportExport::Import#createPrecinct
    - :type: Duplication
      :message: calls xmlElection.attributes twice
      :method: TTV::ImportExport::Import#import
    - :type: LongMethod
      :message: has approx 9 statements
      :method: TTV::ImportExport::Import#import
    - :type: UncommunicativeName
      :message: has the variable name 'xmlElection'
      :method: TTV::ImportExport::Import#import
    - :type: Duplication
      :message: calls xmlCandidate.attributes twice
      :method: TTV::ImportExport::Import#importCandidate
    - :type: LowCohesion
      :message: doesn't depend on instance state
      :method: TTV::ImportExport::Import#importCandidate
    - :type: LongMethod
      :message: has approx 6 statements
      :method: TTV::ImportExport::Import#importCandidate
    - :type: UncommunicativeName
      :message: has the name 'importCandidate'
      :method: TTV::ImportExport::Import#importCandidate
    - :type: UncommunicativeName
      :message: has the parameter name 'xmlCandidate'
      :method: TTV::ImportExport::Import#importCandidate
    - :type: LowCohesion
      :message: refers to party more than self
      :method: TTV::ImportExport::Import#importCandidate
    - :type: LowCohesion
      :message: refers to xmlCandidate more than self
      :method: TTV::ImportExport::Import#importCandidate
    - :type: Duplication
      :message: calls xmlContest.attributes 5 times
      :method: TTV::ImportExport::Import#importContests
    - :type: NestedIterators
      :message: contains iterators nested 2 deep
      :method: TTV::ImportExport::Import#importContests
    - :type: LongMethod
      :message: has approx 6 statements
      :method: TTV::ImportExport::Import#importContests
    - :type: UncommunicativeName
      :message: has the name 'importContests'
      :method: TTV::ImportExport::Import#importContests
    - :type: UncommunicativeName
      :message: has the parameter name 'xmlContests'
      :method: TTV::ImportExport::Import#importContests
    - :type: UncommunicativeName
      :message: has the variable name 'xmlCandidate'
      :method: TTV::ImportExport::Import#importContests
    - :type: UncommunicativeName
      :message: has the variable name 'xmlContest'
      :method: TTV::ImportExport::Import#importContests
    - :type: LowCohesion
      :message: refers to xmlContest more than self
      :method: TTV::ImportExport::Import#importContests
    - :type: Duplication
      :message: calls precinctsMasterList[id] twice
      :method: TTV::ImportExport::Import#importDistrict
    - :type: Duplication
      :message: calls xmlDistrict.attributes 3 times
      :method: TTV::ImportExport::Import#importDistrict
    - :type: LongMethod
      :message: has approx 9 statements
      :method: TTV::ImportExport::Import#importDistrict
    - :type: UncommunicativeName
      :message: has the name 'importDistrict'
      :method: TTV::ImportExport::Import#importDistrict
    - :type: UncommunicativeName
      :message: has the parameter name 'precinctsMasterList'
      :method: TTV::ImportExport::Import#importDistrict
    - :type: UncommunicativeName
      :message: has the parameter name 'xmlDistrict'
      :method: TTV::ImportExport::Import#importDistrict
    - :type: UncommunicativeName
      :message: has the variable name 'importPrecincts'
      :method: TTV::ImportExport::Import#importDistrict
    - :type: UncommunicativeName
      :message: has the variable name 'xmlPrecinct'
      :method: TTV::ImportExport::Import#importDistrict
    - :type: LowCohesion
      :message: refers to xmlDistrict more than self
      :method: TTV::ImportExport::Import#importDistrict
    - :type: Duplication
      :message: calls district.importId twice
      :method: TTV::ImportExport::Import#importDistrictSet
    - :type: Duplication
      :message: calls dup.districts twice
      :method: TTV::ImportExport::Import#importDistrictSet
    - :type: Duplication
      :message: calls newDistricts.each twice
      :method: TTV::ImportExport::Import#importDistrictSet
    - :type: Duplication
      :message: calls newPrecincts[id] twice
      :method: TTV::ImportExport::Import#importDistrictSet
    - :type: Duplication
      :message: calls xmlPrecinct.attributes twice
      :method: TTV::ImportExport::Import#importDistrictSet
    - :type: NestedIterators
      :message: contains iterators nested 2 deep
      :method: TTV::ImportExport::Import#importDistrictSet
    - :type: NestedIterators
      :message: contains iterators nested 3 deep
      :method: TTV::ImportExport::Import#importDistrictSet
    - :type: LongMethod
      :message: has approx 24 statements
      :method: TTV::ImportExport::Import#importDistrictSet
    - :type: UncommunicativeName
      :message: has the name 'importDistrictSet'
      :method: TTV::ImportExport::Import#importDistrictSet
    - :type: UncommunicativeName
      :message: has the parameter name 'xmlDistricts'
      :method: TTV::ImportExport::Import#importDistrictSet
    - :type: UncommunicativeName
      :message: has the parameter name 'xmlPrecincts'
      :method: TTV::ImportExport::Import#importDistrictSet
    - :type: UncommunicativeName
      :message: has the variable name 'newDistricts'
      :method: TTV::ImportExport::Import#importDistrictSet
    - :type: UncommunicativeName
      :message: has the variable name 'newPrecincts'
      :method: TTV::ImportExport::Import#importDistrictSet
    - :type: UncommunicativeName
      :message: has the variable name 'newSet'
      :method: TTV::ImportExport::Import#importDistrictSet
    - :type: UncommunicativeName
      :message: has the variable name 'xmlDistrict'
      :method: TTV::ImportExport::Import#importDistrictSet
    - :type: UncommunicativeName
      :message: has the variable name 'xmlPrecinct'
      :method: TTV::ImportExport::Import#importDistrictSet
    - :type: LowCohesion
      :message: refers to district more than self
      :method: TTV::ImportExport::Import#importDistrictSet
    - :type: Duplication
      :message: calls xmlQuestion.attributes twice
      :method: TTV::ImportExport::Import#importQuestions
    - :type: LongMethod
      :message: has approx 9 statements
      :method: TTV::ImportExport::Import#importQuestions
    - :type: UncommunicativeName
      :message: has the name 'importQuestions'
      :method: TTV::ImportExport::Import#importQuestions
    - :type: UncommunicativeName
      :message: has the parameter name 'xmlQuestions'
      :method: TTV::ImportExport::Import#importQuestions
    - :type: UncommunicativeName
      :message: has the variable name 'xmlQuestion'
      :method: TTV::ImportExport::Import#importQuestions
    - :type: UncommunicativeName
      :message: has the variable name 'xmlText'
      :method: TTV::ImportExport::Import#importQuestions
    - :type: LowCohesion
      :message: refers to xmlQuestion more than self
      :method: TTV::ImportExport::Import#importQuestions
    - :type: Duplication
      :message: calls xmlElection.attributes twice
      :method: TTV::ImportExport::Import#import_batch
    - :type: Duplication
      :message: calls xml_file.length twice
      :method: TTV::ImportExport::Import#import_batch
    - :type: NestedIterators
      :message: contains iterators nested 2 deep
      :method: TTV::ImportExport::Import#import_batch
    - :type: LongMethod
      :message: has approx 11 statements
      :method: TTV::ImportExport::Import#import_batch
    - :type: UncommunicativeName
      :message: has the variable name 'xmlElection'
      :method: TTV::ImportExport::Import#import_batch
  - :file_path: app/ttv/pdf_ballot_style.rb
    :code_smells: 
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: PDFBallotStyle
    - :type: LongParameterList
      :message: has 7 parameters
      :method: PDFBallotStyle#self.get_ballot_config
    - :type: LongMethod
      :message: has approx 6 statements
      :method: PDFBallotStyle#self.list
    - :type: UncommunicativeName
      :message: has the variable name 'f'
      :method: PDFBallotStyle#self.list
  - :file_path: app/ttv/scanner.rb
    :code_smells: 
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: TTV::BallotMark
    - :type: UncommunicativeName
      :message: has the parameter name '*a'
      :method: TTV::BallotMark#to_json
    - :type: UncommunicativeName
      :message: has the variable name 'x'
      :method: TTV::BallotMark#to_json
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: TTV::Scanner
    - :type: Duplication
      :message: calls (@check_height + @vspace) twice
      :method: TTV::Scanner#align_checkbox
    - :type: Duplication
      :message: calls (@check_width + @hspace) twice
      :method: TTV::Scanner#align_checkbox
    - :type: Duplication
      :message: calls pdf.bounds 5 times
      :method: TTV::Scanner#align_checkbox
    - :type: Duplication
      :message: calls pdf.bounds.absolute_top 3 times
      :method: TTV::Scanner#align_checkbox
    - :type: Duplication
      :message: calls x.ceil twice
      :method: TTV::Scanner#align_checkbox
    - :type: Duplication
      :message: calls y.ceil twice
      :method: TTV::Scanner#align_checkbox
    - :type: LongMethod
      :message: has approx 10 statements
      :method: TTV::Scanner#align_checkbox
    - :type: UncommunicativeName
      :message: has the variable name 'x'
      :method: TTV::Scanner#align_checkbox
    - :type: UncommunicativeName
      :message: has the variable name 'y'
      :method: TTV::Scanner#align_checkbox
    - :type: LongParameterList
      :message: has 4 parameters
      :method: TTV::Scanner#create_ballot_mark
    - :type: Duplication
      :message: calls (72 / 4) twice
      :method: TTV::Scanner#initialize
    - :type: Duplication
      :message: calls (pdf.bounds.right - @bar_width) twice
      :method: TTV::Scanner#render_ballot_marks
    - :type: Duplication
      :message: calls pdf.bounds 4 times
      :method: TTV::Scanner#render_ballot_marks
    - :type: Duplication
      :message: calls pdf.bounds.right twice
      :method: TTV::Scanner#render_ballot_marks
    - :type: LongMethod
      :message: has approx 6 statements
      :method: TTV::Scanner#render_ballot_marks
    - :type: Duplication
      :message: calls (@check_height + @vspace) twice
      :method: TTV::Scanner#render_grid
    - :type: Duplication
      :message: calls (@check_width + @hspace) twice
      :method: TTV::Scanner#render_grid
    - :type: Duplication
      :message: calls pdf.bounds 5 times
      :method: TTV::Scanner#render_grid
    - :type: Duplication
      :message: calls pdf.bounds.top twice
      :method: TTV::Scanner#render_grid
    - :type: NestedIterators
      :message: contains iterators nested 3 deep
      :method: TTV::Scanner#render_grid
    - :type: LongMethod
      :message: has approx 9 statements
      :method: TTV::Scanner#render_grid
    - :type: UncommunicativeName
      :message: has the variable name 'i'
      :method: TTV::Scanner#render_grid
    - :type: UncommunicativeName
      :message: has the variable name 'j'
      :method: TTV::Scanner#render_grid
    - :type: UncommunicativeName
      :message: has the variable name 'x'
      :method: TTV::Scanner#render_grid
    - :type: UncommunicativeName
      :message: has the variable name 'y'
      :method: TTV::Scanner#render_grid
    - :type: LowCohesion
      :message: refers to pdf more than self
      :method: TTV::Scanner#render_grid
    - :type: UncommunicativeName
      :message: has the parameter name '*a'
      :method: TTV::Scanner#to_json
  - :file_path: app/ttv/translate.rb
    :code_smells: 
    - :type: LongMethod
      :message: has approx 14 statements
      :method: TTV::Translate#self.translate
    - :type: UncommunicativeName
      :message: has the variable name 'k'
      :method: TTV::Translate#self.translate
    - :type: UncommunicativeName
      :message: has the variable name 't'
      :method: TTV::Translate#self.translate
    - :type: UncommunicativeName
      :message: has the variable name 'v'
      :method: TTV::Translate#self.translate
    - :type: LongParameterList
      :message: has 4 parameters
      :method: TTV::Translate#self.translate_directory
    - :type: UncommunicativeName
      :message: has the variable name 'f'
      :method: TTV::Translate#self.translate_directory
    - :type: Duplication
      :message: calls File.open(dest_path, "w") twice
      :method: TTV::Translate#self.translate_file
    - :type: LongParameterList
      :message: has 4 parameters
      :method: TTV::Translate#self.translate_file
    - :type: LongMethod
      :message: has approx 7 statements
      :method: TTV::Translate#self.translate_file
    - :type: UncommunicativeName
      :message: has the variable name 'a'
      :method: TTV::Translate#self.translate_file
    - :type: UncommunicativeName
      :message: has the variable name 'b'
      :method: TTV::Translate#self.translate_file
    - :type: UncommunicativeName
      :message: has the variable name 'f'
      :method: TTV::Translate#self.translate_file
    - :type: Duplication
      :message: calls @yaml.has_key?(key) twice
      :method: TTV::Translate::ElectionTranslation#get
    - :type: Duplication
      :message: calls @yaml[key] 3 times
      :method: TTV::Translate::ElectionTranslation#get
    - :type: LongMethod
      :message: has approx 8 statements
      :method: TTV::Translate::ElectionTranslation#get
    - :type: UncommunicativeName
      :message: has the parameter name 'n'
      :method: TTV::Translate::ElectionTranslation#ordinalize
    - :type: LowCohesion
      :message: refers to n more than self
      :method: TTV::Translate::ElectionTranslation#ordinalize
    - :type: IrresponsibleModule
      :message: has no descriptive comment
      :method: TTV::Translate::YamlTranslation
  - :file_path: app/ttv/yaml_export.rb
    :code_smells: 
    - :type: Duplication
      :message: calls @elec.display_name twice
      :method: TTV::YAMLExport#do_export
    - :type: LongMethod
      :message: has approx 6 statements
      :method: TTV::YAMLExport#do_export
    - :type: Duplication
      :message: calls cand.party twice
      :method: TTV::YAMLExport#export_candidates
    - :type: LowCohesion
      :message: doesn't depend on instance state
      :method: TTV::YAMLExport#export_candidates
    - :type: LowCohesion
      :message: refers to cand more than self
      :method: TTV::YAMLExport#export_candidates
    - :type: LowCohesion
      :message: refers to cont more than self
      :method: TTV::YAMLExport#export_contests
    - :type: Duplication
      :message: calls @district_to_ident_map[dist] twice
      :method: TTV::YAMLExport#export_district_set
    - :type: Duplication
      :message: calls precinct_to_distlist[a_prec] twice
      :method: TTV::YAMLExport#export_district_set
    - :type: NestedIterators
      :message: contains iterators nested 2 deep
      :method: TTV::YAMLExport#export_district_set
    - :type: LongMethod
      :message: has approx 18 statements
      :method: TTV::YAMLExport#export_district_set
    - :type: LowCohesion
      :message: refers to question more than self
      :method: TTV::YAMLExport#export_questions
  - :file_path: app/ttv/yaml_import.rb
    :code_smells: 
    - :type: SimulatedPolymorphism
      :message: tests ballot_config? at least 3 times
      :method: TTV::YAMLImport
    - :type: Duplication
      :message: calls @yml_election["audit_header"] twice
      :method: TTV::YAMLImport#ballot_config?
    - :type: Duplication
      :message: calls @yml_election["ballot_info"] 10 times
      :method: TTV::YAMLImport#import
    - :type: Duplication
      :message: calls @yml_election["ballot_info"]["contest_list"] twice
      :method: TTV::YAMLImport#import
    - :type: Duplication
      :message: calls @yml_election["ballot_info"]["precinct_list"] twice
      :method: TTV::YAMLImport#import
    - :type: Duplication
      :message: calls @yml_election["ballot_info"]["question_list"] twice
      :method: TTV::YAMLImport#import
    - :type: Duplication
      :message: calls @yml_election["ballot_info"]["start_date"] twice
      :method: TTV::YAMLImport#import
    - :type: Duplication
      :message: calls pp(@yml_election) 3 times
      :method: TTV::YAMLImport#import
    - :type: Duplication
      :message: calls raise("Invalid YAML election. See console for details.") 3 times
      :method: TTV::YAMLImport#import
    - :type: NestedIterators
      :message: contains iterators nested 2 deep
      :method: TTV::YAMLImport#import
    - :type: LongMethod
      :message: has approx 22 statements
      :method: TTV::YAMLImport#import
    - :type: Duplication
      :message: calls @yml_election["ballot_info"] 10 times
      :method: TTV::YAMLImport#import_batch
    - :type: Duplication
      :message: calls @yml_election["ballot_info"]["contest_list"] twice
      :method: TTV::YAMLImport#import_batch
    - :type: Duplication
      :message: calls @yml_election["ballot_info"]["precinct_list"] twice
      :method: TTV::YAMLImport#import_batch
    - :type: Duplication
      :message: calls @yml_election["ballot_info"]["question_list"] twice
      :method: TTV::YAMLImport#import_batch
    - :type: Duplication
      :message: calls @yml_election["ballot_info"]["start_date"] twice
      :method: TTV::YAMLImport#import_batch
    - :type: Duplication
      :message: calls pp(@yml_election) 3 times
      :method: TTV::YAMLImport#import_batch
    - :type: Duplication
      :message: calls raise("Invalid YAML election. See console for details.") 3 times
      :method: TTV::YAMLImport#import_batch
    - :type: Duplication
      :message: calls yaml_file.length twice
      :method: TTV::YAMLImport#import_batch
    - :type: NestedIterators
      :message: contains iterators nested 3 deep
      :method: TTV::YAMLImport#import_batch
    - :type: LongMethod
      :message: has approx 24 statements
      :method: TTV::YAMLImport#import_batch
    - :type: LowCohesion
      :message: doesn't depend on instance state
      :method: TTV::YAMLImport#load_candidate
    - :type: LongMethod
      :message: has approx 7 statements
      :method: TTV::YAMLImport#load_candidate
    - :type: LowCohesion
      :message: refers to y_cand more than self
      :method: TTV::YAMLImport#load_candidate
    - :type: Duplication
      :message: calls @dist_id_map[yml_cont["district_ident"]] twice
      :method: TTV::YAMLImport#load_contest
    - :type: Duplication
      :message: calls yml_cont["district_ident"] twice
      :method: TTV::YAMLImport#load_contest
    - :type: LongMethod
      :message: has approx 13 statements
      :method: TTV::YAMLImport#load_contest
    - :type: LongMethod
      :message: has approx 10 statements
      :method: TTV::YAMLImport#load_districts
    - :type: LowCohesion
      :message: refers to yaml_prec more than self
      :method: TTV::YAMLImport#load_precinct
    - :type: Duplication
      :message: calls @dist_id_map[yml_question["district_ident"]] twice
      :method: TTV::YAMLImport#load_question
    - :type: Duplication
      :message: calls yml_question["district_ident"] 3 times
      :method: TTV::YAMLImport#load_question
    - :type: LongMethod
      :message: has approx 9 statements
      :method: TTV::YAMLImport#load_question
:roodi: 
  :problems: 
  - :file: app/helpers/application_helper.rb
    :problem: Method name "breadcrumb_helper" cyclomatic complexity is 9.  It should be 8 or less.
    :line: "81"
  - :file: app/ttv/abstract_ballot.rb
    :problem: Method name "render_everything" cyclomatic complexity is 11.  It should be 8 or less.
    :line: "328"
  - :file: app/models/election.rb
    :problem: Found = in conditional.  It should probably be an ==
    :line: "94"
  - :file: app/models/user_session.rb
    :problem: Found = in conditional.  It should probably be an ==
    :line: "8"
  - :file: app/ballots/default/ballot_config.rb
    :problem: Method name "initialize" has 7 parameters.  It should have 5 or less.
    :line: "367"
  - :file: app/ballots/nh/ballot_config.rb
    :problem: Method name "initialize" has 7 parameters.  It should have 5 or less.
    :line: "135"
  - :file: app/ballots/default/ballot_config.rb
    :problem: Case statement is missing an else clause.
    :line: "593"
  - :file: app/ballots/default/ballot_config.rb
    :problem: Module "DefaultBallot" has 591 lines.  It should have 300 or less.
    :line: "10"
  - :file: app/ttv/abstract_ballot.rb
    :problem: Module "AbstractBallot" has 378 lines.  It should have 300 or less.
    :line: "3"
  - :file: app/models/election.rb
    :problem: Block cyclomatic complexity is 6.  It should be 4 or less.
    :line: "73"
  - :file: app/ttv/yaml_import.rb
    :problem: Block cyclomatic complexity is 6.  It should be 4 or less.
    :line: "28"
  - :file: app/ttv/yaml_import.rb
    :problem: Block cyclomatic complexity is 7.  It should be 4 or less.
    :line: "63"
  - :file: app/models/district.rb
    :problem: Method name "contestsForElection" should match pattern /^[_a-z<>=\[|+-\/\*`]+[_a-z0-9_<>=~@\[\]]*[=!\?]?$/
    :line: "41"
  - :file: app/models/district.rb
    :problem: Method name "questionsForElection" should match pattern /^[_a-z<>=\[|+-\/\*`]+[_a-z0-9_<>=~@\[\]]*[=!\?]?$/
    :line: "46"
  - :file: app/models/district_type.rb
    :problem: Method name "idToXml" should match pattern /^[_a-z<>=\[|+-\/\*`]+[_a-z0-9_<>=~@\[\]]*[=!\?]?$/
    :line: "23"
  - :file: app/models/party.rb
    :problem: Method name "idToXml" should match pattern /^[_a-z<>=\[|+-\/\*`]+[_a-z0-9_<>=~@\[\]]*[=!\?]?$/
    :line: "18"
  - :file: app/models/voting_method.rb
    :problem: Method name "idToXml" should match pattern /^[_a-z<>=\[|+-\/\*`]+[_a-z0-9_<>=~@\[\]]*[=!\?]?$/
    :line: "18"
  - :file: app/ttv/import_export.rb
    :problem: Method name "importQuestions" should match pattern /^[_a-z<>=\[|+-\/\*`]+[_a-z0-9_<>=~@\[\]]*[=!\?]?$/
    :line: "15"
  - :file: app/ttv/import_export.rb
    :problem: Method name "importCandidate" should match pattern /^[_a-z<>=\[|+-\/\*`]+[_a-z0-9_<>=~@\[\]]*[=!\?]?$/
    :line: "30"
  - :file: app/ttv/import_export.rb
    :problem: Method name "importContests" should match pattern /^[_a-z<>=\[|+-\/\*`]+[_a-z0-9_<>=~@\[\]]*[=!\?]?$/
    :line: "45"
  - :file: app/ttv/import_export.rb
    :problem: Method name "createPrecinct" should match pattern /^[_a-z<>=\[|+-\/\*`]+[_a-z0-9_<>=~@\[\]]*[=!\?]?$/
    :line: "62"
  - :file: app/ttv/import_export.rb
    :problem: Method name "importDistrict" should match pattern /^[_a-z<>=\[|+-\/\*`]+[_a-z0-9_<>=~@\[\]]*[=!\?]?$/
    :line: "68"
  - :file: app/ttv/import_export.rb
    :problem: Method name "importDistrictSet" should match pattern /^[_a-z<>=\[|+-\/\*`]+[_a-z0-9_<>=~@\[\]]*[=!\?]?$/
    :line: "86"
  - :file: app/ttv/import_export.rb
    :problem: Method name "exportDistrict" should match pattern /^[_a-z<>=\[|+-\/\*`]+[_a-z0-9_<>=~@\[\]]*[=!\?]?$/
    :line: "179"
  - :file: app/ttv/import_export.rb
    :problem: Method name "exportPrecinct" should match pattern /^[_a-z<>=\[|+-\/\*`]+[_a-z0-9_<>=~@\[\]]*[=!\?]?$/
    :line: "187"
  - :file: app/ttv/import_export.rb
    :problem: Method name "exportDistrictSet" should match pattern /^[_a-z<>=\[|+-\/\*`]+[_a-z0-9_<>=~@\[\]]*[=!\?]?$/
    :line: "191"
  - :file: app/ttv/import_export.rb
    :problem: Method name "exportCandidate" should match pattern /^[_a-z<>=\[|+-\/\*`]+[_a-z0-9_<>=~@\[\]]*[=!\?]?$/
    :line: "204"
  - :file: app/ttv/import_export.rb
    :problem: Method name "exportContest" should match pattern /^[_a-z<>=\[|+-\/\*`]+[_a-z0-9_<>=~@\[\]]*[=!\?]?$/
    :line: "210"
  - :file: app/ttv/import_export.rb
    :problem: Method name "exportQuestion" should match pattern /^[_a-z<>=\[|+-\/\*`]+[_a-z0-9_<>=~@\[\]]*[=!\?]?$/
    :line: "224"
  - :file: app/ttv/translate.rb
    :problem: Rescue block should not be empty.
    :line: "129"
  - :file: app/ballots/default/ballot_config.rb
    :problem: Method "draw" has 22 lines.  It should have 20 or less.
    :line: "135"
  - :file: app/ballots/default/ballot_config.rb
    :problem: Method "draw_winner" has 38 lines.  It should have 20 or less.
    :line: "184"
  - :file: app/ballots/default/ballot_config.rb
    :problem: Method "draw_ranked" has 67 lines.  It should have 20 or less.
    :line: "225"
  - :file: app/ballots/default/ballot_config.rb
    :problem: Method "draw" has 41 lines.  It should have 20 or less.
    :line: "312"
  - :file: app/ballots/nh/ballot_config.rb
    :problem: Method "draw_column" has 37 lines.  It should have 20 or less.
    :line: "22"
  - :file: app/ballots/nh/ballot_config.rb
    :problem: Method "draw" has 48 lines.  It should have 20 or less.
    :line: "77"
  - :file: app/ballots/nh/ballot_config.rb
    :problem: Method "render_header" has 21 lines.  It should have 20 or less.
    :line: "148"
  - :file: app/ballots/nh/ballot_config.rb
    :problem: Method "page_complete" has 26 lines.  It should have 20 or less.
    :line: "186"
  - :file: app/controllers/contests_controller.rb
    :problem: Method "move" has 31 lines.  It should have 20 or less.
    :line: "118"
  - :file: app/controllers/maintain_controller.rb
    :problem: Method "import_batch" has 21 lines.  It should have 20 or less.
    :line: "27"
  - :file: app/controllers/precincts_controller.rb
    :problem: Method "ballot" has 24 lines.  It should have 20 or less.
    :line: "55"
  - :file: app/helpers/application_helper.rb
    :problem: Method "breadcrumb_helper" has 27 lines.  It should have 20 or less.
    :line: "81"
  - :file: app/models/election.rb
    :problem: Method "equal_contests?" has 26 lines.  It should have 20 or less.
    :line: "71"
  - :file: app/ttv/abstract_ballot.rb
    :problem: Method "init_flow_items" has 22 lines.  It should have 20 or less.
    :line: "212"
  - :file: app/ttv/abstract_ballot.rb
    :problem: Method "render_everything" has 49 lines.  It should have 20 or less.
    :line: "328"
  - :file: app/ttv/import_export.rb
    :problem: Method "importDistrictSet" has 38 lines.  It should have 20 or less.
    :line: "86"
  - :file: app/ttv/yaml_export.rb
    :problem: Method "export_district_set" has 37 lines.  It should have 20 or less.
    :line: "90"
  - :file: app/ttv/yaml_import.rb
    :problem: Method "import" has 31 lines.  It should have 20 or less.
    :line: "25"
  - :file: app/ttv/yaml_import.rb
    :problem: Method "import_batch" has 38 lines.  It should have 20 or less.
    :line: "60"
  - :file: app/ttv/yaml_import.rb
    :problem: Method "load_contest" has 26 lines.  It should have 20 or less.
    :line: "135"
  - :file: app/ttv/yaml_import.rb
    :problem: Method "load_districts" has 21 lines.  It should have 20 or less.
    :line: "203"
  :total: 
  - Found 51 errors.
:stats: 
  :testLOC: 1682
  :lines: 
  - :methods: 145
    :classes: 20
    :lines: 1545
    :methods_per_class: 7
    :name: Controllers
    :loc_per_method: 6
    :loc: 1222
  - :methods: 11
    :classes: 0
    :lines: 167
    :methods_per_class: 0
    :name: Helpers
    :loc_per_method: 10
    :loc: 140
  - :methods: 61
    :classes: 20
    :lines: 782
    :methods_per_class: 3
    :name: Models
    :loc_per_method: 5
    :loc: 458
  - :methods: 0
    :classes: 0
    :lines: 0
    :methods_per_class: 0
    :name: Libraries
    :loc_per_method: 0
    :loc: 0
  - :methods: 1
    :classes: 22
    :lines: 896
    :methods_per_class: 0
    :name: Functional tests
    :loc_per_method: 637
    :loc: 639
  - :methods: 29
    :classes: 34
    :lines: 1411
    :methods_per_class: 0
    :name: Unit tests
    :loc_per_method: 33
    :loc: 1043
  - :methods: 247
    :classes: 96
    :lines: 4801
    :methods_per_class: 2
    :name: Total
    :loc_per_method: 12
    :loc: 3502
  :code_to_test_ratio: 0.9
  :codeLOC: 1820
:saikuro: 
  :methods: []

  :classes: []

  :files: []

